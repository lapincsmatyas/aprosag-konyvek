{
    "pipes": [],
    "interfaces": [
        {
            "name": "CartItem",
            "id": "interface-CartItem-59c72f0f8609dab002604acbe67345e77ddf747770a2cb39270207922bd756f71c268063bada29a944b6a4799b630635439e48c38ce0262ca207acd8a48caed7",
            "file": "projects/aprosag-webshop/src/app/model/cart-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Item} from \"./item.model\";\r\n\r\nexport interface ShippingType {\r\n  name: string,\r\n  value: number\r\n}\r\n\r\n  export interface CartItem {\r\n    item: Item;\r\n    amount: number;\r\n  }\r\n\r\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CartItemDto",
            "id": "interface-CartItemDto-94e36ab1e4ecf04105b8a21e70fb54ebe7c81e3d33a006211f4d121ba69e488f7532dde4adcc3260d593e58aad43143144051b6cb8af1f4ef1b5a40177c3c8be",
            "file": "projects/aprosag-webshop/src/app/model/dto/cart.dto.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface CartItemDto {\r\n  id: string,\r\n  amount: number\r\n}\r\n",
            "properties": [
                {
                    "name": "amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ItemDto",
            "id": "interface-ItemDto-d62d3e274d3a259a277c2fe0f725ee9814ceb13a44e626bd08415ab90e2b08e3bb19da6841b74a2125563e2a5c61b38b0659a2741e55873e58b649a5bfae5f7b",
            "file": "projects/aprosag-webshop/src/app/model/dto/item.dto.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export enum COVER_TYPE {\r\n  HARD_COVER,\r\n  SOFT_COVER\r\n}\r\n\r\nexport interface ItemDto {\r\n  id?: string,\r\n  title?: string,\r\n  subtitle?: string,\r\n  common_id?: string,\r\n  description?: string,\r\n  page_count?: number,\r\n  cover_type?: COVER_TYPE,\r\n  ISBN?: string,\r\n  weight?: number,\r\n  publication_date?: number,\r\n  storage_amount?: number,\r\n  price?: number,\r\n  discount_price?: number,\r\n  discount_percentage?: number,\r\n  image_urls?: any[]\r\n}\r\n",
            "properties": [
                {
                    "name": "common_id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "cover_type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "COVER_TYPE",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "discount_percentage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "discount_price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "image_urls",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "ISBN",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "page_count",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "publication_date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "storage_amount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Newsletter",
            "id": "interface-Newsletter-d4214be5d1fb489aeff137eaf059bcfcc005f4ce3b5219aefcb5bcb322282224abd91dd23b4624ac31fe31a96e0996233b10d508a95d4c38a20615c3d4c9e9ea",
            "file": "projects/aprosag-webshop/src/app/model/newsletter.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Newsletter {\r\n  emailAddress?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "emailAddress",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Order",
            "id": "interface-Order-f11fe4cc392f235b980535b86488fc757d1a12e84cb051219a448a42a720c65765b7d28cd61afe87c3638350918c2b4e070555a17dd80525824d69432be93aff",
            "file": "projects/aprosag-webshop/src/app/model/order.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {User} from \"./user.model\";\r\nimport {CartItem, ShippingType} from \"./cart-item.model\";\r\nimport {Timestamp} from \"@firebase/firestore\";\r\n\r\nexport enum OrderState {\r\n  SENT= \"SENT\"\r\n}\r\n\r\nexport interface Order {\r\n  orderId?: string;\r\n  orderNumber?: number;\r\n  user?: User;\r\n  date?: Timestamp;\r\n  state?: OrderState;\r\n  cart?: CartItem[];\r\n  price?: number;\r\n  shippingType?: ShippingType;\r\n  paymentType?: PaymentType;\r\n}\r\n\r\nexport interface PaymentType {\r\n  name: string;\r\n  description: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "cart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CartItem[]",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Timestamp",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "orderId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "orderNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "paymentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PaymentType",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "price",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "shippingType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ShippingType",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OrderState",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User",
                    "optional": true,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PaymentType",
            "id": "interface-PaymentType-f11fe4cc392f235b980535b86488fc757d1a12e84cb051219a448a42a720c65765b7d28cd61afe87c3638350918c2b4e070555a17dd80525824d69432be93aff",
            "file": "projects/aprosag-webshop/src/app/model/order.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {User} from \"./user.model\";\r\nimport {CartItem, ShippingType} from \"./cart-item.model\";\r\nimport {Timestamp} from \"@firebase/firestore\";\r\n\r\nexport enum OrderState {\r\n  SENT= \"SENT\"\r\n}\r\n\r\nexport interface Order {\r\n  orderId?: string;\r\n  orderNumber?: number;\r\n  user?: User;\r\n  date?: Timestamp;\r\n  state?: OrderState;\r\n  cart?: CartItem[];\r\n  price?: number;\r\n  shippingType?: ShippingType;\r\n  paymentType?: PaymentType;\r\n}\r\n\r\nexport interface PaymentType {\r\n  name: string;\r\n  description: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Roles",
            "id": "interface-Roles-f7b9d54db445e447bc3d823077e47bf5bc9a854e68798f317f7d2d188295b45298a8256cdd5721ac3fa2b7ad584625e6f3b5b54e8e5931893d43e2057e450df4",
            "file": "projects/aprosag-webshop/src/app/model/roles.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Roles {\r\n  admin?:boolean;\r\n  user?: boolean;\r\n}\r\n",
            "properties": [
                {
                    "name": "admin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "user",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ShippingType",
            "id": "interface-ShippingType-59c72f0f8609dab002604acbe67345e77ddf747770a2cb39270207922bd756f71c268063bada29a944b6a4799b630635439e48c38ce0262ca207acd8a48caed7",
            "file": "projects/aprosag-webshop/src/app/model/cart-item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Item} from \"./item.model\";\r\n\r\nexport interface ShippingType {\r\n  name: string,\r\n  value: number\r\n}\r\n\r\n  export interface CartItem {\r\n    item: Item;\r\n    amount: number;\r\n  }\r\n\r\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "UserDto",
            "id": "interface-UserDto-d57726c44487517379f2bab2b8071765e802fa3c1faa990c8c4baf3c3556aa064f1f801328ee2554a2776705ef8f53c6b11d32bf271caefaf4ed4bb1ff802b78",
            "file": "projects/aprosag-webshop/src/app/model/dto/user.dto.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {Roles} from \"../roles.model\";\r\nimport {CartItemDto} from \"./cart.dto\";\r\n\r\nexport interface UserDto {\r\n  uid?: string | null;\r\n  email?: string | null;\r\n  roles?: Roles;\r\n  password?: string | null;\r\n  username?: string | null;\r\n  lastName?: string | null;\r\n  firstName?: string | null;\r\n  companyName?: string | null;\r\n  taxNumber?: string | null;\r\n  country?: string | null;\r\n  city?: string | null;\r\n  address?: string | null;\r\n  zipCode?: string | null;\r\n  phoneNumber?: string | null;\r\n  emailVerified?: boolean | null;\r\n  cart?: CartItemDto[] | null;\r\n}\r\n",
            "properties": [
                {
                    "name": "address",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "cart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CartItemDto[] | null",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "city",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "companyName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "country",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "email",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "emailVerified",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | null",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "firstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "lastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "phoneNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "roles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Roles",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "taxNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "uid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "username",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "zipCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AppService",
            "id": "injectable-AppService-b8f250609322248557cfe459f3ec0cc896e3851fc7dbd86ab3bce9ecf570e4754d17407e9f86c789c4eab6c897faa5a32c1b0477c06d5510c1bcaf23044349ab",
            "file": "projects/aprosag-webshop/src/app/services/app/app.service.ts",
            "properties": [
                {
                    "name": "menuOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "methods": [
                {
                    "name": "openMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sendEmail",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {of} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AppService {\r\n  menuOpen: boolean = false;\r\n\r\n  constructor() { }\r\n\r\n  openMenu() {\r\n    this.menuOpen = !this.menuOpen;\r\n  }\r\n\r\n  sendEmail() {\r\n    return of(true);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "type": "injectable"
        },
        {
            "name": "AuthService",
            "id": "injectable-AuthService-48b4ca06efd69d260dddb86fb1fc8874d8916c5395e271355ca132b66846fabf7243417c92b3e27882c85ef64e849c4fa12fad5bd503f26007c41b769777f7a1",
            "file": "projects/aprosag-webshop/src/app/services/auth/auth.service.ts",
            "properties": [
                {
                    "name": "user$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<UserDto | null>",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methods": [
                {
                    "name": "login",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sendEmailVerification",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "signup",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "password",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\nimport {Observable, of} from \"rxjs\";\r\nimport {switchMap} from \"rxjs/operators\";\r\nimport {\r\n  Auth,\r\n  authState,\r\n  createUserWithEmailAndPassword,\r\n  sendEmailVerification,\r\n  signInWithEmailAndPassword\r\n} from \"@angular/fire/auth\";\r\nimport {arrayUnion, collection, doc, docData, Firestore, setDoc, updateDoc} from \"@angular/fire/firestore\";\r\nimport {CollectionReference} from \"@firebase/firestore\";\r\nimport {DocumentData, DocumentReference} from \"@angular/fire/compat/firestore\";\r\nimport {Router} from \"@angular/router\";\r\nimport {Item} from \"../../model/item.model\";\r\nimport {UserDto} from \"../../model/dto/user.dto\";\r\nimport {UserService} from \"../user/user.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  user$: Observable<UserDto | null>;\r\n\r\n  constructor(private auth: Auth,\r\n              private router: Router) {\r\n    this.user$ = authState(auth);\r\n  }\r\n\r\n  sendEmailVerification() {\r\n    return authState(this.auth).pipe(\r\n      switchMap((user) => {\r\n        if (user) {\r\n          return of(sendEmailVerification(user));\r\n        } else {\r\n          return of(null);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  signup(email: string, password: string) {\r\n    return createUserWithEmailAndPassword(this.auth, email, password).then((credential) => {\r\n        sendEmailVerification(credential.user)\r\n      }\r\n    );\r\n  }\r\n\r\n  login(email: string, password: string) {\r\n    return signInWithEmailAndPassword(this.auth, email, password)\r\n  }\r\n\r\n  logout() {\r\n    return this.auth.signOut().then(() => {\r\n      this.router.navigateByUrl('login');\r\n    });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "auth",
                        "type": "Auth",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "auth",
                        "type": "Auth",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "CartService",
            "id": "injectable-CartService-f5eff94bca489faa32c19d7b0d392a1394736041e3bb8eb18f6f88194b1f5eb59cd9db3f393ef63b07eff8c68b1e97c8ae30c7ea33b6c3b161e7494f07098860",
            "file": "projects/aprosag-webshop/src/app/services/cart/cart.service.ts",
            "properties": [
                {
                    "name": "cart",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | CartItem>",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "selectedShippingType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ShippingType | null",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "shippingTypes",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ShippingType[]",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "addItemToCart",
                    "args": [
                        {
                            "name": "item",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "amount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "CartItem",
                    "typeParameters": [],
                    "line": 83,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "amount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "emptyCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 132,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "initCart",
                    "args": [
                        {
                            "name": "cartItems",
                            "type": "CartItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 77,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "cartItems",
                            "type": "CartItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "[]",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeAllOfTypeFromCart",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 98,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeItemCart",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "CartItem | null",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateStorage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "updateUserCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 141,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\nimport {CartItem, ShippingType} from \"../../model/cart-item.model\";\r\nimport {Item} from \"../../model/item.model\";\r\nimport {UserService} from \"../user/user.service\";\r\nimport {CartItemDto} from \"../../model/dto/cart.dto\";\r\nimport {ItemsService} from \"../item/items.service\";\r\nimport {AuthService} from \"../auth/auth.service\";\r\n\r\nconst CART_KEY = 'aprosag_cart';\r\n\r\nconst shippingTypes: ShippingType[] = [\r\n  {name: \"Házhozszállítás GLS-sel\", value: 1490},\r\n  {name: \"Foxspost csomagautomata\", value: 700},\r\n  {name: \"Személyes átvétel Mosonmagyaróváron\", value: 0}\r\n]\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CartService {\r\n\r\n\r\n  private cart: Map<string, CartItem>;\r\n\r\n  public shippingTypes: ShippingType[] = [];\r\n\r\n  public selectedShippingType: ShippingType | null;\r\n\r\n  get items(): CartItem[] {\r\n    return Array.from(this.cart.values());\r\n  }\r\n\r\n  get valid(): boolean {\r\n    return this.selectedShippingType != null && this.count > 0;\r\n  }\r\n\r\n  get count(): number {\r\n    if (!this.cart) return 0;\r\n\r\n    let count = 0;\r\n    for (let [key, value] of this.cart) {\r\n      count += value.amount;\r\n    }\r\n    return count;\r\n  }\r\n\r\n  get value(): number {\r\n    return Array.from(this.cart.values()).reduce((previousPrice, item) => {\r\n      let actualPrice = item?.item?.price ? (item.amount * item.item.price) : 0;\r\n      return actualPrice  + previousPrice;\r\n    }, 0)\r\n  }\r\n\r\n  constructor(private userService: UserService, private authService: AuthService) {\r\n\r\n    if (localStorage.getItem(CART_KEY))\r\n      this.cart = new Map(JSON.parse(localStorage.getItem(CART_KEY) || \"\"));\r\n    else\r\n      this.cart = new Map<string, CartItem>();\r\n\r\n    this.shippingTypes = shippingTypes;\r\n    this.selectedShippingType = null;\r\n\r\n    this.userService.user.subscribe((user) => {\r\n      if(user){\r\n        if(this.cart.size > 0){\r\n          this.initCart(Array.from(this.cart.values()))\r\n          this.updateUserCart();\r\n        } else {\r\n          this.initCart(user.cart);\r\n        }\r\n      }\r\n    })\r\n\r\n  }\r\n\r\n  initCart(cartItems: CartItem[] = []){\r\n    cartItems.forEach((cartItem) => {\r\n      this.cart.set(cartItem.item.id, cartItem);\r\n    })\r\n  }\r\n\r\n  addItemToCart(item: Item, amount: number): CartItem {\r\n    const cartItem = this.cart.get(item.id);\r\n\r\n    let updatedCartItem = cartItem === undefined ?\r\n      {item, amount} :\r\n      {item, amount: cartItem.amount + amount};\r\n\r\n    this.cart.set(item.id, updatedCartItem);\r\n\r\n    this.updateStorage();\r\n    this.updateUserCart();\r\n\r\n    return updatedCartItem\r\n  }\r\n\r\n  removeAllOfTypeFromCart(item: CartItem) {\r\n    const id = item.item.id;\r\n    if (!id)\r\n      return;\r\n\r\n    let cartItem = this.cart.get(id)\r\n\r\n    if (!cartItem)\r\n      return;\r\n\r\n    this.cart.delete(id);\r\n\r\n    this.updateStorage();\r\n    this.updateUserCart();\r\n  }\r\n\r\n  removeItemCart(item: CartItem): CartItem | null {\r\n    let cartItem = this.cart.get(item.item.id);\r\n    if (cartItem === undefined)\r\n      return null;\r\n\r\n    cartItem.amount = cartItem.amount - 1;\r\n    if (cartItem.amount == 0) {\r\n      this.cart.delete(item.item.id);\r\n    } else {\r\n      this.cart.set(item.item.id, cartItem);\r\n    }\r\n\r\n    this.updateStorage();\r\n    this.updateUserCart();\r\n\r\n    return cartItem;\r\n  }\r\n\r\n  emptyCart() {\r\n    this.cart.clear();\r\n    this.updateStorage();\r\n  }\r\n\r\n  updateStorage() {\r\n    localStorage.setItem(CART_KEY, JSON.stringify(Array.from(this.cart.entries())));\r\n  }\r\n\r\n  updateUserCart(){\r\n    if(this.userService.user.value) {\r\n      const cartItems: CartItem[] = Array.from(this.cart.values());\r\n      this.userService.updateCart(cartItems);\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 52,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "accessors": {
                "items": {
                    "name": "items",
                    "getSignature": {
                        "name": "items",
                        "type": "[]",
                        "returnType": "CartItem[]",
                        "line": 29
                    }
                },
                "valid": {
                    "name": "valid",
                    "getSignature": {
                        "name": "valid",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 33
                    }
                },
                "count": {
                    "name": "count",
                    "getSignature": {
                        "name": "count",
                        "type": "number",
                        "returnType": "number",
                        "line": 37
                    }
                },
                "value": {
                    "name": "value",
                    "getSignature": {
                        "name": "value",
                        "type": "number",
                        "returnType": "number",
                        "line": 47
                    }
                }
            },
            "type": "injectable"
        },
        {
            "name": "ImageCacheService",
            "id": "injectable-ImageCacheService-cfe2d75fa754d576be46d278217d66c189ca492f0ffe23a09fad59bd95ec14b8b5422479aa1923472bf7a760071d2f3314a09b49dcb47fc9acfa0b7872de96e5",
            "file": "projects/aprosag-webshop/src/app/services/image-cache/image-cache.service.ts",
            "properties": [
                {
                    "name": "cachedUrls",
                    "defaultValue": "new Map()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Map<string | string>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getImage",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<string>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {HttpClient} from \"@angular/common/http\";\r\nimport {map, mergeMap, take, tap, toArray} from \"rxjs/operators\";\r\nimport {getDownloadURL, ref, Storage} from \"@angular/fire/storage\";\r\nimport {from, Observable} from \"rxjs\";\r\nimport {Item} from \"../../model/item.model\";\r\nimport {collectionData} from \"@angular/fire/firestore\";\r\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageCacheService {\r\n  private cachedUrls : Map<string, string> = new Map();\r\n\r\n  constructor(private http: HttpClient, private fireStorage: Storage, private sanitizer: DomSanitizer) {\r\n  }\r\n\r\n  async getImage(url: string): Promise<string> {\r\n    if(!this.cachedUrls.has(url)){\r\n      const temp = await getDownloadURL(ref(this.fireStorage, url));\r\n      this.cachedUrls.set(url, temp);\r\n      return temp;\r\n    } else {\r\n      return this.cachedUrls.get(url) || \"\";\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fireStorage",
                        "type": "Storage",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fireStorage",
                        "type": "Storage",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "sanitizer",
                        "type": "DomSanitizer",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "ItemsService",
            "id": "injectable-ItemsService-2fa6d80590e3eeb713790db900f48b97abf02186accdeb5a0a1a801ba4c6ea23990f494bd1032d23cb9a2b149716e9cde53c362d499109df83a96f9606ef80fd",
            "file": "projects/aprosag-webshop/src/app/services/item/items.service.ts",
            "properties": [
                {
                    "name": "items",
                    "defaultValue": "new BehaviorSubject<Item[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<Item[]>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "itemsData",
                    "defaultValue": "(itemsJson as any).default",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [
                {
                    "name": "getItemById",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Item | undefined",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getItemsByIds",
                    "args": [
                        {
                            "name": "ids",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Item[]",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "ids",
                            "type": "string[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "initializeItems",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\nimport {BehaviorSubject, Observable, of} from \"rxjs\";\r\nimport {Item} from \"../../model/item.model\";\r\nimport * as itemsJson from \"./items.json\"\r\nimport {addDoc, collection, Firestore, getDocs} from \"@angular/fire/firestore\";\r\nimport {ItemDto} from \"../../model/dto/item.dto\";\r\nimport {LoadingService} from \"../loading/loading.service\";\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ItemsService {\r\n  itemsData: any = (itemsJson as any).default;\r\n\r\n  public items: BehaviorSubject<Item[]> = new BehaviorSubject<Item[]>([]);\r\n\r\n  constructor(private firestore: Firestore, private loadingService: LoadingService) {\r\n    this.initializeItems();\r\n\r\n    loadingService.addProcess('get-items');\r\n    getDocs<ItemDto>(collection(firestore, `items`)).then((items) => {\r\n      loadingService.removeProcess('get-items');\r\n      this.items.next(items.docs.map((reference) => {\r\n        let item = JSON.parse(JSON.stringify(reference.data()));\r\n        return {\r\n          ...item,\r\n          id: reference.id\r\n        };\r\n      }));\r\n    })\r\n  }\r\n\r\n  getItemById(id: string): Item | undefined {\r\n\r\n    return this.items.value.find((item) => item.id === id);\r\n  }\r\n\r\n  initializeItems() {\r\n    getDocs<ItemDto>(collection(this.firestore, `items`)).then((items) => {\r\n      if (items.docs.length == 0) {\r\n        this.itemsData.forEach((itemData: any) => {\r\n          addDoc(collection(this.firestore, 'items'), itemData);\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  getItemsByIds(ids: string[]): Item[] {\r\n    if (ids?.length === 0)\r\n      return [];\r\n\r\n    return this.items.value.filter((item) => ids?.includes(item.id || \"\"));\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "firestore",
                        "type": "Firestore",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loadingService",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "firestore",
                        "type": "Firestore",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loadingService",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LoadingService",
            "id": "injectable-LoadingService-711c872ee006e517042cb8ef899035b2ce699cf67bd4f86bdf20266d8ca925114c3917ac1849aee2e258ab036696a12837c6564daef60f1dfbd3e34d92ee552b",
            "file": "projects/aprosag-webshop/src/app/services/loading/loading.service.ts",
            "properties": [
                {
                    "name": "loading",
                    "defaultValue": "new BehaviorSubject(false)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "processes",
                    "defaultValue": "new Set<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Set<string>",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "transparent",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methods": [
                {
                    "name": "addProcess",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{transparent: false}"
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "{transparent: false}",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearProcesses",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "removeProcess",
                    "args": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {BehaviorSubject} from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoadingService {\r\n  loading = new BehaviorSubject(false);\r\n  transparent = false;\r\n\r\n  processes: Set<string> = new Set<string>();\r\n\r\n  constructor() { }\r\n\r\n  addProcess(id: string, options: {transparent: boolean } = {transparent: false}){\r\n    this.processes.add(id);\r\n    this.transparent = options.transparent;\r\n    this.loading.next(true);\r\n  }\r\n\r\n  removeProcess(id: string){\r\n    this.processes.delete(id);\r\n    if(this.processes.size == 0){\r\n      this.loading.next(false);\r\n    }\r\n  }\r\n\r\n  clearProcesses(){\r\n    this.processes.clear();\r\n    this.loading.next(false);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 11
            },
            "type": "injectable"
        },
        {
            "name": "NewsletterService",
            "id": "injectable-NewsletterService-48557029df8a25622ff6b5490cd92eb522a60d6773336ffdc7489f8b7be7f7cc8c78d7c716c71a481e159890a8abb55d610cece6017c59703a0030594be0d5f2",
            "file": "projects/aprosag-webshop/src/app/services/newsletter/newsletter.service.ts",
            "properties": [
                {
                    "name": "collection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CollectionReference<Newsletter>",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        121
                    ]
                }
            ],
            "methods": [
                {
                    "name": "subscribe",
                    "args": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "email",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {of} from \"rxjs\";\r\nimport {CollectionReference} from \"@firebase/firestore\";\r\nimport {addDoc, collection, Firestore} from \"@angular/fire/firestore\";\r\nimport {Newsletter} from \"../../model/newsletter.model\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NewsletterService {\r\n  private collection: CollectionReference<Newsletter>;\r\n\r\n\r\n  constructor(private fireStore: Firestore) {\r\n    this.collection = collection(this.fireStore, 'newsletter');\r\n  }\r\n\r\n  subscribe(email: string) {\r\n    return addDoc(this.collection, { emailAddress: email });\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fireStore",
                        "type": "Firestore",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 11,
                "jsdoctags": [
                    {
                        "name": "fireStore",
                        "type": "Firestore",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "OrderService",
            "id": "injectable-OrderService-19aa17657168bbf282db31ae7a22469625dc2580dad545f931f6f21c8693782c3eb9022a6337e19d0920d3bf86a448902a12f47d74df1713b76a6117eb027e3a",
            "file": "projects/aprosag-webshop/src/app/services/order/order.service.ts",
            "properties": [
                {
                    "name": "collection",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CollectionReference<Order>",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "paymentTypes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PaymentType[]",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "selectedPaymentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PaymentType",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methods": [
                {
                    "name": "getOrders",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 78,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "placeOrder",
                    "args": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "comment",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "comment",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\nimport {Order, OrderState, PaymentType} from \"../../model/order.model\";\r\nimport {addDoc, collection, collectionData, Firestore, query, where} from \"@angular/fire/firestore\";\r\nimport {CollectionReference, Timestamp} from \"@firebase/firestore\";\r\nimport {User} from \"../../model/user.model\";\r\nimport {CartService} from \"../cart/cart.service\";\r\nimport {UserDto} from \"../../model/dto/user.dto\";\r\nimport {UserService} from \"../user/user.service\";\r\nimport {throwError} from \"rxjs\";\r\nimport {LoadingService} from \"../loading/loading.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OrderService {\r\n  private collection: CollectionReference<Order>;\r\n\r\n  paymentTypes: PaymentType[];\r\n\r\n  selectedPaymentType: PaymentType;\r\n\r\n  constructor(private fireStore: Firestore,\r\n              private cartService: CartService,\r\n              private loadingService: LoadingService,\r\n              private userService: UserService) {\r\n    this.paymentTypes = [{\r\n      name: \"Banki átutalás\",\r\n      description: \"OTP Bank (SWIFT/BIC köd: OTPVHUHB)\\n\" +\r\n        \"Horváth Áron Ferenc\\n\" +\r\n        \"11773377-00530167 (Nemzetközi utalásnál IBAN kód: HU11 11773377 00530167 00000000)\\n\" +\r\n        \"Közlemény rovatba kérjük tüntesd fel a rendelésszámot.\\n\" +\r\n        \"Ezeket az adatokat elküldjük neked emailben is!\"\r\n    }, {\r\n      name: \"Utánvét\",\r\n      description: \"Jelenleg csak személyes átvételnél választható!\\n\"\r\n    }];\r\n    this.selectedPaymentType = this.paymentTypes[0];\r\n\r\n    this.collection = collection(this.fireStore, 'orders');\r\n  }\r\n\r\n  placeOrder(user: User, comment: string) {\r\n    if (this.cartService.count == 0 || !this.cartService.selectedShippingType)\r\n      return;\r\n\r\n    const date = new Date();\r\n    const randomId = Math.floor(Math.random() * 100) + 100;\r\n    const orderNumber =\r\n      date.getFullYear().toString().slice(-2) + '' +\r\n      ('00' + date.getMonth().toString()).slice(-2) + '' +\r\n      ('00' + date.getDate().toString()).slice(-2) + '' +\r\n      ('00' + date.getHours().toString()).slice(-2) + '' +\r\n      ('00' + date.getMinutes().toString()).slice(-2) + '' +\r\n      date.getMilliseconds().toString().slice(-2) + '' +\r\n      randomId;\r\n\r\n    return addDoc(this.collection, {\r\n      user,\r\n      orderNumber: +orderNumber,\r\n      date: Timestamp.fromDate(new Date()),\r\n      state: OrderState.SENT,\r\n      price: this.cartService.value + this.cartService.selectedShippingType.value,\r\n      cart: this.cartService.items,\r\n      shippingType: this.cartService.selectedShippingType,\r\n      paymentType: this.selectedPaymentType\r\n    }).catch((error) => {\r\n      this.loadingService.removeProcess('send-order');\r\n    }).then((result) => {\r\n      return new Promise((resolve) => setTimeout(resolve, 2000))\r\n    })\r\n      .then((result) => {\r\n        this.cartService.emptyCart();\r\n        this.cartService.selectedShippingType = null;\r\n        return orderNumber;\r\n      });\r\n  }\r\n\r\n  getOrders() {\r\n    if (this.userService.user.value) {\r\n      const q = query(this.collection, where(\"user.profile.uid\", \"==\", this.userService.user.value.uid));\r\n      return collectionData(q, {idField: \"orderId\"});\r\n    } else {\r\n      throw throwError('User not found');\r\n    }\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fireStore",
                        "type": "Firestore",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loadingService",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "fireStore",
                        "type": "Firestore",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loadingService",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "UserService",
            "id": "injectable-UserService-a0956ade0b5241c4495628559e7032723b1185671640b09c030c15570389df96e8e64f359801ab094fea56075e877f6fa0159b2c06943cb1b9709be542264371",
            "file": "projects/aprosag-webshop/src/app/services/user/user.service.ts",
            "properties": [
                {
                    "name": "user",
                    "defaultValue": "new BehaviorSubject<User | null>(null)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BehaviorSubject<User | null>",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methods": [
                {
                    "name": "addOrRemoveItemAsFavorite",
                    "args": [
                        {
                            "name": "item",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 86,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createUserData",
                    "args": [
                        {
                            "name": "user",
                            "type": "UserDto",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "UserDto",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "refreshData",
                    "args": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateCart",
                    "args": [
                        {
                            "name": "cartItem",
                            "type": "CartItem[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 101,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "cartItem",
                            "type": "CartItem[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "updateUserData",
                    "args": [
                        {
                            "name": "data",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "User",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable, OnInit} from '@angular/core';\r\nimport {AuthService} from \"../auth/auth.service\";\r\nimport {User} from \"../../model/user.model\";\r\nimport {arrayRemove, arrayUnion, doc, Firestore, getDoc, setDoc, updateDoc} from \"@angular/fire/firestore\";\r\nimport {UserDto} from \"../../model/dto/user.dto\";\r\nimport {BehaviorSubject, Observable, throwError} from \"rxjs\";\r\nimport {Item} from \"../../model/item.model\";\r\nimport {CartItem} from \"../../model/cart-item.model\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  user: BehaviorSubject<User | null> = new BehaviorSubject<User | null>(null);\r\n\r\n  constructor(private authService: AuthService,\r\n              private toastr: ToastrService,\r\n              private firestore: Firestore) {\r\n    authService.user$.subscribe((userDto) => {\r\n      if (userDto !== null) {\r\n        getDoc<UserDto>(doc(firestore, `users/${userDto.uid}`)).then((userDocument) => {\r\n          const data = userDocument.data();\r\n          if (data === undefined) {\r\n            this.createUserData(userDto).then(result => {\r\n              this.user.next(result);\r\n            }).catch(() =>{\r\n              this.toastr.error('Valami hiba történt a regisztráció során!')\r\n            })\r\n          } else {\r\n            let user = JSON.parse(JSON.stringify(data));\r\n            this.user.next(user);\r\n\r\n          }\r\n        })\r\n      } else {\r\n        this.user.next(null);\r\n      }\r\n    })\r\n  }\r\n\r\n  refreshData(user: User) {\r\n    getDoc<UserDto>(doc(this.firestore, `users/${user.uid}`)).then((userDocument) => {\r\n      const data = userDocument.data();\r\n      if (data !== undefined) {\r\n        this.user.next(JSON.parse(JSON.stringify(data)));\r\n      }\r\n    })\r\n  }\r\n\r\n  createUserData(user: UserDto) {\r\n    const userData = {\r\n      uid: user.uid,\r\n      email: user.email,\r\n      roles: {\r\n        user: true\r\n      }\r\n    };\r\n\r\n    return setDoc(doc(this.firestore, `users/${user.uid}`), {\r\n      uid: user.uid,\r\n      email: user.email,\r\n      roles: {\r\n        user: true\r\n      }\r\n    }).then(() => {\r\n      let user: User = new User();\r\n      user.uid = userData.uid || \"\";\r\n      user.email = userData.email || \"\";\r\n      user.roles = userData.roles;\r\n      return user;\r\n    });\r\n  }\r\n\r\n  updateUserData(data: User) {\r\n    if (this.user.value) {\r\n      return updateDoc(doc(this.firestore, `users/${this.user.value.uid}`), {...data}).then(result => {\r\n        this.user.next({...data, uid: this.user.value?.uid || \"\"});\r\n        return result;\r\n      });\r\n    } else {\r\n      throw throwError('User not found');\r\n    }\r\n  }\r\n\r\n  addOrRemoveItemAsFavorite(item: Item) {\r\n    if (this.user.value === null) {\r\n      throw throwError('User not found');\r\n    }\r\n\r\n    const alreadyFavorite = this.user.value?.favorites?.includes(item.id || \"\");\r\n\r\n    return updateDoc(doc(this.firestore, `users/${this.user.value.uid}`), {\r\n      favorites: alreadyFavorite ? arrayRemove(item.id || \"\") : arrayUnion(item.id)\r\n    }).then((result) => {\r\n      if (this.user.value)\r\n        this.refreshData(this.user.value);\r\n    })\r\n  }\r\n\r\n  updateCart(cartItem: CartItem[]) {\r\n    if (this.user.value === null) {\r\n      throw throwError('User not found');\r\n    }\r\n\r\n    return updateDoc(doc(this.firestore, `users/${this.user.value.uid}`), {\r\n      cart: cartItem\r\n    }).then(() => {\r\n    })\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "firestore",
                        "type": "Firestore",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "firestore",
                        "type": "Firestore",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "CashDeskGuardGuard",
            "id": "injectable-CashDeskGuardGuard-26d4cc339ca07ecd16ca42514fe111057eeb7ccef44a2d8cf0747e0847e9e88d994df0ee2393c91eaac143d21337fd8d9e275c184cf5c99c70c4a832b13fd32f",
            "file": "projects/aprosag-webshop/src/app/shared/guards/cash-desk-guard.guard.ts",
            "properties": [],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean | UrlTree",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport {CartService} from \"../../services/cart/cart.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CashDeskGuardGuard implements CanActivate {\r\n  constructor(private cartService: CartService, private router: Router) {\r\n  }\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    /*\r\n        if(!this.cartService.valid){\r\n          this.router.navigateByUrl('items');\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n\r\n     */\r\n    return true;\r\n  }\r\n\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 9,
                "jsdoctags": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        },
        {
            "name": "ItemsResolverResolver",
            "id": "injectable-ItemsResolverResolver-3b3a612a3425579211e1a87e6acbe8f99d7909f19948e513c00f3f13209c37f7e0a11df68ac66663c2c3336633178ecefc79527dc785c7b9ae97a25b1f6adf29",
            "file": "projects/aprosag-webshop/src/app/shared/resolvers/items-resolver.resolver.ts",
            "properties": [],
            "methods": [
                {
                    "name": "resolve",
                    "args": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<Item[]>",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable} from '@angular/core';\r\nimport {\r\n  Router, Resolve,\r\n  RouterStateSnapshot,\r\n  ActivatedRouteSnapshot\r\n} from '@angular/router';\r\nimport {Observable, of} from 'rxjs';\r\nimport {ItemsService} from \"../../services/item/items.service\";\r\nimport {Item} from \"../../model/item.model\";\r\nimport {delay, map, take} from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ItemsResolverResolver implements Resolve<Item[]> {\r\n  constructor(private itemService: ItemsService) {\r\n  }\r\n\r\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<Item[]> {\r\n    /* return this.itemService.getAllItems().pipe(\r\n      take(1)\r\n    ); */\r\n    return of([]);\r\n  }\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "itemService",
                        "type": "ItemsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "itemService",
                        "type": "ItemsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [
        {
            "name": "Item",
            "id": "class-Item-c9304c66aee2a60e6520337fe46bb15dbd6370b27df61af9d1edafe707436fae4eefbc38bdb4b23a028372271c125548e10c5691016d469bb6887796f1351a12",
            "file": "projects/aprosag-webshop/src/app/model/item.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export enum COVER_TYPE {\r\n  HARD_COVER,\r\n  SOFT_COVER\r\n}\r\n\r\nexport class Item {\r\n  id: string = \"\";\r\n  title: string = \"\";\r\n  subtitle: string = \"\";\r\n  description: string = \"\";\r\n  page_count: number = -0;\r\n  cover_type: COVER_TYPE = COVER_TYPE.HARD_COVER;\r\n  ISBN: string = \"\";\r\n  weight: number = -1;\r\n  publication_date: number = -1;\r\n  storage_amount: number = -1;\r\n  price: number = -1;\r\n  discount_price: number = -1;\r\n  discount_percentage: number = -1;\r\n  image_urls: any[] = [];\r\n}\r\n",
            "properties": [
                {
                    "name": "cover_type",
                    "defaultValue": "COVER_TYPE.HARD_COVER",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "COVER_TYPE",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "description",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "discount_percentage",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "discount_price",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "id",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "image_urls",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "ISBN",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "page_count",
                    "defaultValue": "-0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "price",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "publication_date",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "storage_amount",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "subtitle",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "weight",
                    "defaultValue": "-1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "User",
            "id": "class-User-8bac89c36f18f0427b44bbbef6d2840dc34feef89355812c3931a27a25c5d3f8fb58909601ccd00d79f138e5848eb3f1ea389495ea37024921c7a4da44db6399",
            "file": "projects/aprosag-webshop/src/app/model/user.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import {Roles} from \"./roles.model\";\r\nimport {CartItem} from \"./cart-item.model\";\r\n\r\nexport class User {\r\n  uid: string = \"\";\r\n  email: string = \"\";\r\n  roles: Roles = {user: true};\r\n  password: string = \"\";\r\n  username: string = \"\";\r\n  lastName: string = \"\";\r\n  firstName: string = \"\";\r\n  companyName: string = \"\";\r\n  taxNumber: string = \"\";\r\n  country: string = \"\";\r\n  city: string = \"\";\r\n  address: string = \"\";\r\n  zipCode: string = \"\";\r\n  phoneNumber: string = \"\";\r\n  emailVerified: boolean = false;\r\n  favorites: string[] = [];\r\n  cart: CartItem[] = [];\r\n}\r\n",
            "properties": [
                {
                    "name": "address",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "cart",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CartItem[]",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "city",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "companyName",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "country",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "email",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "emailVerified",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "favorites",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "firstName",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "lastName",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "password",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "phoneNumber",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "roles",
                    "defaultValue": "{user: true}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Roles",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "taxNumber",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "uid",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "username",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "zipCode",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AboutUsComponent",
            "id": "component-AboutUsComponent-0d1073992bd537c90c0644a074c50b4abf1827910f6436cd5f9eff7a956881bfa50487ea9c9a794d8530421d4e74d4f7373dae64b384ec84a542be1e1b147b6a",
            "file": "projects/aprosag-webshop/src/app/pages/about-us/about-us.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-about-us",
            "styleUrls": [
                "./about-us.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./about-us.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'aprosag-about-us',\r\n  templateUrl: './about-us.component.html',\r\n  styleUrls: ['./about-us.component.scss']\r\n})\r\nexport class AboutUsComponent {\r\n\r\n  constructor() { }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n.about-us-page-container {\r\n  font-family: lato, Helvetica, sans-serif;\r\n  font-weight: 800;\r\n  color: $font-color;\r\n  height: 100%;\r\n\r\n  @include background('/assets/Backgrounds/About_us_BG.svg');\r\n\r\n  .about-us-container {\r\n    @include pagesize;\r\n\r\n    margin: 0 auto;\r\n    margin-bottom: 180px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .title {\r\n      @include title;\r\n    }\r\n\r\n    .about-us-text {\r\n      font-weight: normal;\r\n      font-size: 18px;\r\n      text-align: center;\r\n\r\n      margin-bottom: 48px;\r\n    }\r\n\r\n    .person-container {\r\n      display: flex;\r\n      font-weight: normal;\r\n      font-size: 18px;\r\n      row-gap: 45px;\r\n\r\n      @media (max-width: $breakpoint-sm) {\r\n        flex-direction: column;\r\n      }\r\n\r\n      .person {\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        margin: 0 15px;\r\n        flex: 1 1 0px;\r\n        min-width: calc(33% - 3* 15px);\r\n\r\n        .subtitle {\r\n          @include subtitle;\r\n        }\r\n\r\n        .image {\r\n          width: 100%;\r\n\r\n        }\r\n\r\n        .text{\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./about-us.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<div class=\"about-us-page-container\">\r\n  <div class=\"about-us-container\">\r\n    <div class=\"title\">Rólunk</div>\r\n    <div class=\"about-us-text\">\r\n      <p>Mi vagyunk az Apróság Könyvek szerzői, akik igyekszünk minél több mosolyt csalni a gyermekek arcára. Egy vidám és kreatív mosonmagyaróvári család vagyunk, akik 2017-ben egy mesekönyvvel leptük meg a legújabb családtagunkat karácsonyra. Aztán a másodikat is két évvel később. Majd jött a harmadik…..a negyedik. A versek és mesék pedig csak gyarapodtak az évek alatt. A nagy sikernek és jó visszhangnak köszönhetően aztán 2020-ban vettük a bátorságot és belevágtunk a könyvkiadásba és megszületett az Apróság Könyvek.</p>\r\n      <p>Feri papa írja a verseket rendületlenül, Áron győzi illusztrálni a sok-sok állatot vagy ami éppen édesapja eszébe jut, Niki pedig igyekszik a lehető leggyönyörűbben kicsinosítani a rajzokat és marketinganyagokat, két kisfiú nevelése mellett. Számunkra mindig a család és a gyerekek az elsők, ezért is szeretnénk könyveinkkel egy kis vidámságot és szórakozást vinni az életükbe úgy, hogy azért tanítson is nekik egy-két dolgot. Ahogy időnk engedi igyekszünk megvalósítani ötleteinket, ugyanis jó pár lapul még a tarsolyunkban és garantáljuk, hogy ez még csak a jéghegy csúcsa!</p>\r\n    </div>\r\n    <div class=\"person-container\">\r\n      <div class=\"person\">\r\n        <img class=\"image\" src=\"assets/About_us/Feri.jpg\"/>\r\n        <div class=\"subtitle\">Horváth Ferenc</div>\r\n        <div class=\"text\">\r\n          <p>Horváth Ferenc vagyok, férj, apa, nagyapa. Szeretem a városomat, ahol születtem és ahol élek. Humán beállítottságomnak köszönhetően nyertem országos szavalóversenyeket, Kazinczy-díjas vagyok, zenéltem, sportoltam és beutaztam a fél világot. Tevékenykedtem pedagógusként, műsorvezetőként, dolgoztam tévésként, foglalkoztam versmondókkal és színjátszókkal. Főleg magam örömére írogattam verseket, meséket, novellákat, aforizmákat. Unokáim születése óta azonban nincs fontosabb, mint az ő boldogságuk. Ha versben kell kifejezni ki is vagyok, hát íme:</p>\r\n          <p>Éltem ahogy éltem,<br/>\r\n          tettem, amit tettem.<br/>\r\n          Sok dolgot elértem,<br/>\r\n          soha nem dicsekedtem.<br/>\r\n          Volt, hogy néha eltévedtem,<br/>\r\n          de van mire büszkének lennem.<br/>\r\n          Nem díjakra és érmekre,<br/>\r\n          hanem unokákra és gyerekekre.</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"person\">\r\n        <img class=\"image\" src=\"assets/About_us/Aron.jpg\"/>\r\n        <div class=\"subtitle\">Horváth Áron Ferenc</div>\r\n        <div class=\"text\">\r\n          <p>Gyerekkorom óta hobbi szinten rajzolok, így mikor édesapám megkért, hogy illusztráljam első unokájának írt verseskönyvét nagy örömmel vállaltam.</p>\r\n          <p>Nikivel két kisfiunknak gyakran olvasunk mi is a könyveinkből és alig várjuk, hogy a nekik írt Feri papa műveket is kiadhassuk.</p>\r\n          <p>Fogtechnikusként munkám is megköveteli a jó kézügyességet és kreativitást.</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"person\">\r\n        <img class=\"image\" src=\"assets/About_us/Niki.jpg\"/>\r\n        <div class=\"subtitle\">Molnár Nikoletta</div>\r\n        <div class=\"text\">\r\n          <p>Mivel már óvodában is én rajzoltam a társaimnak a színezni való képeket, adott volt, hogy előbb-utóbb művészi pályán indulok el. A győri középiskolában a hagyományos grafikai eljárásokat, az egri egyetemen pedig a digitális tervezőgrafikát sajátítottam el, azonban a két szerelemszakmámat a munkáim során tanultam meg. A mobil alkalmazásfejlesztés rejtelmeibe Budapesten láttam bele, a számítógépes játékfejlesztést pedig Győrben és Pozsonyban ismertem meg.</p>\r\n          <p>Az Apróság Könyvek egy különleges projekt a számomra, nevelgetésénél minden tudásomra szükségem van és végtelenül hálás vagyok a létrejöttéért. Anyaként rengeteg kreatív ötletet és energiát tudok az vállalkozásunkba összpontosítani.</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "AddedToCartComponent",
            "id": "component-AddedToCartComponent-116b9333b8b7625b076610cc9ee7bc69a2dd54a8c60f4f0f07751c42d3a19b6df4d15f65fa10f208816b809d9ee51f3a03bf171b8f21e829fbcd95ade656d6b0",
            "file": "projects/aprosag-webshop/src/app/shared/popups/added-to-cart/added-to-cart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-added-to-cart",
            "styleUrls": [
                "./added-to-cart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./added-to-cart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "amount",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "item",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Item | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "backToShopping",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "goToCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {CartItem} from \"../../../model/cart-item.model\";\r\nimport {Item} from \"../../../model/item.model\";\r\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n@Component({\r\n  selector: 'aprosag-added-to-cart',\r\n  templateUrl: './added-to-cart.component.html',\r\n  styleUrls: ['./added-to-cart.component.scss']\r\n})\r\nexport class AddedToCartComponent {\r\n  @Input() public item: Item | null = null;\r\n  @Input() public amount: number = 0;\r\n\r\n  constructor(private router: Router, private modal: NgbActiveModal) { }\r\n\r\n  backToShopping() {\r\n    this.modal.close();\r\n  }\r\n\r\n  goToCart(){\r\n    this.modal.close();\r\n    this.router.navigateByUrl(\"cart\");\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/mixins\";\r\n@import \"projects/aprosag-webshop/src/variables\";\r\n\r\n.added-to-cart-modal-container {\r\n  padding: 25px;\r\n\r\n  .dialog-title {\r\n    @include title;\r\n    padding-bottom: 25px;\r\n    border-bottom: 1px solid $font-color;\r\n\r\n    @media (max-width: $breakpoint-sm) {\r\n      font-size: 18px;\r\n    }\r\n  }\r\n\r\n  .content {\r\n    border-radius: 20px;\r\n    margin-top: 25px;\r\n    display: flex;\r\n    gap: 25px;\r\n\r\n    @media (max-width: 550px) {\r\n      flex-direction: column;\r\n      align-items: center;\r\n    }\r\n\r\n    .image-container {\r\n      width: 80%;\r\n\r\n      @media (max-width: $breakpoint-sm) {\r\n        width: 50%;\r\n      }\r\n\r\n      .image {\r\n        width: 100%;\r\n      }\r\n    }\r\n\r\n    .details {\r\n      width: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 25px;\r\n\r\n      .title-container {\r\n        border-bottom: 1px solid $font-color;\r\n        width: 100%;\r\n\r\n        .title {\r\n          @include subtitle;\r\n\r\n          margin-top: 0;\r\n          @media (max-width: $breakpoint-sm) {\r\n            margin: 0;\r\n            text-align: center;\r\n\r\n          }\r\n        }\r\n\r\n        .subtitle {\r\n          @include subtitle;\r\n          font-weight: 400;\r\n\r\n          @media (max-width: $breakpoint-sm) {\r\n            margin-top: 15px;\r\n            margin-bottom: 15px;\r\n            text-align: center;\r\n\r\n          }\r\n        }\r\n      }\r\n\r\n      .split {\r\n        display: flex;\r\n        justify-content: space-between;\r\n      }\r\n\r\n      font-size: 16px;\r\n\r\n      .price-container {\r\n        display: flex;\r\n        flex-direction: column;\r\n        padding-bottom: 25px;\r\n        gap: 25px;\r\n        width: 100%;\r\n        border-bottom: 1px solid $font-color;\r\n\r\n        @media (max-width: $breakpoint-sm) {\r\n          gap: 10px;\r\n        }\r\n      }\r\n\r\n      .discount {\r\n        font-weight: bold;\r\n        margin-left: 30px;\r\n\r\n        color: $red-text;\r\n      }\r\n\r\n      .original_price {\r\n        font-weight: bold;\r\n\r\n        &.invalid {\r\n          opacity: 0.6;\r\n          text-decoration: line-through;\r\n        }\r\n      }\r\n\r\n      .sum-container {\r\n        @include subtitle;\r\n        margin-top: 20px;\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n\r\n  .button-container {\r\n    display: flex;\r\n    gap: 25px;\r\n    justify-content: space-between;\r\n\r\n    .button {\r\n      @include button;\r\n      width: 50%;\r\n\r\n      &.continue-shopping {\r\n        @include button($font-color)\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./added-to-cart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modal",
                        "type": "NgbActiveModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modal",
                        "type": "NgbActiveModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<link rel=\"stylesheet\" href=\"added-to-cart.component.scss\">\r\n<div *ngIf=\"item\" class=\"added-to-cart-modal-container\">\r\n  <div class=\"dialog-title\">Sikeresen hozzáadtad a kosaradhoz!</div>\r\n  <div class=\"content\">\r\n    <div class=\"image-container\" >\r\n      <img class=\"image\" [src]=\"'assets/' + item.image_urls?.[0]\"/>\r\n    </div>\r\n    <div class=\"details\">\r\n      <div class=\"title-container\">\r\n        <div class=\"title\">{{item.title}}</div>\r\n        <div class=\"subtitle\">{{item.subtitle}}</div>\r\n      </div>\r\n      <div class=\"price-container\">\r\n        <div class=\"split price\" *ngIf=\"item.price\">\r\n          <div class=\"price-text\">Ár</div>\r\n          <div class=\"price-amount\">\r\n              <span class=\"original_price\"\r\n                    [ngClass]=\"{'invalid': item.discount_price || item.discount_percentage}\">{{item.price + \" Ft\"}}</span>\r\n            <span *ngIf=\"item.discount_price\" class=\"discount price\">{{item.discount_price + \" Ft\"}}</span>\r\n            <span *ngIf=\"item.discount_percentage\"\r\n                  class=\"discount percentage\">{{(item.price * item.discount_percentage) + \" Ft\"}}</span>\r\n\r\n          </div>\r\n        </div>\r\n        <div class=\"split count\">\r\n          <div class=\"count-text\">Darab</div>\r\n          <div class=\"count-amount\">{{amount}} db</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"split sum-container\">\r\n        <div class=\"sum-text\">Összesen</div>\r\n        <div class=\"sum-amount\">{{(item?.price || 1) * amount}} Ft</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"button-container\">\r\n    <button class=\"button continue-shopping\" (click)=\"backToShopping()\">Vásárlás folytatása</button>\r\n    <button class=\"button\" (click)=\"goToCart()\">Tovább a kosárhoz</button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-56c3b241d03fbbe95439f95dce79a72d3493676b0dacf583586c556cb8b889843c269a8e947e84aaee926b0a8072a89b9342e953ee36d6aa971840276820cd23",
            "file": "projects/aprosag-webshop/src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "appService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AppService",
                    "optional": false,
                    "description": "",
                    "line": 47,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "authService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthService",
                    "optional": false,
                    "description": "",
                    "line": 46,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "breakpointObserver",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BreakpointObserver",
                    "optional": false,
                    "description": "",
                    "line": 49,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loadingService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LoadingService",
                    "optional": false,
                    "description": "",
                    "line": 48,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "mobile",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "userService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserService",
                    "optional": false,
                    "description": "",
                    "line": 45,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\r\nimport {ItemsService} from \"./services/item/items.service\";\r\nimport {NavigationCancel, NavigationEnd, NavigationError, NavigationStart, Router} from \"@angular/router\";\r\nimport {LoadingService} from \"./services/loading/loading.service\";\r\nimport {AppService} from \"./services/app/app.service\";\r\nimport {UserService} from \"./services/user/user.service\";\r\nimport {AuthService} from \"./services/auth/auth.service\";\r\nimport {faAddressCard} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {BreakpointObserver} from \"@angular/cdk/layout\";\r\nimport {animate, style, transition, trigger} from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'aprosag-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  animations: [\r\n    trigger(\r\n      'navigationBarAnimation',\r\n      [\r\n        transition(\r\n          ':enter',\r\n          [\r\n            style({ opacity: 0, left: '-300px' }),\r\n            animate('100ms',\r\n              style({ opacity: 1, left: 0 }))\r\n          ]\r\n        ),\r\n        transition(\r\n          ':leave',\r\n          [\r\n            style({ opacity: 1, left: 0 }),\r\n            animate('100ms',\r\n              style({ opacity: 0, left: '-300px' }))\r\n          ]\r\n        )\r\n      ]\r\n    )\r\n  ]\r\n})\r\nexport class AppComponent {\r\n  public mobile = false;\r\n\r\n  constructor(private itemsService: ItemsService,\r\n              private router: Router,\r\n              public userService: UserService,\r\n              public authService: AuthService,\r\n              public appService: AppService,\r\n              public loadingService: LoadingService,\r\n              public breakpointObserver: BreakpointObserver\r\n  ) {\r\n    this.breakpointObserver.observe('(min-width: 588px)')\r\n      .subscribe((result) => {\r\n        this.mobile = !result.matches;\r\n      })\r\n\r\n    this.router.events.subscribe((event) => {\r\n      switch (true) {\r\n        case event instanceof NavigationStart: {\r\n          this.loadingService.addProcess('navigation_start');\r\n          break;\r\n        }\r\n\r\n        case event instanceof NavigationEnd:\r\n        case event instanceof NavigationCancel:\r\n        case event instanceof NavigationError: {\r\n          this.loadingService.removeProcess('navigation_start');\r\n          break;\r\n        }\r\n        default: {\r\n          break;\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n::ng-deep {\r\n\r\n  .toast-top-right {\r\n    top: 80px;\r\n\r\n    @media (max-width: 1225px) and (min-width: 816px) {\r\n      top: 140px;\r\n    }\r\n\r\n    @media (max-width: 816px) and (min-width: 600px) {\r\n      top: 140px;\r\n    }\r\n  }\r\n\r\n  .cart-dialog {\r\n    margin-top: 80px !important;\r\n    margin-right: 30px;\r\n\r\n    @media (max-width: 1225px) and (min-width: 816px) {\r\n      margin-top: 130px !important;\r\n    }\r\n\r\n    @media (max-width: 816px) and (min-width: 600px) {\r\n      margin-top: 130px !important;\r\n\r\n    }\r\n\r\n    @media (max-width: 600px) {\r\n      margin-left: 20px;\r\n      margin-right: 20px;\r\n      width: calc(100% - 40px);\r\n    }\r\n  }\r\n\r\n  ngb-modal-window {\r\n\r\n    .modal-content {\r\n      border-radius: 30px;\r\n    }\r\n\r\n    .added-to-cart-dialog, .successful-order-dialog {\r\n      max-width: min(70%, 800px);\r\n\r\n      @media (max-width: 600px) {\r\n        margin-left: 20px;\r\n        margin-right: 20px;\r\n        max-width: calc(100% - 40px);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.app-container {\r\n\r\n  .header-container {\r\n    width: 100%;\r\n    position: sticky;\r\n    top: 0;\r\n    z-index: 1052;\r\n  }\r\n\r\n  .navigation {\r\n    width: 100%;\r\n    height: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 9998;\r\n    position: fixed;\r\n\r\n    .page-scrim {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: calc(100% + 300px);\r\n      height: 100%;\r\n      background-color: rgba(black, 0.3);\r\n    }\r\n\r\n    .side-navigation {\r\n      position: absolute;\r\n      left: 0;\r\n      top: 0;\r\n      max-width: 300px;\r\n      width: 80%;\r\n\r\n      border-right: 1px solid lightgray;\r\n      height: 100%;\r\n      transition: width 0.3s;\r\n      background-color: white;\r\n      z-index: 9999;\r\n      padding: 20px;\r\n\r\n      .header-container{\r\n        text-align: right;\r\n        cursor: pointer;\r\n      }\r\n\r\n      .buttons-container {\r\n        margin-top: 20px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 35px;\r\n\r\n        .menu-item {\r\n          text-decoration: none;\r\n          font-size: 16px;\r\n          font-weight: bold;\r\n          color: $font-color;\r\n          margin-right: 30px;\r\n          text-transform: uppercase;\r\n          padding: 10px;\r\n\r\n          &.active {\r\n            border-bottom: 4px solid $green-line;\r\n          }\r\n\r\n        }\r\n      }\r\n\r\n      .divider{\r\n        width:100%;\r\n        height:2px;\r\n        background-color: rgba(black, 0.1);\r\n      }\r\n\r\n      .user-container{\r\n        .menu-item{\r\n          font-size: 12px;\r\n\r\n        }\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 35px;\r\n\r\n      }\r\n    }\r\n\r\n    .page {\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: space-between;\r\n      height: 100%;\r\n\r\n\r\n\r\n      .content-container {\r\n        display: flex;\r\n        flex: 1;\r\n        flex-direction: column;\r\n        overflow-y: scroll;\r\n\r\n        .open {\r\n          overflow: hidden;\r\n        }\r\n\r\n        .content {\r\n          flex: 1;\r\n        }\r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\n.loading-screen {\r\n  position: fixed;\r\n  width: 100%;\r\n  height: 100%;\r\n  left: 0;\r\n  top: 0;\r\n  background-color: white;\r\n  z-index: 999999;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  &.transparent {\r\n    background-color: rgba(white, 0.8);\r\n  }\r\n\r\n  .animation {\r\n    border-radius: 100px;\r\n    width: 200px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "itemsService",
                        "type": "ItemsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appService",
                        "type": "AppService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loadingService",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 41,
                "jsdoctags": [
                    {
                        "name": "itemsService",
                        "type": "ItemsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appService",
                        "type": "AppService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loadingService",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<link rel=\"stylesheet\" href=\"app.component.scss\">\r\n<div class=\"app-container\">\r\n  <div class=\"header-container\">\r\n    <aprosag-header class=\"header\"></aprosag-header>\r\n  </div>\r\n  <div class=\"page\">\r\n    <div class=\"content-container\" [ngClass]=\"{'open': appService.menuOpen}\">\r\n      <div class=\"content\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n\r\n      <div class=\"footer\">\r\n        <aprosag-footer class=\"footer\"></aprosag-footer>\r\n      </div>\r\n    </div>\r\n    <div class=\"loading-screen\" [ngClass]=\"{transparent: loadingService.transparent}\"\r\n         *ngIf=\"(loadingService.loading | async)\">\r\n      <img class=\"animation\" src=\"assets/Loading_anim.gif\">\r\n    </div>\r\n  </div>\r\n\r\n\r\n  <div class=\"navigation\" [@navigationBarAnimation] *ngIf=\"appService.menuOpen\">\r\n    <div class=\"page-scrim\"  (click)=\"appService.openMenu()\"></div>\r\n    <div class=\"side-navigation\" >\r\n      <div class=\"header-container\">\r\n        <img (click)=\"appService.openMenu()\" height=\"25px\" src=\"assets/Icons/Delete_Cart.svg\">\r\n      </div>\r\n      <div class=\"buttons-container\">\r\n        <span class=\"menu-item-container\" >\r\n          <a class=\"menu-item\" routerLink=\"items\" routerLinkActive=\"active\"\r\n             (click)=\"appService.openMenu()\">Termékeink</a>\r\n        </span>\r\n        <span class=\"menu-item-container\">\r\n        <a class=\"menu-item\" routerLink=\"why-is-it-special\" routerLinkActive=\"active\" (click)=\"appService.openMenu()\">Mitől\r\n          különleges</a>\r\n        </span>\r\n        <span class=\"menu-item-container\">\r\n        <a class=\"menu-item\" routerLink=\"about-us\" routerLinkActive=\"active\" (click)=\"appService.openMenu()\">Rólunk</a>\r\n        </span>\r\n        <span class=\"menu-item-container\">\r\n        <a class=\"menu-item\" routerLink=\"contacts\" routerLinkActive=\"active\"\r\n           (click)=\"appService.openMenu()\">Kapcsolat</a>\r\n        </span>\r\n        <div class=\"divider\"></div>\r\n        <div class=\"user-container\">\r\n          <ng-container *ngIf=\"(authService.user$ | async)\">\r\n            <a class=\"menu-item\" routerLink=\"profile\" routerLinkActive=\"active\"\r\n               (click)=\"appService.openMenu()\">Profil</a>\r\n            <a class=\"menu-item\" (click)=\"authService.logout()\">Kijelentkezés</a>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"(authService.user$ | async) === false\">\r\n            <a class=\"menu-item\" routerLink=\"login\" routerLinkActive=\"active\" (click)=\"appService.openMenu()\">Bejelentkezés</a>\r\n            <a class=\"menu-item\" routerLink=\"signup\" routerLinkActive=\"active\" (click)=\"appService.openMenu()\">Regisztráció</a>\r\n          </ng-container>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n"
        },
        {
            "name": "CartComponent",
            "id": "component-CartComponent-1c18afbfbdee703d0f4a5daa993f342e4faccc347a6c690a806b3c3ebd9ca02c9b4905aeb8f94db0cc5eba81058a6073def6c7ccaa0a53bcaf675f979b16465f",
            "file": "projects/aprosag-webshop/src/app/pages/cart/cart.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-cart",
            "styleUrls": [
                "./cart.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cart.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cartService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CartService",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "faTimesCircle",
                    "defaultValue": "faTimesCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "imageCache",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageCacheService",
                    "optional": false,
                    "description": "",
                    "line": 22,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "amountChanged",
                    "args": [
                        {
                            "name": "newValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "item",
                            "type": "CartItem | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "newValue",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "item",
                            "type": "CartItem | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "continueShopping",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "goToDesk",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openItemPage",
                    "args": [
                        {
                            "name": "item",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "Item",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeItemFromCart",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {CartService} from \"../../services/cart/cart.service\";\r\nimport {ImageCacheService} from \"../../services/image-cache/image-cache.service\";\r\nimport {CartItem} from \"../../model/cart-item.model\";\r\nimport {Router} from \"@angular/router\";\r\n\r\nimport {faTimesCircle} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {NgbModal, NgbModalRef} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {ConfirmationComponent} from \"../../shared/popups/confirmation/confirmation.component\";\r\nimport firebase from \"firebase/compat\";\r\nimport Item = firebase.analytics.Item;\r\n\r\n@Component({\r\n  selector: 'aprosag-cart',\r\n  templateUrl: './cart.component.html',\r\n  styleUrls: ['./cart.component.scss']\r\n})\r\nexport class CartComponent  {\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  constructor(public cartService: CartService,\r\n              public imageCache: ImageCacheService,\r\n              private router: Router,\r\n              private modalService: NgbModal) { }\r\n\r\n  removeItemFromCart(item: CartItem) {\r\n    let modalRef = this.modalService.open(ConfirmationComponent, {\r\n      backdropClass: 'modal-dialog-backdrop',\r\n      modalDialogClass: 'modal-dialog-centered'\r\n    });\r\n    modalRef.componentInstance.text = \"Biztos törölni szeretnéd a terméket a kosárból?\";\r\n    modalRef.closed.subscribe(result => {\r\n      if(!result) return;\r\n\r\n      this.cartService.removeAllOfTypeFromCart(item);\r\n    })\r\n  }\r\n\r\n  goToDesk() {\r\n    this.router.navigateByUrl(\"cash-desk\");\r\n  }\r\n\r\n  amountChanged(newValue: number, item: CartItem | null) {\r\n    if(!item)\r\n      return;\r\n\r\n    if(item.amount > newValue){\r\n      this.cartService.removeItemCart(item);\r\n    } else if(item.amount < newValue) {\r\n      this.cartService.addItemToCart(item.item, 1);\r\n    }\r\n  }\r\n\r\n  continueShopping() {\r\n    this.router.navigateByUrl(\"items\");\r\n  }\r\n\r\n  openItemPage(item: Item) {\r\n    this.router.navigateByUrl(`items/${item.id}`)\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n\r\n.cart-page-container {\r\n  color: $font-color !important;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @include background('/assets/Backgrounds/Contact_BG.svg');\r\n\r\n  font-family: lato, Helvetica, serif;\r\n\r\n  .cart-container {\r\n    @include pagesize;\r\n\r\n    .title {\r\n      @include title;\r\n    }\r\n\r\n    @media (max-width: $breakpoint-sm) {\r\n      width: 100%;\r\n      padding: 0 15px;\r\n    }\r\n\r\n    .cart-table-container {\r\n      background-color: white;\r\n      display: flex;\r\n      justify-content: center;\r\n\r\n      .cart-item-image-container {\r\n        padding: 0;\r\n        cursor: pointer;\r\n        width: 100%;\r\n\r\n        .cart-item-image {\r\n          width: 100%;\r\n        }\r\n      }\r\n\r\n      .mobile-table {\r\n        display: none;\r\n        @media (max-width: 750px) {\r\n          width: 100%;\r\n          display: flex;\r\n          flex-direction: column;\r\n          gap: 15px;\r\n        }\r\n\r\n        .item-row{\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-between;\r\n          gap: 15px;\r\n          padding: 15px;\r\n          background-color: white;\r\n\r\n          .cart-item-image-container{\r\n            width: 100px;\r\n          }\r\n\r\n          .item-details-container{\r\n            display: flex;\r\n            flex-direction: column;\r\n            gap: 5px;\r\n            flex: 1;\r\n\r\n            .item-title{\r\n              font-weight: 800;\r\n              font-size: 1.1rem;\r\n            }\r\n\r\n            .stepper-container{\r\n              max-width: 150px;\r\n            }\r\n\r\n            .price-container{\r\n              display: flex;\r\n              justify-content: space-between;\r\n              .sum-price{\r\n                font-weight: 800;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n\r\n      .table {\r\n\r\n        @media (max-width: 750px) {\r\n          display: none;\r\n        }\r\n\r\n\r\n        color: $font-color !important;\r\n        font-size: 16px;\r\n\r\n        td {\r\n          vertical-align: middle;\r\n\r\n          padding-top: 25px;\r\n          padding-bottom: 25px;\r\n        }\r\n\r\n        .item-title-container{\r\n          cursor: pointer;\r\n        }\r\n\r\n        .table-header {\r\n          color: white;\r\n          background-color: $green-line;\r\n          text-align: left;\r\n\r\n          th {\r\n            height: 60px;\r\n            vertical-align: middle;\r\n\r\n            &.amount {\r\n              text-align: center;\r\n              width: 150px;\r\n            }\r\n\r\n            &.image {\r\n              width: 150px;\r\n            }\r\n          }\r\n\r\n          .header-text {\r\n            font-weight: bold;\r\n          }\r\n        }\r\n\r\n        .delete-icon-container {\r\n          color: $font-color;\r\n          text-align: center;\r\n\r\n          .delete-icon {\r\n            cursor: pointer;\r\n            font-weight: 300;\r\n            font-size: 20px;\r\n          }\r\n        }\r\n\r\n        .item-title {\r\n          font-weight: 900;\r\n        }\r\n      }\r\n    }\r\n\r\n    .button-container {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      margin: 25px 0 80px;\r\n\r\n      @media (max-width: 750px) {\r\n        display: block;\r\n      }\r\n\r\n      .button {\r\n        flex-basis: 50%;\r\n        width: 100%;\r\n\r\n        @media (max-width: 750px) {\r\n          width: 80%;\r\n          margin: 0 auto;\r\n        }\r\n\r\n        @media (max-width: $breakpoint-md) {\r\n          flex-basis: 100%;\r\n        }\r\n\r\n        &.back-to-shop {\r\n          @include button($font-color);\r\n        }\r\n\r\n        &.to-the-cashdesk {\r\n          @include button();\r\n        }\r\n      }\r\n    }\r\n\r\n    .newsletter-and-shipping {\r\n      font-weight: 700;\r\n\r\n      display: flex;\r\n      justify-content: flex-end;\r\n\r\n\r\n      @media (max-width: 750px) {\r\n        display: block;\r\n      }\r\n\r\n      .shipping-options-container {\r\n        background-color: white;\r\n        flex-basis: 50%;\r\n\r\n        @media (max-width: $breakpoint-md) {\r\n          flex-basis: 100%;\r\n        }\r\n\r\n        .header {\r\n          padding: 15px 25px;\r\n          color: white;\r\n          background-color: $base-green;\r\n\r\n          .text {\r\n            font-size: 16px;\r\n          }\r\n        }\r\n\r\n        .content {\r\n          padding: 0 25px;\r\n\r\n          .table-row {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            gap: 25px;\r\n\r\n            &.shipping {\r\n              @media (max-width: $breakpoint-md) {\r\n                flex-direction: column;\r\n              }\r\n            }\r\n\r\n            border-bottom: 1px solid black;\r\n            padding: 20px 0;\r\n\r\n\r\n            &:last-of-type {\r\n              border-bottom: none;\r\n            }\r\n\r\n            .table-title {\r\n              font-weight: 700;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./cart.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "imageCache",
                        "type": "ImageCacheService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 19,
                "jsdoctags": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "imageCache",
                        "type": "ImageCacheService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"cart-page-container\">\r\n  <div class=\"cart-container\">\r\n    <div class=\"title\">Kosár</div>\r\n    <div class=\"cart-table-container\">\r\n      <table class=\"table\">\r\n        <thead class=\"table-header\">\r\n        <tr>\r\n          <th class=\"header-text\" scope=\"col\"></th>\r\n          <th class=\"header-text image\" scope=\"col\">Kép</th>\r\n          <th class=\"header-text\" scope=\"col\">Termék</th>\r\n          <th class=\"header-text\" scope=\"col\">Ár</th>\r\n          <th class=\"header-text amount\" scope=\"col\">Mennyiség</th>\r\n          <th class=\"header-text\" scope=\"col\">Részösszeg</th>\r\n        </tr>\r\n        </thead>\r\n        <tbody>\r\n        <tr *ngFor=\"let item of cartService.items\">\r\n          <td class=\"delete-icon-container\">\r\n           <span class=\"delete-icon\" (click)=\"removeItemFromCart(item)\">\r\n             <img src=\"assets/Icons/Delete_Cart.svg\" height=\"30px\"/>\r\n          </span>\r\n          <td>\r\n            <div class=\"cart-item-image-container\" (click)=\"openItemPage(item.item)\" *ngIf=\"item.item.image_urls\">\r\n              <img class=\"cart-item-image\" [src]=\"'assets/' + item.item.image_urls[0]\"/>\r\n            </div>\r\n          </td>\r\n          <td class=\"item-title-container\" (click)=\"openItemPage(item.item)\">\r\n            <div class=\"item-title\">{{item.item.title}}</div>\r\n            <div>{{item.item.subtitle}}</div>\r\n          </td>\r\n          <td>{{item.item.price}} Ft</td>\r\n          <td class=\"amount\">\r\n            <aprosag-stepper [allowZero]=\"false\" [value]=\"item.amount\"\r\n                             (valueChange)=\"amountChanged($event, item)\"></aprosag-stepper>\r\n          </td>\r\n          <td>{{item.item.price ? item.item.price * item.amount : 0}} Ft</td>\r\n        </tr>\r\n        <tr *ngIf=\"cartService.count === 0\">\r\n          <td colspan=\"6\">A kosarad üres</td>\r\n        </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n      <div class=\"mobile-table\">\r\n        <div class=\"item-row\" *ngFor=\"let item of cartService.items\">\r\n          <div class=\"delete-icon-container\">\r\n           <span class=\"delete-icon\" (click)=\"removeItemFromCart(item)\">\r\n             <img src=\"assets/Icons/Delete_Cart.svg\" height=\"30px\"/>\r\n          </span>\r\n          </div>\r\n          <div class=\"cart-item-image-container\" (click)=\"openItemPage(item.item)\" *ngIf=\"item.item.image_urls\">\r\n            <img class=\"cart-item-image\" [src]=\"'assets/' + item.item.image_urls[0]\"/>\r\n          </div>\r\n          <div class=\"item-details-container\">\r\n            <div class=\"item-title\">{{item.item.title}}</div>\r\n            <div>{{item.item.subtitle}}</div>\r\n\r\n            <div class=\"stepper-container\">\r\n              <aprosag-stepper [allowZero]=\"false\" [value]=\"item.amount\"\r\n                               (valueChange)=\"amountChanged($event, item)\"></aprosag-stepper>\r\n            </div>\r\n            <div class=\"price-container\">\r\n              <span>{{item.amount}}x {{item.item.price}} Ft</span>\r\n              <span class=\"sum-price\">\r\n              {{item.item.price ? item.item.price * item.amount : 0}} Ft\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"cartService.count === 0\">\r\n          <span>A kosarad üres</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"button-container\">\r\n      <button class=\"button back-to-shop\" (click)=\"continueShopping()\">Vásárlás folytatása</button>\r\n    </div>\r\n    <div class=\"newsletter-and-shipping\">\r\n      <div class=\"shipping-options-container\">\r\n        <div class=\"header\">\r\n          <span class=\"text\">Kosár összesen</span>\r\n        </div>\r\n        <div class=\"content\">\r\n          <div class=\"table-row\">\r\n            <span class=\"table-title\">Részösszeg</span>\r\n            <span>{{cartService.value}} Ft</span>\r\n          </div>\r\n          <div class=\"table-row shipping\">\r\n            <div class=\"table-title shipment\">Szállítás</div>\r\n            <aprosag-shipping-options></aprosag-shipping-options>\r\n          </div>\r\n          <div class=\"table-row\" *ngIf=\"cartService.selectedShippingType\">\r\n            <span class=\"table-title\">Összeg</span>\r\n            <span>{{cartService.value + cartService.selectedShippingType.value}} Ft</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"button-container\" *ngIf=\"cartService.count > 0\">\r\n      <button [disabled]=\"!cartService.selectedShippingType\" class=\"button to-the-cashdesk\" (click)=\"goToDesk()\">Tovább a pénztárhoz\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "CartModalComponent",
            "id": "component-CartModalComponent-6c54b64bbc7c0b62753fb006e047e3de25e449e1910503f06d3ee08b8c63dec3abaa4ec8b9158d3f852c50324ed7e9da3635e6dc44d525ca479f36f5a6788f95",
            "file": "projects/aprosag-webshop/src/app/shared/components/header/cart-modal/cart-modal.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-cart-modal",
            "styleUrls": [
                "./cart-modal.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cart-modal.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cartService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CartService",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "faTimesCircle",
                    "defaultValue": "faTimesCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "deleteItemFromCart",
                    "args": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "CartItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "openCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, ElementRef, NgModule} from '@angular/core';\r\nimport {CartService} from \"../../../../services/cart/cart.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {NgbActiveModal, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\nimport { faTimesCircle} from \"@fortawesome/free-regular-svg-icons\";\r\nimport {CartItem} from \"../../../../model/cart-item.model\";\r\nimport {ConfirmationComponent} from \"../../../popups/confirmation/confirmation.component\";\r\n\r\n@Component({\r\n  selector: 'aprosag-cart-modal',\r\n  templateUrl: './cart-modal.component.html',\r\n  styleUrls: ['./cart-modal.component.scss']\r\n})\r\nexport class CartModalComponent  {\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  constructor(public cartService: CartService,\r\n              private activatedRoute: ActivatedRoute,\r\n              private router: Router,\r\n              private activatedModal: NgbActiveModal,\r\n              private modalService: NgbModal) { }\r\n\r\n  openCart() {\r\n    this.activatedModal.close();\r\n    this.router.navigateByUrl('cart');\r\n  }\r\n\r\n  deleteItemFromCart(item: CartItem) {\r\n    let modalRef = this.modalService.open(ConfirmationComponent, {\r\n      backdropClass: 'modal-dialog-backdrop',\r\n      modalDialogClass: 'modal-dialog-centered'\r\n    });\r\n    modalRef.componentInstance.text = \"Biztos törlöd a terméket a kosárból?\";\r\n\r\n    modalRef.closed.subscribe(result => {\r\n      if(!result) return;\r\n      this.cartService.removeAllOfTypeFromCart(item);\r\n    })\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n.cart-modal-container {\r\n  transition: height 0.5s;\r\n  font-family: lato, Helvetica, sans-serif;\r\n\r\n  .cart-modal-header {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    font-weight: 900;\r\n    position: relative;\r\n    font-size: 18px;\r\n    padding: 20px;\r\n\r\n    box-shadow: 0 6px 6px -5px rgba(0, 0, 0, 0.2);\r\n    height: 70px;\r\n  }\r\n\r\n  .cart-modal-item-list {\r\n    background-color: rgb(246, 246, 246);\r\n    min-height: 150px;\r\n    max-height: 452px;\r\n    overflow-y: auto;\r\n\r\n    @media (max-width: $breakpoint-sm) {\r\n      max-height: 300px;\r\n    }\r\n\r\n    .cart-item-container {\r\n      overflow: hidden;\r\n\r\n      .delete-item {\r\n        cursor: pointer;\r\n      }\r\n      .cart-item {\r\n        display: flex;\r\n        padding: 20px;\r\n        height: 100%;\r\n\r\n        .cart-item-image-container {\r\n          .cart-item-image {\r\n            max-width: 110px;\r\n          }\r\n        }\r\n\r\n        .cart-text-container {\r\n          flex-direction: column;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          width: 100%;\r\n          margin-left: 40px;\r\n          font-size: 18px;\r\n\r\n          @media (max-width: 470px) {\r\n            margin-left: 10px;\r\n          }\r\n\r\n          .title-container {\r\n            display: flex;\r\n            justify-content: space-between;\r\n\r\n            .titles {\r\n              overflow: hidden;\r\n              .title {\r\n                font-weight: bold;\r\n              }\r\n            }\r\n\r\n            .delete-item {\r\n              margin-left: 5px;\r\n            }\r\n          }\r\n\r\n          .price-container {\r\n            display: flex;\r\n            justify-content: space-between;\r\n            margin-top: 10px;\r\n\r\n            @media (max-width: 470px) {\r\n              flex-direction: column;\r\n              align-items: flex-end;\r\n            }\r\n\r\n            .times {\r\n              color: rgb(180, 180, 180);\r\n              margin-right: 10px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .cart-modal-footer {\r\n    position: relative;\r\n    font-size: 18px;\r\n\r\n    box-shadow: 0 -6px 6px -5px rgba(0, 0, 0, 0.2);\r\n\r\n    .footer-content {\r\n      padding: 20px;\r\n\r\n      .button {\r\n        @include button();\r\n        width: 100%;\r\n      }\r\n    }\r\n\r\n    .price-container {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n\r\n      margin-bottom: 20px;\r\n\r\n      .price {\r\n        font-weight: 900;\r\n      }\r\n    }\r\n  }\r\n\r\n  .divider {\r\n    margin: 0 20px;\r\n    height: 1px;\r\n    background-color: rgb(180, 180, 180);\r\n\r\n    &:last-of-type {\r\n      display: none;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./cart-modal.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedModal",
                        "type": "NgbActiveModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedModal",
                        "type": "NgbActiveModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"cart-modal-container\">\r\n  <div class=\"cart-modal-header\">\r\n    <span>Kosarad tartalma</span>\r\n    <span>{{this.cartService.count}} termék</span>\r\n  </div>\r\n  <div *ngIf=\"this.cartService.count > 0\">\r\n    <div class=\"cart-modal-item-list\">\r\n      <ng-container *ngFor=\"let item of cartService.items\">\r\n        <div class=\"cart-item-container\">\r\n          <div class=\"cart-item\">\r\n            <div class=\"cart-item-image-container\" *ngIf=\"item.item.image_urls\">\r\n              <img class=\"cart-item-image\" [src]=\"'assets/' + item.item.image_urls[0]\"/>\r\n            </div>\r\n            <div class=\"cart-text-container\">\r\n              <div class=\"title-container\">\r\n                <div class=\"titles\">\r\n                  <div class=\"title\">{{item.item.title}}</div>\r\n                  <div class=\"subtitle\">{{item.item.subtitle}}</div>\r\n                </div>\r\n                <img class=\"delete-item\" src=\"../../../../../assets/Icons/Delete_Cart.svg\" height=\"30px\" (click)=\"deleteItemFromCart(item)\"/>\r\n              </div>\r\n              <div class=\"price-container\">\r\n                <div class=\"amount\">\r\n                  <span class=\"times\">{{item.amount}}x</span>\r\n                  <span> {{item.item.price}} Ft</span>\r\n                </div>\r\n                <div class=\"sum-price\">{{item.item.price ? item.amount * item.item.price : \"0\"}} Ft</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"divider\"></div>\r\n      </ng-container>\r\n\r\n    </div>\r\n    <div class=\"cart-modal-footer\">\r\n      <div class=\"footer-content\">\r\n        <div class=\"price-container\">\r\n          <span>Részösszeg</span>\r\n          <span class=\"price\">{{this.cartService.value}} Ft</span>\r\n        </div>\r\n        <button class=\"button\" mat-button mat-raised-button color=\"primary\" (click)=\"openCart()\">Tovább a kosárhoz\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "CashDeskComponent",
            "id": "component-CashDeskComponent-af93df4f3ffebce8c8c1330521b192b5d52c3161ae38ade870aded89c6d173f75fdc41085d69ef364d2e97193e6898437c736d0ad06d5714f7346f32ae5a36ee",
            "file": "projects/aprosag-webshop/src/app/pages/cash-desk/cash-desk.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-cash-desk",
            "styleUrls": [
                "./cash-desk.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./cash-desk.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthService",
                    "optional": false,
                    "description": "",
                    "line": 66,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "breakpointObserver",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BreakpointObserver",
                    "optional": false,
                    "description": "",
                    "line": 68,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "cartService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CartService",
                    "optional": false,
                    "description": "",
                    "line": 69,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "firstFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "isEditable",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "loginForm",
                    "defaultValue": "this.fb.group({\r\n    email: ['', [Validators.required, Validators.email]],\r\n    password: ['', [Validators.required]]\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "profileForm",
                    "defaultValue": "this.fb.group({\r\n      profile: this.fb.group({\r\n        uid: [''],\r\n        email: [''],\r\n        lastName: [''],\r\n        firstName: [''],\r\n        companyName: [''],\r\n        taxNumber: [''],\r\n        country: [''],\r\n        city: [''],\r\n        address: [''],\r\n        zipCode: [''],\r\n        phoneNumber: ['']\r\n      }),\r\n      comment: ['']\r\n    }\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "secondFormGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "stepper",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "MatStepper",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "MatStepper"
                        }
                    ]
                },
                {
                    "name": "stepperOrientation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<StepperOrientation>",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "userService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserService",
                    "optional": false,
                    "description": "",
                    "line": 62,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "goToSignup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 126,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "sendOrder",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\r\nimport {AuthService} from \"../../services/auth/auth.service\";\r\nimport {OrderService} from \"../../services/order/order.service\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {Router} from \"@angular/router\";\r\nimport {CartService} from \"../../services/cart/cart.service\";\r\nimport {MatStepper, StepperOrientation} from \"@angular/material/stepper\";\r\nimport {AddedToCartComponent} from \"../../shared/popups/added-to-cart/added-to-cart.component\";\r\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {SuccessfulOrderComponent} from \"../../shared/popups/successful-order/successful-order.component\";\r\nimport {UserService} from \"../../services/user/user.service\";\r\nimport {LoadingService} from \"../../services/loading/loading.service\";\r\nimport {BreakpointObserver} from \"@angular/cdk/layout\";\r\nimport {Observable} from \"rxjs\";\r\nimport {map} from \"rxjs/operators\";\r\n\r\n@Component({\r\n  selector: 'aprosag-cash-desk',\r\n  templateUrl: './cash-desk.component.html',\r\n  styleUrls: ['./cash-desk.component.scss']\r\n})\r\nexport class CashDeskComponent implements AfterViewInit {\r\n  @ViewChild(MatStepper)\r\n  stepper!: MatStepper;\r\n\r\n  ngAfterViewInit() {\r\n    this.stepper._getIndicatorType = () => 'number';\r\n  }\r\n\r\n  loginForm = this.fb.group({\r\n    email: ['', [Validators.required, Validators.email]],\r\n    password: ['', [Validators.required]]\r\n  })\r\n\r\n  profileForm = this.fb.group({\r\n      profile: this.fb.group({\r\n        uid: [''],\r\n        email: [''],\r\n        lastName: [''],\r\n        firstName: [''],\r\n        companyName: [''],\r\n        taxNumber: [''],\r\n        country: [''],\r\n        city: [''],\r\n        address: [''],\r\n        zipCode: [''],\r\n        phoneNumber: ['']\r\n      }),\r\n      comment: ['']\r\n    }\r\n  )\r\n\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n  isEditable = false;\r\n\r\n  stepperOrientation: Observable<StepperOrientation>;\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private orderService: OrderService,\r\n              public userService: UserService,\r\n              private loadingService: LoadingService,\r\n              private toastr: ToastrService,\r\n              private router: Router,\r\n              public authService: AuthService,\r\n              private modalService: NgbModal,\r\n              public breakpointObserver: BreakpointObserver,\r\n              public cartService: CartService) {\r\n\r\n    this.stepperOrientation = breakpointObserver\r\n      .observe('(min-width: 800px)')\r\n      .pipe(map(({matches}) => (matches ? 'horizontal' : 'vertical')));\r\n\r\n\r\n    userService.user.subscribe((user) => {\r\n      if (user) {\r\n        this.profileForm.get('profile')?.patchValue({\r\n          uid: user.uid,\r\n          email: user.email,\r\n          lastName: user.lastName,\r\n          firstName: user.firstName,\r\n          companyName: user.companyName,\r\n          taxNumber: user.taxNumber,\r\n          country: user.country,\r\n          city: user.city,\r\n          address: user.address,\r\n          zipCode: user.zipCode,\r\n          phoneNumber: user.phoneNumber,\r\n        })\r\n      }\r\n    })\r\n\r\n    this.firstFormGroup = this.fb.group({\r\n      firstCtrl: ['', Validators.required],\r\n    });\r\n    this.secondFormGroup = this.fb.group({\r\n      secondCtrl: ['', Validators.required],\r\n    });\r\n  }\r\n\r\n  sendOrder() {\r\n    this.loadingService.addProcess('send-order', {transparent: true});\r\n\r\n    this.orderService.placeOrder(this.profileForm.value, this.profileForm.get('comment')?.value)\r\n      ?.then((result) => {\r\n        this.loadingService.removeProcess('send-order');\r\n        const modalRef = this.modalService.open(SuccessfulOrderComponent, {\r\n          backdrop: 'static',\r\n          keyboard: false,\r\n          backdropClass: 'modal-dialog-backdrop',\r\n          modalDialogClass: 'modal-dialog-centered succesful-order-dialog'\r\n        });\r\n\r\n        modalRef.componentInstance.orderNumber = result;\r\n      }, (error) => {\r\n        this.loadingService.removeProcess('send-order');\r\n        this.toastr.error(\"Valami hiba történt a rendelés leadásakor!\")\r\n      });\r\n  }\r\n\r\n  goToSignup() {\r\n    this.router.navigateByUrl('signup');\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.loginForm.get('email')?.value, this.loginForm.get('password')?.value).then((result) => {\r\n    }, (error) => {\r\n      this.toastr.error('Sikertelen bejelentkezés!', 'Hiba');\r\n    })\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n\r\n.cash-desk-page-container {\r\n  color: $font-color !important;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100%;\r\n\r\n  @include background('/assets/Backgrounds/Home_BG.svg');\r\n\r\n  font-family: lato, Helvetica, sans-serif;\r\n\r\n  .cash-desk-page {\r\n    width: $content-percentage-width;\r\n    max-width: $content-max-width;\r\n\r\n    @media (max-width: $breakpoint-md) {\r\n      width: 100%;\r\n      padding: 0 15px;\r\n    }\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    .title {\r\n      @include title;\r\n    }\r\n\r\n    .auth-container {\r\n      display: flex;\r\n\r\n      @media (max-width: $breakpoint-md) {\r\n        flex-direction: column;\r\n      }\r\n\r\n      gap: 25px;\r\n\r\n      .login-form-container {\r\n        @media (min-width: $breakpoint-md) {\r\n          width: 50%;\r\n        }\r\n        @media (max-width: $breakpoint-md) {\r\n          margin: 0;\r\n        }\r\n\r\n\r\n        .title {\r\n          @include subtitle;\r\n          padding: 15px 0 !important;\r\n        }\r\n\r\n        .forgotten-password-container {\r\n          text-align: right;\r\n          margin: 15px 0;\r\n        }\r\n\r\n        input {\r\n          @include input-field;\r\n        }\r\n\r\n        .login-button-container {\r\n          display: flex;\r\n          gap: 25px;\r\n          justify-content: space-between;\r\n          flex-direction: row-reverse;\r\n\r\n          .button {\r\n            @include button;\r\n            width: 100%;\r\n\r\n            display: inline-block;\r\n\r\n            &.back {\r\n              @include button($font-color);\r\n            }\r\n          }\r\n        }\r\n\r\n\r\n      }\r\n\r\n      .guest-container {\r\n        @media (min-width: $breakpoint-md) {\r\n          width: 50%;\r\n        }\r\n        padding: 25px;\r\n\r\n\r\n        background-color: #D9E9E2;\r\n\r\n        .title {\r\n          @include subtitle;\r\n        }\r\n\r\n        .button-container {\r\n          display: flex;\r\n          flex-direction: row-reverse;\r\n        }\r\n\r\n        .button {\r\n          @include button;\r\n\r\n          display: inline-block;\r\n          padding-left: 24px;\r\n          padding-right: 24px;\r\n\r\n          &.back {\r\n            @include button($font-color);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .form-container {\r\n      .profile-container {\r\n\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n        gap: 20px;\r\n\r\n        margin-bottom: 20px;\r\n      }\r\n\r\n      .form-field-container {\r\n        margin: 0 16px;\r\n        flex: 45%;\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        .input-field {\r\n          @include input-field;\r\n        }\r\n      }\r\n\r\n\r\n    }\r\n\r\n    .button-container {\r\n      margin-top: 48px;\r\n      display: flex;\r\n      gap: 48px;\r\n      justify-content: space-between;\r\n      flex-direction: row-reverse;\r\n\r\n      .button {\r\n        @include button;\r\n\r\n        width: auto;\r\n        padding-left: 24px;\r\n        padding-right: 24px;\r\n\r\n        &.back {\r\n          @include button($font-color);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  mat-stepper {\r\n    width: 100%;\r\n\r\n    &::ng-deep {\r\n      .mat-vertical-content-container {\r\n        margin: 0;\r\n\r\n        &::before{\r\n          display: none;\r\n        }\r\n      }\r\n\r\n      .mat-vertical-stepper-header {\r\n        background-color: $light-green;\r\n        color: white;\r\n        height: auto;\r\n        pointer-events: none !important;\r\n        padding: 15px;\r\n\r\n        &[aria-selected=\"true\"] {\r\n          color: white;\r\n          background-color: $base-green;\r\n\r\n          .mat-step-label {\r\n            font-weight: 500;\r\n            color: white !important;\r\n          }\r\n\r\n          .mat-step-icon {\r\n            color: $base-green;\r\n            font-weight: 700;\r\n            background-color: white;\r\n          }\r\n        }\r\n      }\r\n\r\n      .mat-vertical-content-container {\r\n\r\n        .mat-vertical-content {\r\n          margin: 15px;\r\n          padding: 0;\r\n        }\r\n      }\r\n\r\n\r\n      .mat-horizontal-content-container {\r\n        margin: 16px;\r\n      }\r\n\r\n      .mat-horizontal-stepper-header-container {\r\n        background-color: $light-green;\r\n        color: white;\r\n        display: flex;\r\n        justify-content: space-between;\r\n\r\n        .mat-step-header {\r\n          width: 100%;\r\n          height: auto;\r\n          padding: 12px 36px;\r\n          color: $font-color;\r\n          font-size: 16px;\r\n\r\n\r\n          .mat-step-icon {\r\n            margin-right: 16px;\r\n\r\n            color: white;\r\n            background-color: $font-color;\r\n          }\r\n\r\n\r\n          .mat-step-label {\r\n            font-weight: 500;\r\n            font-size: 16px;\r\n\r\n            color: $font-color !important;\r\n\r\n            &.mat-step-label-active {\r\n              color: white;\r\n            }\r\n          }\r\n\r\n          &[aria-selected=\"true\"] {\r\n            color: white;\r\n            background-color: $base-green;\r\n\r\n            .mat-step-label {\r\n              font-weight: 500;\r\n              color: white !important;\r\n            }\r\n\r\n            .mat-step-icon {\r\n              color: $base-green;\r\n              font-weight: 700;\r\n              background-color: white;\r\n            }\r\n          }\r\n        }\r\n\r\n\r\n        .mat-horizontal-stepper-header {\r\n          pointer-events: none !important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .back-button-container{\r\n    width: 100%;\r\n    padding: 25px 0 25px 40px;\r\n\r\n    @media (max-width: $breakpoint-sm) {\r\n      padding-left: 16px;\r\n    }\r\n\r\n    .button{\r\n      width: 25%;\r\n      @include button($font-color);\r\n\r\n      @media (max-width: $breakpoint-md) {\r\n        width: 50%;\r\n      }\r\n    }\r\n  }\r\n\r\n  .summary-container {\r\n    font-family: lato, Helvetica, sans-serif;\r\n\r\n    background-color: white;\r\n    max-width: 80%;\r\n    width: 700px;\r\n    margin: 25px auto;\r\n    font-weight: bold;\r\n\r\n    @media (max-width: $breakpoint-md) {\r\n      width: auto;\r\n      max-width: 100%;\r\n    }\r\n\r\n    .header {\r\n      padding: 15px 25px;\r\n      color: white;\r\n      background-color: $base-green;\r\n\r\n      .text {\r\n        font-size: 16px;\r\n      }\r\n    }\r\n\r\n    .content {\r\n      padding: 0 25px;\r\n\r\n      .table-row {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n        font-weight: 700;\r\n        gap: 25px;\r\n\r\n\r\n        border-bottom: 1px solid black;\r\n        padding: 20px 0;\r\n\r\n        overflow: hidden;\r\n\r\n        .right {\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: space-between;\r\n          width: 60%;\r\n\r\n          .cart-item-text-container{\r\n            display: flex;\r\n            flex-direction: column;\r\n            align-items: end;\r\n            gap: 25px;\r\n          }\r\n\r\n          .summary-title{\r\n            font-weight: 800;\r\n          }\r\n\r\n          .price-container{\r\n            display: flex;\r\n            gap: 25px;\r\n          }\r\n        }\r\n\r\n        .cart-item-image-container {\r\n          height: 100px;\r\n\r\n          .cart-item-image {\r\n            height: 100%;\r\n          }\r\n\r\n          .cart-text-container {\r\n            flex-direction: column;\r\n            display: flex;\r\n            justify-content: space-between;\r\n            width: 100%;\r\n            margin-left: 40px;\r\n            font-size: 18px;\r\n\r\n            .title-container {\r\n              display: flex;\r\n              justify-content: space-between;\r\n\r\n              .title {\r\n                font-weight: bold;\r\n              }\r\n\r\n              .delete-button {\r\n                font-size: 25px;\r\n              }\r\n            }\r\n\r\n            .price-container {\r\n              display: flex;\r\n              justify-content: space-between;\r\n\r\n              .times {\r\n                color: rgb(180, 180, 180);\r\n                margin-right: 10px;\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        &:last-of-type {\r\n          border-bottom: none;\r\n        }\r\n\r\n        .table-title {\r\n          font-weight: 700;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./cash-desk.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "orderService",
                        "type": "OrderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loadingService",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 58,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "orderService",
                        "type": "OrderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loadingService",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "breakpointObserver",
                        "type": "BreakpointObserver",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "AfterViewInit"
            ],
            "templateData": "<div class=\"cash-desk-page-container\">\r\n  <div class=\"cash-desk-page\">\r\n    <div class=\"title\">Pénztár</div>\r\n    <mat-stepper [orientation]=\"(stepperOrientation | async)!\" linear #stepper>\r\n      <mat-step *ngIf=\"(authService.user$ | async) === null\" class=\"step\">\r\n        <ng-template matStepLabel>Azonosítás</ng-template>\r\n        <div class=\"auth-container\">\r\n          <div class=\"login-form-container\">\r\n            <div class=\"title\">Bejelentkezés</div>\r\n            <form class=\"login-form\" [formGroup]=\"loginForm\">\r\n              <div>\r\n                <input type=\"email\" formControlName=\"email\" placeholder=\"Email cím\"/>\r\n              </div>\r\n              <div>\r\n                <input type=\"password\" formControlName=\"password\" placeholder=\"Jelszó\"/>\r\n              </div>\r\n              <div class=\"forgotten-password-container\">\r\n                <a class=\"forgotten-password\" href=\"#\">Elfelejtett jelszó?</a>\r\n              </div>\r\n              <div class=\"login-button-container\">\r\n                <button class=\"button login-button\" type=\"submit\" (click)=\"login()\">Bejelentkezés</button>\r\n                <button class=\"button back\" type=\"submit\" (click)=\"goToSignup()\">Regisztáció</button>\r\n\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"guest-container\">\r\n            <div class=\"title\">Folytatás vendégként</div>\r\n            <div class=\"text\">\r\n              <p>Semmi gond, ha még nincs nálunk felhasználói fiókja, tovább mehet a pénztárhoz vendégként.</p>\r\n              <p>A későbbi könnyebb és gyorsabb vásárláshoz javasoljuk a regisztrációt.</p>\r\n            </div>\r\n            <div class=\"button-container\">\r\n              <button mat-button class=\"button back\" matStepperNext>Folytatás vendégként</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </mat-step>\r\n      <mat-step class=\"step\">\r\n        <form>\r\n          <ng-template matStepLabel>Számlázási adatok</ng-template>\r\n          <div class=\"form-container\">\r\n            <form class=\"personal-data\" [formGroup]=\"profileForm\">\r\n              <div class=\"profile-container\" formGroupName=\"profile\">\r\n                <div class=\"form-field-container\">\r\n                  <span class=\"label\">Vezetéknév</span>\r\n                  <input class=\"input-field\" formControlName=\"lastName\"/>\r\n                </div>\r\n                <div class=\"form-field-container\">\r\n                  <span class=\"label\">Keresztnév</span>\r\n                  <input class=\"input-field\" formControlName=\"firstName\"/>\r\n                </div>\r\n                <div class=\"form-field-container\">\r\n                  <span class=\"label\">Cégnév (nem kötelező)</span>\r\n                  <input class=\"input-field\" formControlName=\"companyName\"/>\r\n                </div>\r\n                <div class=\"form-field-container\">\r\n                  <span class=\"label\">Adószám (Vállalkozásoknak kötelező)</span>\r\n                  <input class=\"input-field\" formControlName=\"taxNumber\"/>\r\n                </div>\r\n                <div class=\"form-field-container\">\r\n                  <span class=\"label\">Ország</span>\r\n                  <input class=\"input-field\" formControlName=\"country\"/>\r\n                </div>\r\n                <div class=\"form-field-container\">\r\n                  <span class=\"label\">Város</span>\r\n                  <input class=\"input-field\" formControlName=\"city\"/>\r\n                </div>\r\n                <div class=\"form-field-container\">\r\n                  <span class=\"label\">Utca, házszám</span>\r\n                  <input class=\"input-field\" formControlName=\"address\"/>\r\n                </div>\r\n                <div class=\"form-field-container\">\r\n                  <span class=\"label\">Irányítószám</span>\r\n                  <input class=\"input-field\" formControlName=\"zipCode\"/>\r\n                </div>\r\n              </div>\r\n              <div class=\"span-2\">\r\n                <div class=\"form-field-container\">\r\n                  <span class=\"label\">Megjegyzés</span>\r\n                  <input class=\"input-field\" formControlName=\"comment\"/>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"button-container\">\r\n            <button mat-button class=\"button\" matStepperNext>Tovább</button>\r\n            <button *ngIf=\"(authService.user$ | async) === null\" mat-button class=\"button back\" matStepperPrevious>\r\n              Vissza\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n      <mat-step class=\"step\">\r\n        <ng-template matStepLabel>Fizetési módok</ng-template>\r\n        <div class=\"title\">Fizetési módok</div>\r\n        <aprosag-payment-options></aprosag-payment-options>\r\n        <div class=\"button-container\">\r\n          <button mat-button class=\"button\" (click)=\"sendOrder()\">Rendelés megerősítése</button>\r\n          <button mat-button class=\"button back\" matStepperPrevious>Vissza</button>\r\n        </div>\r\n      </mat-step>\r\n\r\n    </mat-stepper>\r\n    <div class=\"back-button-container\">\r\n      <button class=\"button back\" routerLink=\"/cart\">Vissza</button>\r\n    </div>\r\n    <div class=\"summary-container\">\r\n      <div class=\"header\">\r\n        <span class=\"text\">Kosár összesen</span>\r\n      </div>\r\n      <div class=\"content\">\r\n        <div class=\"table-row\" *ngFor=\"let item of cartService.items\">\r\n          <span class=\"amount\">{{item.amount}}x</span>\r\n          <span class=\"cart-item-image-container\" *ngIf=\"item.item.image_urls\">\r\n              <img class=\"cart-item-image\" [src]=\"'assets/' + item.item.image_urls[0]\"/>\r\n          </span>\r\n          <span class=\"right\">\r\n            <span class=\"cart-item-text-container\">\r\n              <div class=\"summary-title\">{{item.item.title}}</div>\r\n              <div class=\"price-container\">\r\n                <div class=\"item-price\">{{item.item.price}} Ft</div>\r\n                <div class=\"sum-price\">\r\n                  {{(item.item.price || 0) * item.amount}} Ft\r\n                </div>\r\n              </div>\r\n            </span>\r\n\r\n        </span>\r\n        </div>\r\n        <div class=\"table-row\" *ngIf=\"cartService.selectedShippingType\">\r\n          <span class=\"table-title\">Szállítás</span>\r\n          <span class=\"right\">\r\n          <span>{{cartService.selectedShippingType.name}}</span>\r\n        <span>{{cartService.selectedShippingType.value}} Ft</span>\r\n        </span>\r\n\r\n        </div>\r\n        <div class=\"table-row\" *ngIf=\"cartService.selectedShippingType\">\r\n          <span class=\"table-title\">Összeg</span>\r\n          <span>{{cartService.value + cartService.selectedShippingType.value}} Ft</span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ConfirmationComponent",
            "id": "component-ConfirmationComponent-9f71fed852497bdd7967da4b7164480aa1c4932e202aadff53eb4563af465c037ed4ab78a106df6fbef69a8d132bea912c5cfbd03f943425f3a1a44dac2c76a7",
            "file": "projects/aprosag-webshop/src/app/shared/popups/confirmation/confirmation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-confirmation",
            "styleUrls": [
                "./confirmation.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./confirmation.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "text",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"Biztos?\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "accept",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "decline",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\r\nimport {NgbActiveModal} from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n@Component({\r\n  selector: 'aprosag-confirmation',\r\n  templateUrl: './confirmation.component.html',\r\n  styleUrls: ['./confirmation.component.scss']\r\n})\r\nexport class ConfirmationComponent{\r\n  @Input()\r\n  public title: string = \"Biztos?\";\r\n\r\n  @Input()\r\n  public text: string = \"\";\r\n\r\n  constructor(private activatedModal: NgbActiveModal) { }\r\n\r\n  accept() {\r\n    this.activatedModal.close(true);\r\n  }\r\n\r\n  decline() {\r\n    this.activatedModal.close(false);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/mixins\";\r\n@import \"projects/aprosag-webshop/src/variables\";\r\n\r\n.confirmation-dialog{\r\n  margin: 25px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  font-size: 16px;\r\n  color: $font-color;\r\n  gap: 20px;\r\n\r\n  .title{\r\n    @include title;\r\n    text-align: center;\r\n    padding: 10px;\r\n  }\r\n\r\n\r\n  .button-container{\r\n    margin-top: 20px;\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    flex-direction: row-reverse;\r\n    gap: 40px;\r\n\r\n    .button{\r\n      width: 100%;\r\n\r\n      &.primary{\r\n        @include button;\r\n      }\r\n\r\n      &.secondary{\r\n        @include button($font-color);\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./confirmation.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "activatedModal",
                        "type": "NgbActiveModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "activatedModal",
                        "type": "NgbActiveModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"confirmation-dialog\">\r\n  <div class=\"title\">{{title}}</div>\r\n  <div class=\"text\">\r\n    {{text}}\r\n  </div>\r\n\r\n  <div class=\"button-container\">\r\n    <button class=\"button primary\" (click)=\"accept()\">Igen</button>\r\n    <button class=\"button secondary\" (click)=\"decline()\">Mégsem</button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ContactsComponent",
            "id": "component-ContactsComponent-503fb21dc7218dce742331980d88d8e5743886ca0f4b336675797b3044c9753bc3f41fd3be2ce85d2210f0e53e0d3afac3c8af2cff75a499af6de7f6335ded7d",
            "file": "projects/aprosag-webshop/src/app/pages/contacts/contacts.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-contacts",
            "styleUrls": [
                "./contacts.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./contacts.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "contactForm",
                    "defaultValue": "this.fb.group({\r\n    name: [''],\r\n    email: [''],\r\n    text: [''],\r\n    dataProtection: false\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "sendEmail",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {LoadingService} from \"../../services/loading/loading.service\";\r\nimport {AppService} from \"../../services/app/app.service\";\r\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {EmailSentComponent} from \"./email-sent/email-sent.component\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {FormBuilder} from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'aprosag-contacts',\r\n  templateUrl: './contacts.component.html',\r\n  styleUrls: ['./contacts.component.scss']\r\n})\r\nexport class ContactsComponent {\r\n  contactForm = this.fb.group({\r\n    name: [''],\r\n    email: [''],\r\n    text: [''],\r\n    dataProtection: false\r\n  });\r\n\r\n  constructor(private loadingService: LoadingService,\r\n              private appService: AppService,\r\n              private modalService: NgbModal,\r\n              private fb: FormBuilder,\r\n              private toastr: ToastrService) { }\r\n\r\n  sendEmail(){\r\n    this.loadingService.addProcess('send-email', {transparent: true});\r\n    this.appService.sendEmail().subscribe((result) => {\r\n      this.loadingService.removeProcess('send-email');\r\n      let modalRef = this.modalService.open(EmailSentComponent, {\r\n        backdropClass: 'modal-dialog-backdrop',\r\n        modalDialogClass: 'modal-dialog-centered succesful-order-dialog'\r\n      });\r\n      modalRef.closed.subscribe(() => {\r\n        console.log(this.contactForm.value);\r\n        this.contactForm.reset();\r\n      })\r\n    }, (error: any) => {\r\n      this.loadingService.removeProcess('send-order');\r\n      this.toastr.error(\"Valami hiba történt az email küldésekor!\")\r\n    });\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n\r\n.contacts-page-container {\r\n  font-family: lato, Helvetica, sans-serif;\r\n  font-weight: 800;\r\n  color: $font-color;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @include background('/assets/Backgrounds/Contact_BG.svg');\r\n\r\n  .contacts-container {\r\n    width: $content-percentage-width;\r\n    max-width: $content-max-width;\r\n\r\n    padding: 0 15px 15px;\r\n\r\n    @media (max-width: $breakpoint-sm) {\r\n      width: 100%;\r\n    }\r\n\r\n    .title {\r\n      @include title;\r\n    }\r\n\r\n    .content-container{\r\n      display: flex;\r\n      gap: 50px;\r\n      font-weight: normal;\r\n      font-size: 18px;\r\n      line-height: 1.5;\r\n\r\n\r\n      @media (max-width: $breakpoint-md) {\r\n        flex-direction: column;\r\n      }\r\n\r\n      .left {\r\n        display: flex;\r\n        gap: 20px;\r\n\r\n        width: 50%;\r\n\r\n\r\n        @media (max-width: $breakpoint-md) {\r\n          width: 100%;\r\n        }\r\n\r\n        flex-direction: column;\r\n        margin-right: 5px;\r\n        text-align: left;\r\n\r\n        input[type='text'],\r\n        textarea {\r\n          @include input-field;\r\n        }\r\n\r\n        .data-protection-container {\r\n          display: flex;\r\n          align-items: center;\r\n\r\n          label{\r\n            margin: 0;\r\n          }\r\n\r\n          input {\r\n            width: 50px;\r\n            height: 1.5em;\r\n          }\r\n        }\r\n\r\n        .button {\r\n          @include button;\r\n        }\r\n      }\r\n\r\n      .right{\r\n        width: 50%;\r\n\r\n        @media (max-width: $breakpoint-md) {\r\n          width: 100%;\r\n        }\r\n\r\n        .subtitle{\r\n          @include subtitle\r\n        }\r\n\r\n        .email{\r\n          margin: 18px 0;\r\n          a {\r\n            color: $font-color !important;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n}\r\n",
                    "styleUrl": "./contacts.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "loadingService",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appService",
                        "type": "AppService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "loadingService",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appService",
                        "type": "AppService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"contacts-page-container\">\r\n  <div class=\"contacts-container\">\r\n    <div class=\"title\">Kapcsolat</div>\r\n    <div class=\"content-container\">\r\n      <div class=\"left\">\r\n        <form [formGroup]=\"contactForm\">\r\n          <input id=\"name\" type=\"text\" formControlName=\"name\" placeholder=\"Név\"/>\r\n          <input id=\"email\" type=\"text\" formControlName=\"email\" placeholder=\"Email cím\"/>\r\n          <textarea id=\"text\" placeholder=\"Szöveg\" formControlName=\"text\"  rows=\"10\"></textarea>\r\n\r\n          <span class=\"data-protection-container\">\r\n          <input id=\"data-protection\" type=\"checkbox\" formControlName=\"dataProtection\"/>\r\n          <label for=\"data-protection\"> Elfogadom az Adatvédelmi tájékoztatót</label>\r\n        </span>\r\n        </form>\r\n\r\n        <button class=\"button\" (click)=\"sendEmail()\">Küldés</button>\r\n      </div>\r\n      <div class=\"right\">\r\n        <div>Ha rendeléssel kapcsolatos kérdésed van, vagy csak szeretnéd velünk felvenni a kapcsolatot, keress minket\r\n          bátran az alábbi elérhetőségeken, vagy küldj üzenetet közvetlenül itt, a honlapon!</div>\r\n        <div class=\"subtitle\">Ügyfélszolgálat</div>\r\n        <div class=\"email\"><a href=\"mailto:info@aprosagkonyvek.hu\">info@aprosagkonyvek.hu</a></div>\r\n        <div>Molnár Nikoletta: +36 30 907 9536<br/>(hétköznap 9-16 óráig)</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "EmailSentComponent",
            "id": "component-EmailSentComponent-e5726ba294b1fc728a06695d5804cc393137e5c70feaa4384b3dfbe94b1cd8f8af0f3c89463ec605cae01f53131a99f1d6f27531f06dcb75ee939a3825ac0a16",
            "file": "projects/aprosag-webshop/src/app/pages/contacts/email-sent/email-sent.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-cart-modal",
            "styleUrls": [
                "./email-sent.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./email-sent.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "closeModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\r\nimport {NgbActiveModal, NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\n@Component({\r\n  selector: 'aprosag-cart-modal',\r\n  templateUrl: './email-sent.component.html',\r\n  styleUrls: ['./email-sent.component.scss']\r\n})\r\nexport class EmailSentComponent {\r\n  constructor(private modal: NgbActiveModal) {\r\n  }\r\n\r\n  closeModal(){\r\n    this.modal.close()\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/mixins\";\r\n@import \"projects/aprosag-webshop/src/variables\";\r\n\r\n.email-sent-container{\r\n  margin: 25px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  align-items: center;\r\n  font-size: 16px;\r\n  color: $font-color;\r\n\r\n  .title{\r\n    @include title;\r\n    padding: 15px 0 !important;\r\n    text-align: center;\r\n  }\r\n\r\n  .thank-you-text{\r\n    text-align: center;\r\n  }\r\n\r\n  .button-container{\r\n    width: 100%;\r\n    text-align: center;\r\n    .button{\r\n      @include button;\r\n      margin: 0 auto;\r\n      width: 50%;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./email-sent.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "modal",
                        "type": "NgbActiveModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 8,
                "jsdoctags": [
                    {
                        "name": "modal",
                        "type": "NgbActiveModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"email-sent-container\">\r\n  <div class=\"title\">Email elküldve!</div>\r\n  <div class=\"thank-you-text\">\r\n    Köszönjük, hogy írtál nekünk!\r\n    Hamarosan felvesszük a kapcsolatot veled és válaszolunk az üzenetedre!\r\n  </div>\r\n  <div class=\"button-container\">\r\n    <button class=\"button\" (click)=\"closeModal()\">Rendben</button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "FavoriteComponent",
            "id": "component-FavoriteComponent-35c1b00475a3f3c1b23e901b6c51f19ae1d65db0f327ef1f90ad6b4db1b5111fcd10ff0945df04d6ac8b0df5e19455cc40032d7dc5fd17981c4f52bdf1a817eb",
            "file": "projects/aprosag-webshop/src/app/shared/components/favorite/favorite.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-favorite",
            "styleUrls": [
                "./favorite.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./favorite.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "item",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Item | null",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isFavorite",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "userService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserService",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addItemToFavourites",
                    "args": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "$event",
                            "type": "Event",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\r\nimport {UserService} from \"../../../services/user/user.service\";\r\nimport {Item} from \"../../../model/item.model\";\r\n\r\n@Component({\r\n  selector: 'aprosag-favorite',\r\n  templateUrl: './favorite.component.html',\r\n  styleUrls: ['./favorite.component.scss']\r\n})\r\nexport class FavoriteComponent implements OnInit{\r\n  @Input()\r\n  item: Item | null = null;\r\n\r\n  isFavorite: boolean = false;\r\n\r\n  constructor(public userService: UserService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.userService.user.subscribe((user) => {\r\n      this.isFavorite = !!user?.favorites?.includes(this.item?.id || \"\");\r\n    })\r\n  }\r\n\r\n\r\n  addItemToFavourites($event: Event) {\r\n    if(this.item) {\r\n      $event.stopPropagation();\r\n      this.userService.addOrRemoveItemAsFavorite(this.item);\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".favorite-container{\r\n  width: 20px;\r\n  height: 20px;\r\n  position: relative;\r\n  display: block;\r\n\r\n  .favourite{\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n\r\n    opacity: 1;\r\n\r\n    transition: opacity 200ms;\r\n\r\n    &.hidden{\r\n      opacity: 0;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./favorite.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"favorite-container\" *ngIf=\"userService.user | async\">\r\n  <img  (click)=\"addItemToFavourites($event)\" class=\"favourite\"\r\n       src=\"assets/Icons/Favourite.svg\" height=\"20px\">\r\n\r\n  <img (click)=\"addItemToFavourites($event)\" class=\"favourite\" [ngClass]=\"{hidden: !isFavorite}\"\r\n       src=\"assets/Icons/Favourite_added.svg\" height=\"20px\">\r\n</div>\r\n"
        },
        {
            "name": "FavoritesComponent",
            "id": "component-FavoritesComponent-6214385dc7a4a92f91aa897fa77a2b21728ce8d713a707546154b4a66bd241978935c4350d6c7c6e3310f7e60a659d4ef7e590311a360b7f6094cd6954fc3171",
            "file": "projects/aprosag-webshop/src/app/pages/profile/favorites/favorites.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-favorites",
            "styleUrls": [
                "./favorites.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./favorites.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "favorites",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {ItemsService} from \"../../../services/item/items.service\";\r\nimport {Item} from \"../../../model/item.model\";\r\nimport {UserService} from \"../../../services/user/user.service\";\r\n\r\n@Component({\r\n  selector: 'aprosag-favorites',\r\n  templateUrl: './favorites.component.html',\r\n  styleUrls: ['./favorites.component.scss']\r\n})\r\nexport class FavoritesComponent implements OnInit {\r\n  favorites: Item[] = [];\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private itemService: ItemsService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.user.subscribe((user) => {\r\n      if (user) {\r\n        this.favorites = this.itemService.getItemsByIds(user.favorites);\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n.favorites-container {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  column-gap: 50px;\r\n  row-gap: 50px;\r\n\r\n  @media (max-width: $breakpoint-md) {\r\n    grid-template-columns: 1fr 1fr;\r\n  }\r\n}\r\n",
                    "styleUrl": "./favorites.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "itemService",
                        "type": "ItemsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "itemService",
                        "type": "ItemsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"favorites-container\">\r\n  <aprosag-item-card *ngFor=\"let item of favorites\" [item]=\"item\"></aprosag-item-card>\r\n</div>\r\n"
        },
        {
            "name": "FooterComponent",
            "id": "component-FooterComponent-4daee8d7b26762d85d6e56a0b83c0b87a55bbfd4b596fcf9f66bb4efb7ac53957ebbf9e185b0f91b46587009786d0aba00340ce8ae1aaaf6de5880e9e088c119",
            "file": "projects/aprosag-webshop/src/app/shared/components/footer/footer.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-footer",
            "styleUrls": [
                "./footer.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./footer.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'aprosag-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent{\r\n\r\n  constructor() { }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n\r\n\r\n:host {\r\n  flex: 1;\r\n  background: linear-gradient(180deg, rgba(251, 240, 241) 0%, rgba(255, 255, 255) 60%);;\r\n}\r\n\r\n.footer-container {\r\n  font-family: lato, Helvetica, sans-serif;\r\n  color: white;\r\n  background-color: $footer-green;\r\n  padding-top: 50px;\r\n\r\n  .top {\r\n    width: $content-percentage-width;\r\n    max-width: $content-max-width;\r\n\r\n    margin: 0 auto;\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n    gap: 20px;\r\n\r\n    @media (max-width: $breakpoint-sm) {\r\n     flex-direction: column;\r\n    }\r\n\r\n    .left{\r\n      width: 100%;\r\n      .link-container{\r\n        height: 100%;\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: 15px;\r\n        width: 80%;\r\n        border-right: 2px solid white;\r\n        font-weight: bold;\r\n\r\n        @media (max-width: $breakpoint-sm) {\r\n          border-right: 0;\r\n          border-bottom: 2px solid white;\r\n          padding-bottom: 20px;\r\n        }\r\n\r\n        a{\r\n          color: white;\r\n          cursor: pointer;\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n    .center{\r\n      width: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 15px;\r\n\r\n      @media (max-width: $breakpoint-sm) {\r\n        padding-bottom: 20px;\r\n      }\r\n\r\n      .space{\r\n        margin-bottom: 20px;\r\n      }\r\n    }\r\n\r\n    .right {\r\n      width: fit-content;\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 15px;\r\n    }\r\n  }\r\n\r\n  .bottom{\r\n    padding: 30px 0;\r\n    text-align: center;\r\n  }\r\n}\r\n",
                    "styleUrl": "./footer.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<div class=\"footer-container\">\r\n  <div class=\"top\">\r\n    <div class=\"left\">\r\n      <div class=\"link-container\">\r\n        <a class=\"contract-link\">Általános Szerződési feltételek</a>\r\n        <a class=\"contract-link\">Süti beállítások</a>\r\n        <a class=\"contract-link\">Adatvédelmi tájékoztató</a>\r\n        <a class=\"contract-link\">Szállítási információk</a>\r\n      </div>\r\n    </div>\r\n    <div class=\"center\">\r\n      <div class=\"text\">Apróság Könyvek - Horváth Áron Ferenc E.V.</div>\r\n      <div class=\"text space\">Adószám: 56604425-1-28</div>\r\n      <div class=\"text\">OTP Bank (SWIFT/BIC kód: OTPVHUHB)</div>\r\n      <div class=\"text\">Horváth Áron Ferenc</div>\r\n      <div class=\"text\">11773377-00530167</div>\r\n    </div>\r\n    <div class=\"right\">\r\n      <div class=\"text\">Ügyfélszolgálat:</div>\r\n      <div class=\"text\">info@aprosagkonyvek.hu</div>\r\n      <div class=\"text\">+36309079536</div>\r\n      <div class=\"social-media-container\">\r\n      </div>\r\n  </div>\r\n  </div>\r\n  <div class=\"bottom\">\r\n    <img height=\"89px\" src=\"../../../../assets/Logo/logo_dense_white.svg\"/>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "GalleryComponent",
            "id": "component-GalleryComponent-e7e70a9e6b32271ac665b8a87ee3d5138971139d61369afbc4d8098f8ab694c183c74217fbd9d62583b1e1b3b668b4449be12590167e83e87aa34ec7f1158795",
            "file": "projects/aprosag-webshop/src/app/pages/items/gallery/gallery.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-gallery",
            "styleUrls": [
                "./gallery.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./gallery.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "config",
                    "defaultValue": "{\r\n    navigation: true,\r\n    spaceBetween: 30,\r\n    pagination: {clickable: true},\r\n    autoplay: {\r\n      delay: 5000,\r\n      pauseOnMouseEnter: true\r\n    },\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SwiperOptions",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "sliderImages",
                    "defaultValue": "[\r\n    {image: 'Slider/Slider_1.jpg', url: '/items/JTr5jLNLKU4n14BWyjtG'},\r\n    {image: 'Slider/Slider_2.jpg', url: '/items/6D55n8mtvHT2EKDzQTkn'},\r\n    {image: 'Slider/Slider_3.jpg', site: 'https://www.udvarbongeszo.aprosagkonyvek.hu/'},\r\n    {image: 'Slider/Slider_4.jpg', site: 'https://www.udvarbongeszo.aprosagkonyvek.hu/'}\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [
                {
                    "name": "openUrl",
                    "args": [
                        {
                            "name": "sliderImage",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "sliderImage",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {AfterViewInit, ChangeDetectorRef, Component, OnInit, ViewChild} from '@angular/core';\r\n\r\n// import Swiper core and required modules\r\nimport SwiperCore, {Pagination, Navigation, SwiperOptions, Autoplay} from 'swiper';\r\nimport Swiper from \"swiper\";\r\nimport {Router} from \"@angular/router\";\r\n\r\n// install Swiper modules\r\nSwiperCore.use([Pagination, Navigation, Autoplay]);\r\n\r\n@Component({\r\n  selector: 'aprosag-gallery',\r\n  templateUrl: './gallery.component.html',\r\n  styleUrls: ['./gallery.component.scss']\r\n})\r\nexport class GalleryComponent {\r\n  config: SwiperOptions = {\r\n    navigation: true,\r\n    spaceBetween: 30,\r\n    pagination: {clickable: true},\r\n    autoplay: {\r\n      delay: 5000,\r\n      pauseOnMouseEnter: true\r\n    },\r\n  };\r\n\r\n  sliderImages: { image: string, url?: string, site?: string }[] = [\r\n    {image: 'Slider/Slider_1.jpg', url: '/items/JTr5jLNLKU4n14BWyjtG'},\r\n    {image: 'Slider/Slider_2.jpg', url: '/items/6D55n8mtvHT2EKDzQTkn'},\r\n    {image: 'Slider/Slider_3.jpg', site: 'https://www.udvarbongeszo.aprosagkonyvek.hu/'},\r\n    {image: 'Slider/Slider_4.jpg', site: 'https://www.udvarbongeszo.aprosagkonyvek.hu/'}\r\n  ];\r\n\r\n  constructor(private router: Router) {\r\n  }\r\n\r\n  openUrl(sliderImage: { image: string, url?: string, site?: string }) {\r\n    if(sliderImage.site) {\r\n      window.open(sliderImage.site);\r\n      return;\r\n    } else if(sliderImage.url) {\r\n      this.router.navigateByUrl(sliderImage.url);\r\n      return;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n.gallery-container {\r\n  margin: 30px auto;\r\n  width: 100%;\r\n  max-width: 1500px;\r\n\r\n  @media (max-width: $breakpoint-sm) {\r\n    margin: 0 auto;\r\n  }\r\n\r\n  ::ng-deep {\r\n    swiper {\r\n      .swiper-pagination {\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        .swiper-pagination-bullet {\r\n          width: 10px;\r\n          height: 10px;\r\n\r\n          &.swiper-pagination-bullet-active {\r\n            background-color: $base-green;\r\n            width: 15px;\r\n            height: 15px;\r\n          }\r\n        }\r\n      }\r\n\r\n      .swiper-button-next {\r\n        background-image: url(\"/assets/Icons/Arrow_Line_Item.svg\");\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        width: 50px;\r\n        height: 50px;\r\n\r\n        &::after {\r\n          content: \"\";\r\n        }\r\n\r\n        @media (max-width: $breakpoint-md) {\r\n          width: 33px;\r\n          height: 33px;\r\n          margin-top: -15px;\r\n\r\n        }\r\n      }\r\n\r\n      .swiper-button-prev {\r\n        background-image: url(\"/assets/Icons/Arrow_Line_Item.svg\");\r\n        transform: rotate(180deg);\r\n        background-repeat: no-repeat;\r\n        background-size: contain;\r\n        width: 50px;\r\n        height: 50px;\r\n\r\n        @media (max-width: $breakpoint-md) {\r\n          margin-top: -15px;\r\n          width: 33px;\r\n          height: 33px;\r\n        }\r\n\r\n        &::after {\r\n          content: \"\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  .image-container {\r\n    overflow-y: hidden;\r\n    height: auto;\r\n    max-height: 550px;\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n    @media (max-width: $breakpoint-sm) {\r\n      padding-top: 0;\r\n    }\r\n\r\n    @media (max-width: $breakpoint-md) {\r\n      max-height: 250px;\r\n    }\r\n\r\n    .image {\r\n      cursor: pointer;\r\n      width: 100%;\r\n      min-width: 100%;\r\n    }\r\n  }\r\n\r\n  .buttons-container {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding-top: 30px;\r\n\r\n\r\n    .buttons {\r\n      display: flex;\r\n      gap: 20px;\r\n      align-items: center;\r\n\r\n\r\n      .button-outer {\r\n        width: 15px;\r\n        height: 15px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n\r\n        .button-inner {\r\n          width: 80%;\r\n          height: 80%;\r\n          background-color: $disabled-button;\r\n          border-radius: 100px;\r\n\r\n\r\n          &.active {\r\n            width: 100%;\r\n            height: 100%;\r\n            background-color: $base-green;\r\n\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n}\r\n",
                    "styleUrl": "./gallery.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 32,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div\r\n  class=\"gallery-container\">\r\n  <swiper\r\n    #swiper\r\n    class=\"image-container\"\r\n    [config]=\"config\"\r\n  >\r\n    <ng-template swiperSlide *ngFor=\"let image of sliderImages\">\r\n      <img (click)=\"openUrl(image)\" class=\"image\" [src]=\"'assets/' + image.image\"/>\r\n    </ng-template>\r\n  </swiper>\r\n</div>\r\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-513a279e3ced1c51a58f27eafc76403459f5e2e39a9a4ca9f9b3ed6bd9598e509bf276bfcdad40acd19d8f753c362ab08189f1cf5504246b46f0c6243ee2ba79",
            "file": "projects/aprosag-webshop/src/app/shared/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-header",
            "styleUrls": [
                "./header.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthService",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "cartService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CartService",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "faBars",
                    "defaultValue": "faBars",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "router",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Router",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "userService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserService",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "visible",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openCartModal",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openMenu",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\r\nimport {faCartPlus, faUser} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faSignOutAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faBars} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {AuthService} from \"../../../services/auth/auth.service\";\r\nimport {NgbModal, NgbModalRef} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {CartService} from \"../../../services/cart/cart.service\";\r\nimport {ActivatedRoute, Router} from \"@angular/router\";\r\nimport {NavigationEvent} from \"@ng-bootstrap/ng-bootstrap/datepicker/datepicker-view-model\";\r\nimport {AddedToCartComponent} from \"../../popups/added-to-cart/added-to-cart.component\";\r\nimport {CartModalComponent} from \"./cart-modal/cart-modal.component\";\r\nimport {UserService} from \"../../../services/user/user.service\";\r\nimport {AppService} from \"../../../services/app/app.service\";\r\n\r\n@Component({\r\n  selector: 'aprosag-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent {\r\n  faBars = faBars;\r\n\r\n  visible = false;\r\n\r\n  constructor(public authService: AuthService,\r\n              private modalService: NgbModal,\r\n              public cartService: CartService,\r\n              private appService: AppService,\r\n              public userService: UserService,\r\n              public router: Router) {\r\n    router.events.subscribe((event) => {\r\n      this.modalService.dismissAll();\r\n    })\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout().then((result) => {\r\n      console.log(result);\r\n    }, (error) => {\r\n      console.error(error);\r\n    })\r\n  }\r\n\r\n  openCartModal() {\r\n    if(this.router.url === '/cart' || this.router.url === '/cash-desk')\r\n      return;\r\n\r\n    if (this.modalService.hasOpenModals()) {\r\n      this.modalService.dismissAll();\r\n    } else {\r\n      const modalRef = this.modalService.open(CartModalComponent, {backdrop: true, modalDialogClass: 'cart-dialog'});\r\n      modalRef.result.then((result) => {\r\n        console.log(result);\r\n      }, (error) => {\r\n        //console.error(error.message);\r\n      })\r\n    }\r\n  }\r\n\r\n  openMenu() {\r\n    this.appService.openMenu();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n\r\n.header-container {\r\n  position: sticky;\r\n  background-color: white;\r\n\r\n  z-index: 1051;\r\n\r\n  font-family: lato, Helvetica, sans-serif;\r\n  font-weight: bold;\r\n\r\n  box-shadow: 0 6px 6px -5px rgba(0, 0, 0, 0.2);\r\n\r\n  @media (max-width: $breakpoint-lg) {\r\n    padding-bottom: 10px;\r\n  }\r\n\r\n  @media (max-width: $breakpoint-sm) {\r\n    padding-bottom: 0;\r\n  }\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  .header{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n\r\n    max-width: 1280px;\r\n    width: 80%;\r\n    margin: 0 auto;\r\n\r\n    height: 60px;\r\n    @media (max-width: $breakpoint-lg) {\r\n      height: 100px;\r\n    }\r\n\r\n    .actions {\r\n      display: flex;\r\n      gap: 20px;\r\n\r\n      .menu-item.cart {\r\n        position: relative;\r\n        font-size: 18px;\r\n        cursor: pointer;\r\n\r\n        &.disabled {\r\n          cursor: auto;\r\n          opacity: 0.5;\r\n        }\r\n\r\n        .counter {\r\n          position: absolute;\r\n          background-color: $base-green;\r\n          opacity: 0.8;\r\n          padding: 0 7px;\r\n          color: white;\r\n          font-size: 10px;\r\n          display: block;\r\n          border-radius: 10px;\r\n          top: 0;\r\n          right: 0;\r\n        }\r\n      }\r\n    }\r\n\r\n    @media (max-width: $breakpoint-lg) {\r\n      flex-direction: column;\r\n      width: 90%;\r\n    }\r\n\r\n    .logo-container {\r\n      height: 100%;\r\n      width: auto;\r\n      padding: 6px 0;\r\n      cursor: pointer;\r\n\r\n      @media (max-width: $breakpoint-lg) {\r\n        height: 60%;\r\n        padding: 10px 0;\r\n      }\r\n      @media (max-width: $breakpoint-sm) {\r\n        padding: 0\r\n      }\r\n      .logo{\r\n        width: 100%;\r\n        height: 100%;\r\n      }\r\n    }\r\n\r\n    .button-container {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: flex-end;\r\n      width: 100%;\r\n      gap: 35px;\r\n\r\n      @media (max-width: $breakpoint-lg) {\r\n        justify-content: space-between;\r\n        gap: 0px;\r\n      }\r\n\r\n      .menu-item {\r\n        white-space: nowrap;\r\n        text-decoration: none;\r\n        font-size: 0.95em;\r\n        color: $font-color;\r\n        text-transform: uppercase;\r\n        padding: 10px;\r\n\r\n        &.profile{\r\n          font-size: 18px;\r\n        }\r\n\r\n        &.active {\r\n          &.profile {\r\n            color: $green-line;\r\n          }\r\n\r\n          border-bottom: 4px solid $green-line;\r\n        }\r\n\r\n\r\n      }\r\n\r\n      .icon {\r\n        cursor: pointer;\r\n        color: $font-color;\r\n\r\n        &.logout {\r\n          margin-left: 30px;\r\n        }\r\n      }\r\n    }\r\n\r\n    &.desktop-header {\r\n      @media (max-width: $breakpoint-sm) {\r\n        display: none;\r\n      }\r\n    }\r\n\r\n    &.mobile-header{\r\n      height: 60px;\r\n      justify-content: center;\r\n\r\n      .menu-opener{\r\n        cursor: pointer;\r\n        position: absolute;\r\n        left: 30px;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n      }\r\n\r\n      .cart{\r\n        color: $font-color;\r\n        cursor: pointer;\r\n        position: absolute;\r\n        right: 30px;\r\n        top: 50%;\r\n        transform: translateY(-50%);\r\n\r\n        .counter {\r\n          position: absolute;\r\n          background-color: $base-green;\r\n          opacity: 0.8;\r\n          padding: 0 7px;\r\n          color: white;\r\n          font-size: 10px;\r\n          display: block;\r\n          border-radius: 10px;\r\n          top: -10px;\r\n          right: -10px;\r\n        }\r\n      }\r\n\r\n      align-items: center;\r\n\r\n      @media (min-width: $breakpoint-sm) {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n.menu{\r\n  .button-container{\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  .menu-item {\r\n    text-decoration: none;\r\n    font-size: 16px;\r\n    font-weight: bold;\r\n    color: $font-color;\r\n    margin-right: 30px;\r\n    text-transform: uppercase;\r\n    padding: 10px;\r\n\r\n    &.active {\r\n      border-bottom: 4px solid $green-line;\r\n    }\r\n\r\n  }\r\n}\r\n",
                    "styleUrl": "./header.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "appService",
                        "type": "AppService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 23,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "appService",
                        "type": "AppService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"header-container\">\r\n  <div class=\"header desktop-header\">\r\n      <span class=\"logo-container\" routerLink=\"items\">\r\n        <img class=\"logo\" src=\"../../../../assets/Logo/Aprosag_konyvek_logo_1_black.svg\"/>\r\n      </span>\r\n    <span class=\"button-container\">\r\n      <a class=\"menu-item\" routerLink=\"items\" routerLinkActive=\"active\">Termékeink</a>\r\n      <a class=\"menu-item\" routerLink=\"why-is-it-special\" routerLinkActive=\"active\">Mitől különleges</a>\r\n      <a class=\"menu-item\" routerLink=\"about-us\" routerLinkActive=\"active\">Rólunk</a>\r\n      <a class=\"menu-item\" routerLink=\"contacts\" routerLinkActive=\"active\">Kapcsolat</a>\r\n      <div class=\"actions\">\r\n         <a class=\"menu-item profile\" routerLink=\"profile\" routerLinkActive=\"active\">\r\n        <img\r\n          [src]=\"(userService.user | async) ? '../../../../assets/Icons/Profile_selected.svg' : '../../../../assets/Icons/Profile.svg'\"\r\n          height=\"15px\"/>\r\n      </a>\r\n      <a class=\"menu-item cart\" [ngClass]=\"{disabled: router.url === '/cart' ||router.url === '/cash-desk'}\"\r\n         (click)=\"openCartModal()\">\r\n        <span class=\"counter\">{{cartService.count}}</span>\r\n        <img src=\"../../../../assets/Icons/Cart.svg\" height=\"15px\"/>\r\n      </a>\r\n      </div>\r\n\r\n    </span>\r\n  </div>\r\n  <div class=\"header mobile-header\">\r\n    <fa-icon class=\"menu-opener\" [icon]=\"faBars\" (click)=\"openMenu()\"></fa-icon>\r\n    <span class=\"logo-container\" routerLink=\"items\">\r\n    <img class=\"logo\" src=\"../../../../assets/Logo/Aprosag_konyvek_logo_1_black.svg\"/>\r\n    </span>\r\n    <a class=\"cart\" (click)=\"openCartModal()\">\r\n      <span class=\"counter\">{{cartService.count}}</span>\r\n      <img src=\"../../../../assets/Icons/Cart.svg\" height=\"15px\"/>\r\n    </a>\r\n\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ItemCardComponent",
            "id": "component-ItemCardComponent-17672fee4267bfb482d8d50602ed62d461a7e8773c0c1ddbb9a4e882a5e9746d5509c519224a35d027a953f0bc804d7a0e9fde370b06aa74d86ed45d6f1c6f3b",
            "file": "projects/aprosag-webshop/src/app/pages/items/item-card/item-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-item-card",
            "styleUrls": [
                "./item-card.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item-card.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "Item",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isFavourite",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "addItemToCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "openItem",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\r\nimport {Item} from \"../../../model/item.model\";\r\nimport {Router} from \"@angular/router\";\r\nimport {CartService} from \"../../../services/cart/cart.service\";\r\nimport {AddedToCartComponent} from \"../../../shared/popups/added-to-cart/added-to-cart.component\";\r\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\n\r\n@Component({\r\n  selector: 'aprosag-item-card',\r\n  templateUrl: './item-card.component.html',\r\n  styleUrls: ['./item-card.component.scss']\r\n})\r\nexport class ItemCardComponent {\r\n  @Input()\r\n  public item: Item;\r\n\r\n  isFavourite = false;\r\n\r\n  constructor(private router: Router,\r\n              private cartService: CartService,\r\n              private modalService: NgbModal) {\r\n    this.item = new Item();\r\n  }\r\n\r\n  openItem() {\r\n    this.router.navigate(['/items', this.item.id]);\r\n  }\r\n\r\n  addItemToCart() {\r\n    this.cartService.addItemToCart(this.item, 1);\r\n\r\n    const modalRef = this.modalService.open(AddedToCartComponent, {\r\n      backdrop: true,\r\n      backdropClass: 'modal-dialog-backdrop',\r\n      modalDialogClass: 'modal-dialog-centered added-to-cart-dialog'\r\n    });\r\n    modalRef.componentInstance.item = this.item;\r\n    modalRef.componentInstance.amount = 1;\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n.item-card-container {\r\n  color: $font-color;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-start;\r\n  cursor: pointer;\r\n  height: 100%;\r\n\r\n\r\n  .item-card {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    height: 100%;\r\n    gap: 25px;\r\n\r\n    .image-container {\r\n      position: relative;\r\n\r\n      &:hover{\r\n        .view-overlay {\r\n          opacity: 1;\r\n        }\r\n      }\r\n\r\n      .view-overlay {\r\n        font-family: lato, Helvetica, sans-serif;\r\n\r\n        opacity: 0;\r\n        transition: opacity 0.2s;\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 70px;\r\n        bottom: 0;\r\n        left: 0;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background-color: rgba(black, 0.4);\r\n\r\n        .view-text {\r\n          font-weight: 400;\r\n          color: white;\r\n        }\r\n      }\r\n    }\r\n\r\n    .title-container {\r\n      margin-top: 25px;\r\n      display: flex;\r\n      gap: 10px;\r\n      justify-content: space-between;\r\n    }\r\n\r\n\r\n  }\r\n\r\n  .title {\r\n    margin-top: 20px;\r\n    font-size: 20px;\r\n  }\r\n\r\n  .subtitle {\r\n    margin-top: 20px;\r\n    font-family: lato, Helvetica, sans-serif;\r\n    font-weight: 600;\r\n    font-size: 14px;\r\n  }\r\n\r\n  .item-card-image {\r\n    background-color: white;\r\n    width: 100%;\r\n  }\r\n\r\n  .bottom-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 25px;\r\n    margin-top: 15px;\r\n\r\n    .prices-container {\r\n      .prices {\r\n        display: flex;\r\n        flex-direction: row-reverse;\r\n        justify-content: flex-end;\r\n        width: 100%;\r\n        gap: 35px;\r\n        font-size: 20px;\r\n        font-family: lato, Helvetica, sans-serif;\r\n        font-weight: 600;\r\n\r\n        @media (max-width: $breakpoint-lg){\r\n          font-size: 18px;\r\n        }\r\n\r\n        @media (max-width: $breakpoint-md){\r\n          font-size: 16px;\r\n        }\r\n\r\n        .original_price.invalid {\r\n          text-decoration: line-through;\r\n        }\r\n\r\n        .discount {\r\n          color: $red-text;\r\n        }\r\n      }\r\n    }\r\n\r\n    .button-container {\r\n      width: 100%;\r\n\r\n      .button {\r\n        width: 100%;\r\n        @include button;\r\n        margin: 0 auto;\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n",
                    "styleUrl": "./item-card.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 17,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"item-card-container\">\r\n  <div class=\"item-card\">\r\n    <div class=\"item\" (click)=\"openItem()\">\r\n      <div class=\"image-container\">\r\n        <img *ngIf=\"item.image_urls\" class=\"item-card-image\" [src]=\"'assets/' + item.image_urls.sort()[0]\">\r\n        <div class=\"view-overlay\">\r\n          <div class=\"view-text\">Megnézem</div>\r\n        </div>\r\n      </div>\r\n      <div class=\"title-container\">\r\n        <div>\r\n          {{item.title}}\r\n        </div>\r\n        <aprosag-favorite [item]=\"item\"></aprosag-favorite>\r\n      </div>\r\n      <div class=\"subtitle\">{{item.subtitle}}</div>\r\n    </div>\r\n    <div class=\"bottom-container\">\r\n      <div class=\"prices-container\">\r\n        <div class=\"prices\" *ngIf=\"item.price\">\r\n          <span *ngIf=\"item.discount_price\" class=\"discount price\">{{item.discount_price + \" Ft\"}}</span>\r\n          <span *ngIf=\"item.discount_percentage\"\r\n                class=\"discount percentage\">{{(item.price * item.discount_percentage) + \" Ft\"}}</span>\r\n          <span class=\"original_price\"\r\n                [ngClass]=\"{'invalid': item.discount_price || item.discount_percentage}\">{{item.price + \" Ft\"}}</span>\r\n        </div>\r\n      </div>\r\n      <div class=\"button-container\">\r\n        <button class=\"button\" (click)=\"addItemToCart()\">Kosárba</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "ItemComponent",
            "id": "component-ItemComponent-94ff79d109ca3f072cc38a30a7aca8ac47fd486e7e08850988aa7b77cb0632728764767a7a2d52d31ff75d50152f4c4a50466c2ff6bb0b5c206e0f7ff4f4608a",
            "file": "projects/aprosag-webshop/src/app/pages/item/item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-item",
            "styleUrls": [
                "./item.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./item.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "amount",
                    "defaultValue": "1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "faArrowAltCircleLeft",
                    "defaultValue": "faArrowAltCircleLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "faArrowAltCircleRight",
                    "defaultValue": "faArrowAltCircleRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "item",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item | undefined",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedImageIndex",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "addItemToCart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "amountChanged",
                    "args": [
                        {
                            "name": "amount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "amount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "nextImage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "previousImage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "selectImage",
                    "args": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "i",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\r\nimport {ItemsService} from \"../../services/item/items.service\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\nimport {map, switchMap} from \"rxjs/operators\";\r\nimport {Observable} from \"rxjs\";\r\nimport firebase from \"firebase/compat\";\r\nimport {Item} from \"../../model/item.model\";\r\nimport {ImageCacheService} from \"../../services/image-cache/image-cache.service\";\r\nimport {faArrowAltCircleLeft, faArrowAltCircleRight} from '@fortawesome/free-regular-svg-icons';\r\nimport {CartService} from \"../../services/cart/cart.service\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {AddedToCartComponent} from \"../../shared/popups/added-to-cart/added-to-cart.component\";\r\nimport {UserService} from \"../../services/user/user.service\";\r\n\r\n@Component({\r\n  selector: 'aprosag-item',\r\n  templateUrl: './item.component.html',\r\n  styleUrls: ['./item.component.scss']\r\n})\r\nexport class ItemComponent {\r\n  faArrowAltCircleLeft = faArrowAltCircleLeft;\r\n  faArrowAltCircleRight = faArrowAltCircleRight;\r\n\r\n  public item: Item | undefined;\r\n  public selectedImageIndex = 0;\r\n  amount = 1;\r\n\r\n  constructor(private itemService: ItemsService,\r\n              private cartService: CartService,\r\n              private modalService: NgbModal,\r\n              private cdRef: ChangeDetectorRef,\r\n              private toastr: ToastrService,\r\n              private activatedRoute: ActivatedRoute) {\r\n    this.activatedRoute.params.subscribe(params => {\r\n      this.item = this.itemService.getItemById(params['id']);\r\n    });\r\n  }\r\n\r\n  selectImage(i: number) {\r\n    this.selectedImageIndex = i;\r\n  }\r\n\r\n  nextImage() {\r\n    this.selectedImageIndex++;\r\n    console.log(this.selectedImageIndex)\r\n    if (this.selectedImageIndex >= (this.item?.image_urls ? this.item?.image_urls.length : 0))\r\n      this.selectedImageIndex = 0;\r\n  }\r\n\r\n  previousImage() {\r\n    this.selectedImageIndex--;\r\n    if (this.selectedImageIndex < 0)\r\n      this.selectedImageIndex = (this.item?.image_urls ? this.item?.image_urls.length - 1 : 0);\r\n  }\r\n\r\n  addItemToCart() {\r\n    if (this.item) {\r\n      this.cartService.addItemToCart(this.item, this.amount);\r\n\r\n      const modalRef = this.modalService.open(AddedToCartComponent, {\r\n        backdrop: true,\r\n        backdropClass: 'modal-dialog-backdrop',\r\n        modalDialogClass: 'modal-dialog-centered added-to-cart-dialog'\r\n      });\r\n      modalRef.componentInstance.item = this.item;\r\n      modalRef.componentInstance.amount = this.amount;\r\n\r\n      this.amount = 1;\r\n    }\r\n  }\r\n\r\n  amountChanged(amount: number) {\r\n    this.amount = amount;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n:host {\r\n  flex: 1;\r\n  background: linear-gradient(180deg, rgba(251, 240, 241) 0%, rgba(255, 255, 255) 60%);;\r\n}\r\n\r\n.item-page-container {\r\n  font-family: lato, Helvetica, sans-serif;\r\n  font-weight: 800;\r\n  color: $font-color;\r\n\r\n  .item-container {\r\n    width: $content-percentage-width;\r\n    max-width: $content-max-width;\r\n\r\n    margin: 50px auto;\r\n\r\n    display: flex;\r\n    gap: 20px;\r\n\r\n    @media (max-width: $breakpoint-sm) {\r\n      width: 100%;\r\n      flex-direction: column;\r\n      margin-top: 0;\r\n      padding: $base-padding;\r\n    }\r\n\r\n\r\n    .images {\r\n      width: 50%;\r\n\r\n      @media (max-width: $breakpoint-md) {\r\n        width: 100%;\r\n        margin: 0 auto;\r\n        max-width: 500px;\r\n      }\r\n\r\n      .main-image-container {\r\n        position: relative;\r\n\r\n        .arrow {\r\n          position: absolute;\r\n          top: calc(50% - 20px);\r\n          cursor: pointer;\r\n          height: 40px;\r\n\r\n\r\n          &.left {\r\n            left: 15px;\r\n            transform: rotate(180deg);\r\n          }\r\n\r\n          &.right {\r\n            right: 15px;\r\n          }\r\n        }\r\n\r\n        .main-image {\r\n          user-select: none;\r\n          width: 100%;\r\n        }\r\n      }\r\n\r\n\r\n      .small-images {\r\n        width: 100%;\r\n        margin-top: 10px;\r\n        display: flex;\r\n        gap: 5px;\r\n\r\n\r\n        .small-image {\r\n          width: 100%;\r\n          cursor: pointer;\r\n          max-height: 94px;\r\n          transition: opacity 0.3s;\r\n\r\n\r\n          &.inactive {\r\n            opacity: 0.5;\r\n          }\r\n\r\n          &:hover {\r\n            opacity: 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .details {\r\n      width: 50%;\r\n      color: $font-color;\r\n      font-size: 16px;\r\n      font-weight: 600;\r\n\r\n      @media (max-width: $breakpoint-md) {\r\n        width: 100%;\r\n      }\r\n\r\n      .title-container {\r\n        @media (max-width: $breakpoint-md) {\r\n          margin-top: 35px;\r\n        }\r\n\r\n        .title {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          gap: 15px;\r\n\r\n          .title-text {\r\n            @include title;\r\n            padding: 0 !important;\r\n\r\n          }\r\n        }\r\n\r\n        .subtitle {\r\n          @include subtitle;\r\n        }\r\n\r\n        .favorite-icon{\r\n          cursor: pointer;\r\n        }\r\n      }\r\n\r\n\r\n      .description {\r\n        width: 70%;\r\n        margin-bottom: 25px;\r\n\r\n        @media (max-width: $breakpoint-lg) {\r\n          width: 100%;\r\n        }\r\n      }\r\n\r\n      .details-container {\r\n        margin-bottom: 25px;\r\n      }\r\n\r\n      .stock-container {\r\n        font-weight: bold;\r\n        margin-bottom: 25px;\r\n      }\r\n\r\n      .price-container {\r\n        margin-bottom: 25px;\r\n\r\n        &.mobile{\r\n          display: none;\r\n        }\r\n\r\n        @media (max-width: $breakpoint-sm) {\r\n          display: none;\r\n\r\n          &.mobile{\r\n            display: block;\r\n            font-size: 1.2em;\r\n          }\r\n        }\r\n\r\n        .discount {\r\n          font-weight: bold;\r\n          color: $red-text;\r\n        }\r\n\r\n        .original_price {\r\n          font-weight: bold;\r\n\r\n          &.invalid {\r\n            opacity: 0.6;\r\n            margin-left: 50px;\r\n            text-decoration: line-through;\r\n          }\r\n        }\r\n      }\r\n\r\n      .cart-container {\r\n        display: flex;\r\n        gap: 50px;\r\n\r\n        .button {\r\n          width: 100%;\r\n          @include button;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n",
                    "styleUrl": "./item.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "itemService",
                        "type": "ItemsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cdRef",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 27,
                "jsdoctags": [
                    {
                        "name": "itemService",
                        "type": "ItemsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cdRef",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "activatedRoute",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"item-page-container\" *ngIf=\"item\">\r\n  <div class=\"item-container\">\r\n    <!--\r\n    <div class=\"mobile-title-container\">\r\n      <div class=\"title\">\r\n        <span class=\"title-text\">{{item.title}}</span>\r\n        <aprosag-favorite [item]=\"item\"></aprosag-favorite>\r\n      </div>\r\n      <div class=\"subtitle\">\r\n        {{item.subtitle}}\r\n      </div>\r\n    </div>\r\n    -->\r\n    <div class=\"images\">\r\n      <div class=\"main-image-container\" *ngIf=\"item.image_urls\">\r\n        <img class=\"arrow left\" src=\"assets/Icons/Arrow_Line_Item.svg\" (click)=\"previousImage()\"/>\r\n        <img class=\"arrow right\" src=\"assets/Icons/Arrow_Line_Item.svg\" (click)=\"nextImage()\"/>\r\n        <img class=\"main-image\" [src]=\"'assets/' + item.image_urls[selectedImageIndex]\"/>\r\n      </div>\r\n\r\n      <div class=\"small-images\">\r\n        <span *ngFor=\"let image of item.image_urls, let i = index\">\r\n          <img class=\"small-image\" [ngClass]=\"{inactive: selectedImageIndex !== i}\" [src]=\"'assets/' + image\"\r\n               (click)=\"selectImage(i)\"/>\r\n        </span>\r\n      </div>\r\n    </div>\r\n    <div class=\"details\">\r\n      <span class=\"title-container\">\r\n          <div class=\"title\">\r\n            <span class=\"title-text\">{{item.title}}</span>\r\n            <aprosag-favorite class=\"favorite-icon\" [item]=\"item\"></aprosag-favorite>\r\n      </div>\r\n      <div class=\"subtitle\">\r\n        {{item.subtitle}}\r\n      </div>\r\n      </span>\r\n\r\n      <div class=\"price-container mobile\" >\r\n        <span *ngIf=\"item.discount_price\" class=\"discount price\">{{item.discount_price + \" Ft\"}}</span>\r\n        <span *ngIf=\"item.discount_percentage\"\r\n              class=\"discount percentage\">{{(item.price * item.discount_percentage) + \" Ft\"}}</span>\r\n        <span class=\"original_price\"\r\n              [ngClass]=\"{'invalid': item.discount_price || item.discount_percentage}\">{{item.price + \" Ft\"}}</span>\r\n      </div>\r\n\r\n      <div class=\"description\">\r\n        {{item.description}}\r\n      </div>\r\n      <div class=\"details-container\">\r\n        <div class=\"page-number\">Oldalak száma: {{item.page_count}} </div>\r\n        <div class=\"cover-type\">Borító: {{item.cover_type}} </div>\r\n        <div class=\"isbn\">ISBN: {{item.ISBN}} </div>\r\n        <div class=\"weight\">Súly: {{item.weight}} </div>\r\n        <div class=\"publication-date\">Kiadás éve: {{item.publication_date}} </div>\r\n      </div>\r\n      <div class=\"stock-container\">\r\n        Raktáron: {{item.storage_amount}} db\r\n      </div>\r\n      <div class=\"price-container\" *ngIf=\"item.price\">\r\n        <span *ngIf=\"item.discount_price\" class=\"discount price\">{{item.discount_price + \" Ft\"}}</span>\r\n        <span *ngIf=\"item.discount_percentage\"\r\n              class=\"discount percentage\">{{(item.price * item.discount_percentage) + \" Ft\"}}</span>\r\n        <span class=\"original_price\"\r\n              [ngClass]=\"{'invalid': item.discount_price || item.discount_percentage}\">{{item.price + \" Ft\"}}</span>\r\n      </div>\r\n\r\n      <div class=\"cart-container\">\r\n        <aprosag-stepper [allowZero]=\"false\" [value]=\"amount\" (valueChange)=\"amountChanged($event)\"></aprosag-stepper>\r\n        <button class=\"button add-to-cart\" type=\"button\" (click)=\"addItemToCart()\" [disabled]=\"amount === 0\">Kosárba\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div id=\"related-items-container\">\r\n\r\n  </div>\r\n</div>\r\n\r\n<ng-template #content let-modal class=\"added-to-cart-modal\">\r\n  <aprosag-added-to-cart></aprosag-added-to-cart>\r\n</ng-template>\r\n"
        },
        {
            "name": "ItemsComponent",
            "id": "component-ItemsComponent-4b7c81b9e39e82e9fdcb08cb4acde77a75c5955ad52107efcdad7f897f483e318c9567bbc872c88f3aeed2e77b758c0c8de9454633599865e7151fb53611b72d",
            "file": "projects/aprosag-webshop/src/app/pages/items/items.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-items",
            "styleUrls": [
                "./items.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./items.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Item[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "itemsService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ItemsService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {ItemsService} from \"../../services/item/items.service\";\r\nimport {Observable} from \"rxjs\";\r\nimport {Item} from \"../../model/item.model\";\r\nimport {ActivatedRoute} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'aprosag-items',\r\n  templateUrl: './items.component.html',\r\n  styleUrls: ['./items.component.scss']\r\n})\r\nexport class ItemsComponent{\r\n\r\n\r\n  public items: Item[] = [];\r\n\r\n  constructor(public itemsService: ItemsService) {\r\n    itemsService.items.subscribe((items) => {\r\n      this.items = items;\r\n    })\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n.items-page-container {\r\n  font-family: lato, Helvetica, sans-serif;\r\n  font-weight: 800;\r\n  color: $font-color;\r\n\r\n  @media (max-width: $breakpoint-md) {\r\n    padding-top: 0;\r\n  }\r\n\r\n  @include background('/assets/Backgrounds/Home_BG.svg');\r\n\r\n  @media (min-width: $breakpoint-lg) {\r\n    padding-top: 35px;\r\n  }\r\n\r\n  .logo-container {\r\n    width: 100%;\r\n\r\n    .logo {\r\n      display: block;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    @media (max-width: $breakpoint-lg) {\r\n      display: none;\r\n\r\n    }\r\n  }\r\n\r\n\r\n  .items-container {\r\n    width: $content-percentage-width;\r\n    max-width: $content-max-width;\r\n\r\n    margin: 0 auto 50px;\r\n    font-size: 18px;\r\n\r\n    @media (max-width: $breakpoint-lg) {\r\n      width: 80%;\r\n      margin: 25px auto;\r\n    }\r\n\r\n    @media (max-width: $breakpoint-md) {\r\n      width: 95%;\r\n      margin: 0 auto;\r\n    }\r\n\r\n    .items {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr 1fr;\r\n      column-gap: 50px;\r\n      row-gap: 140px;\r\n      margin-top: 50px;\r\n\r\n      @media (max-width: $breakpoint-sm) {\r\n        grid-template-columns: 1fr 1fr;\r\n        column-gap: 20px;\r\n        row-gap: 100px;\r\n        margin: 50px auto;\r\n      }\r\n\r\n      @media (max-width: $breakpoint-md) {\r\n        column-gap: 20px;\r\n        row-gap: 80px;\r\n      }\r\n\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./items.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "itemsService",
                        "type": "ItemsService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 15,
                "jsdoctags": [
                    {
                        "name": "itemsService",
                        "type": "ItemsService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"items-page-container\">\r\n  <div class=\"logo-container\">\r\n    <img class=\"logo\" style=\"fill: red\" height=\"89px\" src=\"../../../assets/Logo/logo_dense_black.svg\"/>\r\n  </div>\r\n\r\n  <aprosag-gallery></aprosag-gallery>\r\n\r\n  <div class=\"items-container\">\r\n\r\n    <div class=\"items\">\r\n    <span class=\"item\" *ngFor=\"let item of items\">\r\n      <aprosag-item-card [item]=\"item\"></aprosag-item-card>\r\n    </span>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #content let-modal class=\"added-to-card-modal\">\r\n  <aprosag-added-to-cart></aprosag-added-to-cart>\r\n</ng-template>\r\n"
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-3fb94ac356dd0c738697bf2bee99524b31e25ce267e5cff61085aaf24e72eee54ce2c29e2516bc36ff3adf0cac9d29584d366ac78e2493d585a0f5928894f5b6",
            "file": "projects/aprosag-webshop/src/app/pages/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "loginForm",
                    "defaultValue": "this.fb.group({\r\n    email: ['', [Validators.required, Validators.email]],\r\n    password: ['', [Validators.required]]\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [
                {
                    "name": "goToSignup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "login",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {AuthService} from \"../../services/auth/auth.service\";\r\nimport {FormBuilder, Validators} from \"@angular/forms\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\n\r\n@Component({\r\n  selector: 'aprosag-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent {\r\n  loginForm = this.fb.group({\r\n    email: ['', [Validators.required, Validators.email]],\r\n    password: ['', [Validators.required]]\r\n  })\r\n\r\n  constructor(private router: Router, private authService: AuthService, private fb: FormBuilder, private toastr: ToastrService) {\r\n  }\r\n\r\n  goToSignup() {\r\n    this.router.navigateByUrl('signup');\r\n  }\r\n\r\n  login() {\r\n    this.authService.login(this.loginForm.get('email')?.value, this.loginForm.get('password')?.value).then((result) => {\r\n      this.router.navigateByUrl('items');\r\n    }, (error) => {\r\n      this.toastr.error('Sikertelen bejelentkezés!', 'Hiba');\r\n    })\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n.login-page-container {\r\n  color: $font-color !important;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100%;\r\n\r\n  @include background('/assets/Backgrounds/Contact_BG.svg');\r\n\r\n  font-family: lato, Helvetica, sans-serif;\r\n\r\n  .login-page {\r\n    width: $content-percentage-width;\r\n    max-width: $content-max-width;\r\n\r\n    display: flex;\r\n    gap: 25px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    @media (max-width: $breakpoint-md) {\r\n      width: 100%;\r\n      max-width: auto;\r\n      padding: 0 10px;\r\n    }\r\n\r\n    .title {\r\n      @include title();\r\n    }\r\n\r\n    .form-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 25px;\r\n      align-items: center;\r\n      max-width: 500px;\r\n      width: 100%;\r\n\r\n      form {\r\n        width: 100%;\r\n\r\n        input {\r\n          @include input-field;\r\n          margin-bottom: 20px;\r\n        }\r\n\r\n        .signup-text {\r\n          text-align: center;\r\n          font-size: 16px;\r\n          font-weight: 700;\r\n          margin-top: 50px;\r\n        }\r\n\r\n        .button {\r\n          margin: 20px auto;\r\n\r\n          &.login-button {\r\n            @include button;\r\n\r\n            padding-left: 20px;\r\n            padding-right: 20px;\r\n          }\r\n\r\n          &.signup-button {\r\n            @include button($font-color);\r\n\r\n            padding-left: 20px;\r\n            padding-right: 20px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"login-page-container\">\r\n  <div class=\"login-page\">\r\n    <div class=\"title\">Bejelentkezés</div>\r\n    <div class=\"form-container\">\r\n      <form [formGroup]=\"loginForm\">\r\n        <div>\r\n          <input type=\"email\" formControlName=\"email\" placeholder=\"Email cím\"/>\r\n        </div>\r\n        <div>\r\n          <input type=\"password\" formControlName=\"password\" placeholder=\"Jelszó\"/>\r\n        </div>\r\n        <div>\r\n          <button class=\"button login-button\" type=\"submit\" (click)=\"login()\">Bejelentkezés</button>\r\n        </div>\r\n        <div>\r\n          <div class=\"signup-text\">Nincs még fiókod?</div>\r\n          <button class=\"button signup-button\" type=\"button\" (click)=\"goToSignup()\">Regisztráció</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n"
        },
        {
            "name": "NewsletterComponent",
            "id": "component-NewsletterComponent-9ef8a93bb87f29bf392762819b62f7cc7b67745e0e26e4957bb8450ad8824dff0c2703d0990f2a6be3a7562ddb65204240b2c92444a2e573b73a75190ce1d913",
            "file": "projects/aprosag-webshop/src/app/shared/components/newsletter/newsletter.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-newsletter",
            "styleUrls": [
                "./newsletter.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./newsletter.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "email",
                    "defaultValue": "new FormControl('', [Validators.email, Validators.required])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [
                {
                    "name": "subscribe",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {FormControl, Validators} from \"@angular/forms\";\r\nimport {NewsletterService} from \"../../../services/newsletter/newsletter.service\";\r\nimport {Firestore} from \"@angular/fire/firestore\";\r\n\r\n@Component({\r\n  selector: 'aprosag-newsletter',\r\n  templateUrl: './newsletter.component.html',\r\n  styleUrls: ['./newsletter.component.scss']\r\n})\r\nexport class NewsletterComponent {\r\n  email = new FormControl('', [Validators.email, Validators.required]);\r\n\r\n  constructor(private newsLetterService: NewsletterService) {\r\n\r\n  }\r\n\r\n  subscribe() {\r\n    if(this.email.valid) {\r\n      this.newsLetterService.subscribe(this.email.value).then((result) => {\r\n        alert(\"Sikeres feliratkozás!\");\r\n      })\r\n    } else {\r\n      alert(\"Nem megfelelő email cím!\");\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n.newsletter-container{\r\n  height: 300px;\r\n  background-image: url(\"/assets/Product_1/_0018_Product_1b.jpg\");\r\n  background-repeat: no-repeat;\r\n  background-position-x: -230px;\r\n  background-position-y: -150px;\r\n  background-size: 700px auto;\r\n  background-color: rgb(255, 235, 237);\r\n  width: 100%;\r\n\r\n  .newsletter{\r\n    width: 70%;\r\n    margin: 0 auto;\r\n    background-color: blue;\r\n    position: relative;\r\n\r\n    .inner-container{\r\n      margin: 2em;\r\n      position: absolute;\r\n      margin-left: 30%;\r\n\r\n      .title{\r\n        font-size: 1.3em;\r\n        color: $font-color;\r\n        font-family: lato, Helvetica, sans-serif;\r\n        font-weight: bold;      }\r\n\r\n      .subtitle{\r\n        margin-top: 20px;\r\n        font-size: 1em;\r\n        color: $font-color;\r\n        font-family: lato, Helvetica, sans-serif;\r\n        font-weight: 600;\r\n      }\r\n\r\n      .subscribe-form {\r\n        margin-top: 50px;\r\n\r\n\r\n        input {\r\n          @include input-field;\r\n          max-width: 300px;\r\n        }\r\n\r\n        .subscribe {\r\n          margin-top: 2px;\r\n          margin-left: -50px;\r\n          @include button();\r\n          padding-top: 13px;\r\n          padding-bottom: 14px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./newsletter.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "newsLetterService",
                        "type": "NewsletterService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "newsLetterService",
                        "type": "NewsletterService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"newsletter-container\">\r\n  <div class=\"newsletter\">\r\n    <div class=\"inner-container\">\r\n      <div class=\"title\">Szeretéd, hogy értesítsünk, ha a következő Apróság könyv megjelenik?</div>\r\n      <div class=\"subtitle\">Iratkozz fel és rendeld meg elsőként a könyvet kedvezményesen!</div>\r\n      <form class=\"subscribe-form\">\r\n        <input type=\"email\" [formControl]=\"email\"/>\r\n        <button class=\"subscribe\" (click)=\"subscribe()\">Értesítést kérek</button>\r\n      </form>\r\n    </div>\r\n\r\n  </div>\r\n\r\n</div>\r\n"
        },
        {
            "name": "OrdersComponent",
            "id": "component-OrdersComponent-832afbe8ea96e06e7bf970afd2cb715558a244015ed7eda653d78775bceea6958d1b5b0af2d7dca1ed4b0746f5b4a06aa2da5609d3125d237053cb3fcff147cf",
            "file": "projects/aprosag-webshop/src/app/pages/profile/orders/orders.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-orders",
            "styleUrls": [
                "./orders.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./orders.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "orders",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {Order} from \"../../../model/order.model\";\r\nimport {User} from \"../../../model/user.model\";\r\nimport {UserService} from \"../../../services/user/user.service\";\r\nimport {OrderService} from \"../../../services/order/order.service\";\r\n\r\n@Component({\r\n  selector: 'aprosag-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.scss']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n  public orders: {order: Order, open: boolean}[] = [];\r\n\r\n  constructor(private userService: UserService,\r\n              private orderService: OrderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.user.subscribe((user) => {\r\n      if (user) {\r\n        this.orderService.getOrders().subscribe((orders) => {\r\n          this.orders = orders.map((order) => {\r\n            return {order, open: false}\r\n          });\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n.orders-container {\r\n  font-weight: bold;\r\n\r\n  .no-orders{\r\n    text-align: center;\r\n    font-size: 16px;\r\n    padding-top: 35px;\r\n  }\r\n\r\n  .header {\r\n    padding: 15px 25px;\r\n    color: white;\r\n    background-color: $base-green;\r\n\r\n    .text {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n\r\n  .price {\r\n    text-align: right;\r\n  }\r\n\r\n  .content {\r\n    padding: 0 25px;\r\n    background-color: white;\r\n\r\n    @media (max-width: $breakpoint-sm) {\r\n      padding: 0;\r\n    }\r\n\r\n    .order-number {\r\n      color: $green-line;\r\n      text-decoration: underline;\r\n      cursor: pointer;\r\n    }\r\n\r\n\r\n    .table-row {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      font-weight: 700;\r\n\r\n      border-bottom: 1px solid black;\r\n      padding: 20px 0;\r\n\r\n      overflow: hidden;\r\n\r\n\r\n      .right {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        width: 60%\r\n      }\r\n\r\n      .cart-item-image-container {\r\n        height: 100px;\r\n\r\n        .cart-item-image {\r\n          height: 100%;\r\n        }\r\n\r\n        .cart-text-container {\r\n          flex-direction: column;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          width: 100%;\r\n          margin-left: 40px;\r\n          font-size: 18px;\r\n\r\n          .title-container {\r\n            display: flex;\r\n            justify-content: space-between;\r\n\r\n            .title {\r\n              font-weight: bold;\r\n            }\r\n\r\n            .delete-button {\r\n              font-size: 25px;\r\n            }\r\n          }\r\n\r\n          .price-container {\r\n            display: flex;\r\n            justify-content: space-between;\r\n\r\n            .times {\r\n              color: rgb(180, 180, 180);\r\n              margin-right: 10px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      &:last-of-type {\r\n        border-bottom: none;\r\n      }\r\n\r\n      .table-title {\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n\r\n.content-title {\r\n  background-color: $disabled-button;\r\n  color: white;\r\n  vertical-align: center;\r\n  padding: 20px;\r\n\r\n  .title {\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    .close-icon {\r\n      color: white;\r\n    }\r\n  }\r\n}\r\n\r\n.order-content-container {\r\n  font-family: lato, Helvetica, sans-serif;\r\n\r\n  background-color: #F6F7F6;\r\n  max-width: 60%;\r\n  margin: 50px auto;\r\n  font-weight: bold;\r\n\r\n  .header {\r\n    padding: 15px 25px;\r\n    color: white;\r\n    background-color: $base-green;\r\n\r\n    .text {\r\n      font-size: 16px;\r\n    }\r\n  }\r\n\r\n  .content {\r\n\r\n    .table-row {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      font-weight: 700;\r\n\r\n\r\n      border-bottom: 1px solid black;\r\n      padding: 20px 0;\r\n\r\n      overflow: hidden;\r\n\r\n      .right {\r\n        display: flex;\r\n        justify-content: space-between;\r\n        width: 60%\r\n      }\r\n\r\n      .cart-item-image-container {\r\n        height: 100px;\r\n\r\n        .cart-item-image {\r\n          height: 100%;\r\n        }\r\n\r\n        .cart-text-container {\r\n          flex-direction: column;\r\n          display: flex;\r\n          justify-content: space-between;\r\n          width: 100%;\r\n          margin-left: 40px;\r\n          font-size: 18px;\r\n\r\n          .title-container {\r\n            display: flex;\r\n            justify-content: space-between;\r\n\r\n            .title {\r\n              font-weight: bold;\r\n            }\r\n\r\n            .delete-button {\r\n              font-size: 25px;\r\n            }\r\n          }\r\n\r\n          .price-container {\r\n            display: flex;\r\n            justify-content: space-between;\r\n\r\n            .times {\r\n              color: rgb(180, 180, 180);\r\n              margin-right: 10px;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      &:last-of-type {\r\n        border-bottom: none;\r\n      }\r\n\r\n      .table-title {\r\n        font-weight: 700;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n",
                    "styleUrl": "./orders.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "orderService",
                        "type": "OrderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 13,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "orderService",
                        "type": "OrderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"orders-container\">\r\n  <div class=\"no-orders\" *ngIf=\"orders.length === 0\">\r\n    Még nincs leadott rendelésed.\r\n  </div>\r\n  <table *ngIf=\"orders.length > 0\" class=\"table\">\r\n    <thead class=\"header\">\r\n    <tr>\r\n      <th scope=\"col\">Rendelésszám</th>\r\n      <th scope=\"col\">Rendelés dátuma</th>\r\n      <th scope=\"col\">Státusz</th>\r\n      <th class=\"price\" scope=\"col\">Összeg</th>\r\n    </tr>\r\n    </thead>\r\n    <tbody class=\"content\">\r\n    <ng-container *ngFor=\"let order of orders\">\r\n      <tr>\r\n        <td>\r\n                  <span class=\"order-number\" *ngIf=\"order.order.orderNumber\">\r\n                    <a (click)=\"order.open = !order.open\"> #{{order.order.orderNumber.toString()?.slice(order.order.orderNumber.toString().length - 5)}}</a>\r\n                  </span>\r\n        </td>\r\n        <td>{{order.order.date?.toDate() | date}}</td>\r\n        <td>{{order.order.state}}</td>\r\n        <td class=\"price\" *ngIf=\"order.order.shippingType && order.order.price\">{{order.order.price + order.order.shippingType.value}} Ft</td>\r\n      </tr>\r\n      <ng-container *ngIf=\"order.open\">\r\n        <tr class=\"content-title\">\r\n          <td colspan=\"4\">\r\n            <div class=\"title-text\">\r\n              <span>Rendelés tartalma</span>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n        <tr class=\"order-content-container\">\r\n          <td colspan=\"4\">\r\n            <div class=\"content\">\r\n              <div class=\"table-row\" *ngFor=\"let item of order.order.cart\">\r\n                <span class=\"amount\">{{item.amount}}x</span>\r\n                <span class=\"cart-item-image-container\" *ngIf=\"item.item.image_urls\">\r\n                          <img class=\"cart-item-image\" [src]=\"'assets/' + item.item.image_urls[0]\"/>\r\n                        </span>\r\n                <span class=\"right\">\r\n                          <span class=\"cart-item-text-container\">\r\n                              <div>{{item.item.title}}</div>\r\n                              <div class=\"price\">{{item.item.price}} Ft</div>\r\n                          </span>\r\n                        <span class=\"price\">\r\n                              {{(item.item.price || 0) * item.amount}} Ft\r\n                            </span>\r\n                        </span>\r\n              </div>\r\n              <div class=\"table-row\" *ngIf=\"order.order.shippingType\">\r\n                <span class=\"table-title\">Szállítás</span>\r\n                <span class=\"right\">\r\n                          <span>{{order.order.shippingType.name}}</span>\r\n                          <span>{{order.order.shippingType.value}} Ft</span>\r\n                        </span>\r\n              </div>\r\n              <div class=\"table-row\" *ngIf=\"order.order.shippingType && order.order.price\">\r\n                <span class=\"table-title\">Összeg</span>\r\n                <span>{{order.order.price + order.order.shippingType.value}} Ft</span>\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </tr>\r\n      </ng-container>\r\n    </ng-container>\r\n\r\n    </tbody>\r\n  </table>\r\n</div>\r\n"
        },
        {
            "name": "PaymentOptionsComponent",
            "id": "component-PaymentOptionsComponent-86c65b4e59f162eaee1731b65a285497987827da7ab0ad57edeba6698c4f4685a0fc38a52e3d06998d03edec52ae9886a6711fbac0e24810a9e9c79b00c2f69b",
            "file": "projects/aprosag-webshop/src/app/pages/cash-desk/payment-options/payment-options.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-payment-options",
            "styleUrls": [
                "./payment-options.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./payment-options.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cartService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CartService",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "orderService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OrderService",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "selectedPaymentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PaymentType",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport {OrderService} from \"../../../services/order/order.service\";\r\nimport {CartService} from \"../../../services/cart/cart.service\";\r\nimport {PaymentType} from \"../../../model/order.model\";\r\n\r\n@Component({\r\n  selector: 'aprosag-payment-options',\r\n  templateUrl: './payment-options.component.html',\r\n  styleUrls: ['./payment-options.component.scss']\r\n})\r\nexport class PaymentOptionsComponent  {\r\n  selectedPaymentType: PaymentType;\r\n\r\n  constructor(public cartService: CartService,\r\n              public orderService: OrderService) {\r\n    this.selectedPaymentType = orderService.paymentTypes[0];\r\n\r\n    console.log(this.selectedPaymentType);\r\n  }\r\n\r\n\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".option {\r\n  margin-bottom: 24px;\r\n  .input-container {\r\n    display: flex;\r\n    align-items: center;\r\n    height: 30px;\r\n\r\n    input {\r\n      width: 50px;\r\n      height: 1.5em;\r\n    }\r\n\r\n    .label {\r\n      display: flex;\r\n      flex-direction: column;\r\n      margin: 0;\r\n\r\n      .name {\r\n        font-weight: bold;\r\n      }\r\n    }\r\n  }\r\n\r\n  .description-container {\r\n    display: flex;\r\n\r\n    .placeholder {\r\n      width: 50px;\r\n    }\r\n\r\n    .description {\r\n      white-space: pre-wrap;\r\n      line-height: 2;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./payment-options.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "orderService",
                        "type": "OrderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "orderService",
                        "type": "OrderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"shipping-options-container\">\r\n  <div class=\"shipping-options\">\r\n    <div class=\"option\" *ngFor=\"let option of orderService.paymentTypes\">\r\n      <div class=\"input-container\">\r\n        <input class=\"radio-button\" type=\"radio\" id=\"{{option.name}}\" name=\"option\" [value]=\"option\" [(ngModel)]=\"selectedPaymentType\"\r\n               checked>\r\n        <label class=\"label\" for=\"{{option.name}}\">\r\n          <span class=\"name\">{{option.name}}</span>\r\n        </label>\r\n      </div>\r\n      <div class=\"description-container\">\r\n        <span class=\"placeholder\"></span>\r\n        <span class=\"description\">{{option.description}}</span>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "PersonalDataComponent",
            "id": "component-PersonalDataComponent-a0698d549f1a6f6f508842360b423e3f0a9f97539f7cc9cce11c90278b6c2290b4fb4079636f0f1219223b174b7997bfdb9fef3f322bca7e5a488e84d7c0abac",
            "file": "projects/aprosag-webshop/src/app/pages/profile/personal-data/personal-data.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-personal-data",
            "styleUrls": [
                "./personal-data.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./personal-data.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthService",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "faCheckCircle",
                    "defaultValue": "faCheckCircle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "orders",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "profileForm",
                    "defaultValue": "this.fb.group({\r\n      email: [''],\r\n      username: [''],\r\n      lastName: [''],\r\n      firstName: [''],\r\n      companyName: [''],\r\n      taxNumber: [''],\r\n      country: [''],\r\n      city: [''],\r\n      address: [''],\r\n      zipCode: [''],\r\n      phoneNumber: ['']\r\n    }\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "userService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserService",
                    "optional": false,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "resendVerificationEmail",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "saveData",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\nimport {UserService} from \"../../../services/user/user.service\";\r\nimport {User} from \"../../../model/user.model\";\r\nimport {OrderService} from \"../../../services/order/order.service\";\r\nimport {Order} from \"../../../model/order.model\";\r\nimport {FormBuilder} from \"@angular/forms\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {AuthService} from \"../../../services/auth/auth.service\";\r\nimport {faCheckCircle} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n@Component({\r\n  selector: 'aprosag-personal-data',\r\n  templateUrl: './personal-data.component.html',\r\n  styleUrls: ['./personal-data.component.scss']\r\n})\r\nexport class PersonalDataComponent implements OnInit {\r\n  faCheckCircle = faCheckCircle;\r\n\r\n  profileForm = this.fb.group({\r\n      email: [''],\r\n      username: [''],\r\n      lastName: [''],\r\n      firstName: [''],\r\n      companyName: [''],\r\n      taxNumber: [''],\r\n      country: [''],\r\n      city: [''],\r\n      address: [''],\r\n      zipCode: [''],\r\n      phoneNumber: ['']\r\n    }\r\n  )\r\n\r\n  public orders: { order: Order, open: boolean }[] = [];\r\n\r\n  public user: User | null = null;\r\n\r\n\r\n  constructor(public userService: UserService,\r\n              private fb: FormBuilder,\r\n              public authService: AuthService,\r\n              private orderService: OrderService,\r\n              private toastr: ToastrService\r\n              ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userService.user.subscribe((user) => {\r\n      this.profileForm.patchValue(user || new User());\r\n      if (user) {\r\n        this.orderService.getOrders().subscribe((orders) => {\r\n          this.orders = orders.map((order) => {\r\n            return {order, open: false}\r\n          });\r\n        });\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  saveData() {\r\n    this.userService.updateUserData(this.profileForm.value).then(() => {\r\n      this.toastr.success('Profil sikeresen elmentve!');\r\n    }).catch(() => {\r\n      this.toastr.error('Sajnáljuk, valami hiba történt :(');\r\n    });\r\n  }\r\n\r\n\r\n  resendVerificationEmail() {\r\n    const verificationRef = this.authService.sendEmailVerification().subscribe((result) => {\r\n      this.toastr.success(\"Megerősítő Email elküldve!\");\r\n      verificationRef.unsubscribe();\r\n    }, (error) => {\r\n      this.toastr.error(\"Kérjük, próbáld meg később!\", \"Hiba történt a megerősítő Email elküldése közben!\")\r\n      verificationRef.unsubscribe();\r\n    })\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\nform {\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .form-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 20px;\r\n    margin-bottom: 35px;\r\n\r\n    .email-verification-container {\r\n      margin: 0 15px;\r\n\r\n      .link {\r\n        color: $base-green;\r\n        cursor: pointer;\r\n      }\r\n    }\r\n\r\n    .form-block {\r\n      display: grid;\r\n      grid-template-columns: 50% 50%;\r\n      column-gap: 20px;\r\n      row-gap: 20px;\r\n\r\n      @media (max-width: $breakpoint-md) {\r\n        grid-template-columns: 100%;\r\n        column-gap: 0;\r\n      }\r\n\r\n      .form-field-container {\r\n        color: $font-color;\r\n\r\n        .label {\r\n          font-size: 15px;\r\n          display: block;\r\n\r\n          .verified {\r\n            color: $base-green;\r\n          }\r\n        }\r\n\r\n        .input-field {\r\n          @include input-field;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .button {\r\n    @include button;\r\n    width: 180px;\r\n\r\n    align-self: end;\r\n  }\r\n\r\n  .divider {\r\n    width: 99%;\r\n    height: 2px;\r\n    align-self: center;\r\n    background-color: rgba(black, 0.1);\r\n  }\r\n}\r\n\r\n\r\n",
                    "styleUrl": "./personal-data.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "orderService",
                        "type": "OrderService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 37,
                "jsdoctags": [
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "orderService",
                        "type": "OrderService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<form [formGroup]=\"profileForm\" *ngIf=\"userService.user\">\r\n  <div class=\"form-container\">\r\n    <div class=\"form-block\">\r\n      <div class=\"form-field-container\">\r\n                  <span class=\"label\">Email cím\r\n                    <span class=\"verified\" matTooltip=\"Email-cím megerősítve\" *ngIf=\"(authService.user$ | async)?.emailVerified\">\r\n                      <fa-icon [icon]=\"faCheckCircle\"></fa-icon>\r\n                    </span>\r\n                    </span>\r\n        <input class=\"input-field\" formControlName=\"email\"/>\r\n      </div>\r\n      <div class=\"form-field-container\">\r\n        <span class=\"label\">Jelszó</span>\r\n        <input class=\"input-field\" disabled/>\r\n      </div>\r\n    </div>\r\n    <div class=\"email-verification-container\" *ngIf=\"(!(authService.user$ | async)?.emailVerified)\">\r\n      <span>Figyelem!</span> Rendelés leadásához erősítsd meg email-címedet! Kérlek kattints az emailben kapott linkre, majd frissítsd az oldalt.\r\n      <br/>Ha nem találod a linket, akkor kattints <span class=\"link\" (click)=\"resendVerificationEmail()\">ide</span> az email újraküldéséhez.\r\n    </div>\r\n    <div class=\"divider\"></div>\r\n    <div class=\"form-block\">\r\n      <div class=\"form-field-container\">\r\n        <span class=\"label\">Vezetéknév</span>\r\n        <input class=\"input-field\" formControlName=\"lastName\"/>\r\n      </div>\r\n      <div class=\"form-field-container\">\r\n        <span class=\"label\">Keresztnév</span>\r\n        <input class=\"input-field\" formControlName=\"firstName\"/>\r\n      </div>\r\n      <div class=\"form-field-container\">\r\n        <span class=\"label\">Cégnév (nem kötelező)</span>\r\n        <input class=\"input-field\" formControlName=\"companyName\"/>\r\n      </div>\r\n      <div class=\"form-field-container\">\r\n        <span class=\"label\">Adószám (Vállalkozásoknak kötelező)</span>\r\n        <input class=\"input-field\" formControlName=\"taxNumber\"/>\r\n      </div>\r\n      <div class=\"form-field-container\">\r\n        <span class=\"label\">Ország</span>\r\n        <input class=\"input-field\" formControlName=\"country\"/>\r\n      </div>\r\n      <div class=\"form-field-container\">\r\n        <span class=\"label\">Város</span>\r\n        <input class=\"input-field\" formControlName=\"city\"/>\r\n      </div>\r\n      <div class=\"form-field-container\">\r\n        <span class=\"label\">Utca, házszám</span>\r\n        <input class=\"input-field\" formControlName=\"address\"/>\r\n      </div>\r\n      <div class=\"form-field-container\">\r\n        <span class=\"label\">Irányítószám</span>\r\n        <input class=\"input-field\" formControlName=\"zipCode\"/>\r\n      </div>\r\n    </div>\r\n    <div class=\"divider\"></div>\r\n    <div class=\"form-block\">\r\n      <div class=\"form-field-container\">\r\n        <span class=\"label\">Telefonszám</span>\r\n        <input class=\"input-field\" formControlName=\"phoneNumber\"/>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <button class=\"button save-button\" type=\"submit\" (click)=\"saveData()\">Mentés</button>\r\n</form>\r\n"
        },
        {
            "name": "ProfileComponent",
            "id": "component-ProfileComponent-98818d2fe124f92191cd48606d8551d710945012db9b5dd78a269a3132e795c5be89e804886ff4a93bcc8be8a2e1fcb0b3370a5a6003a112a15d9403424c2b4d",
            "file": "projects/aprosag-webshop/src/app/pages/profile/profile.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-profile",
            "styleUrls": [
                "./profile.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./profile.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthService",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "menus",
                    "defaultValue": "[\r\n    {text: \"Adataim\", url: \"personal-data\"},\r\n    {text: \"Rendeléseim\", url: \"orders\"},\r\n    {text: \"Kedvenceim\", url: \"favorites\"},\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "userService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UserService",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder} from \"@angular/forms\";\r\nimport {AuthService} from \"../../services/auth/auth.service\";\r\nimport {User} from \"../../model/user.model\";\r\nimport {Observable} from \"rxjs\";\r\nimport {tap} from \"rxjs/operators\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {OrderService} from \"../../services/order/order.service\";\r\nimport {Order} from \"../../model/order.model\";\r\nimport {UserDto} from \"../../model/dto/user.dto\";\r\nimport {UserService} from \"../../services/user/user.service\";\r\nimport {ItemsService} from \"../../services/item/items.service\";\r\nimport {Item} from \"../../model/item.model\";\r\nimport {CartService} from \"../../services/cart/cart.service\";\r\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\r\nimport {ConfirmationComponent} from \"../../shared/popups/confirmation/confirmation.component\";\r\nimport {EmailSentComponent} from \"../contacts/email-sent/email-sent.component\";\r\n\r\n@Component({\r\n  selector: 'aprosag-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent {\r\n  menus: {text: string, url: string}[] = [\r\n    {text: \"Adataim\", url: \"personal-data\"},\r\n    {text: \"Rendeléseim\", url: \"orders\"},\r\n    {text: \"Kedvenceim\", url: \"favorites\"},\r\n  ]\r\n  constructor(private fb: FormBuilder,\r\n              public userService: UserService,\r\n              private toastr: ToastrService,\r\n              public authService: AuthService,\r\n              private cartService: CartService,\r\n              private modalService: NgbModal) {\r\n  }\r\n\r\n  logout() {\r\n    console.log(\"lol\");\r\n    let modalRef = this.modalService.open(ConfirmationComponent, {\r\n      backdropClass: 'modal-dialog-backdrop',\r\n      modalDialogClass: 'modal-dialog-centered'\r\n    });\r\n    modalRef.componentInstance.title = \"Biztos?\";\r\n    modalRef.componentInstance.text = \"Biztos ki szeretnél jelentkezni?\";\r\n    modalRef.closed.subscribe((result: boolean) => {\r\n      if(!result) return;\r\n\r\n      this.authService.logout().then(() => {\r\n        this.cartService.emptyCart();\r\n      });\r\n    })\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n\r\n.profile-page-container {\r\n  font-family: lato, Helvetica, sans-serif;\r\n  color: $font-color;\r\n  height: 100%;\r\n  min-height: 1000px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  @include background('/assets/Backgrounds/Home_BG.svg');\r\n\r\n  .profile-container {\r\n    width: $content-percentage-width;\r\n    max-width: $content-max-width;\r\n\r\n\r\n    @media (max-width: $breakpoint-sm) {\r\n      width: 100%;\r\n      flex-direction: column;\r\n      margin-top: 0;\r\n    }\r\n\r\n    .title {\r\n      @include title;\r\n    }\r\n\r\n    .content-container {\r\n      display: flex;\r\n\r\n      @media (max-width: $breakpoint-sm) {\r\n        flex-direction: column;\r\n      }\r\n\r\n      .content {\r\n        padding-left: 20px;\r\n        padding-right: 20px;\r\n\r\n        width: 100%;\r\n\r\n        @media (max-width: $breakpoint-sm) {\r\n          margin-top: 20px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .side-menu {\r\n      background-color: white;\r\n      padding: 20px;\r\n      display: flex;\r\n      flex-direction: column;\r\n      width: 30%;\r\n      height: fit-content;\r\n      font-weight: bold;\r\n\r\n      @media (max-width: $breakpoint-sm) {\r\n        width: 100%;\r\n        flex-direction: row;\r\n        padding: 10px;\r\n      }\r\n\r\n      .nav-item {\r\n        width: fit-content;\r\n        cursor: pointer;\r\n        font-size: 1.1em;\r\n        padding-bottom: 5px;\r\n        margin-bottom: 30px;\r\n\r\n        @media (max-width: $breakpoint-sm) {\r\n          width: 100%;\r\n          margin: 5px;\r\n          text-align: center;\r\n        }\r\n\r\n        .link {\r\n          color: $green-line;\r\n          font-weight: bold;\r\n          cursor: pointer;\r\n\r\n        }\r\n\r\n        &.selected {\r\n          color: $green-line;\r\n          border-bottom: 4px solid $green-line;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./profile.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 29,
                "jsdoctags": [
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "userService",
                        "type": "UserService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "modalService",
                        "type": "NgbModal",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"profile-page-container\">\r\n  <div class=\"profile-container\">\r\n    <div class=\"title\">Fiókom</div>\r\n    <div class=\"content-container\">\r\n      <div class=\"side-menu\">\r\n        <div *ngFor=\"let menu of menus\" class=\"nav-item\" routerLinkActive=\"selected\"\r\n             [routerLink]=\"menu.url\">{{menu.text}}</div>\r\n        <div class=\"nav-item\" (click)=\"logout()\">Kijelentkezés</div>\r\n      </div>\r\n      <div class=\"content\">\r\n        <router-outlet></router-outlet>\r\n      </div>\r\n    </div>\r\n  </div>\r\n"
        },
        {
            "name": "RegisterComponent",
            "id": "component-RegisterComponent-c387fe44c20fe5512e9826e33153717b14c890f0e26ec639a032205ad36c6787998ecaac02159bc595dc9fed2792b309dc268e7d4c2085b25c5c5d396216f618",
            "file": "projects/aprosag-webshop/src/app/pages/register/register.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-register",
            "styleUrls": [
                "./register.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./register.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "registerForm",
                    "defaultValue": "this.fb.group({\r\n    email: ['', [Validators.email, Validators.required]],\r\n    password: [''],\r\n    confirmPassword: ['']\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "methodsClass": [
                {
                    "name": "goToLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "signup",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from \"../../services/auth/auth.service\";\r\nimport {FormBuilder, FormControl, Validators} from \"@angular/forms\";\r\nimport {Router} from \"@angular/router\";\r\nimport {ToastrService} from \"ngx-toastr\";\r\nimport {LoadingService} from \"../../services/loading/loading.service\";\r\n\r\n@Component({\r\n  selector: 'aprosag-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent {\r\n  registerForm = this.fb.group({\r\n    email: ['', [Validators.email, Validators.required]],\r\n    password: [''],\r\n    confirmPassword: ['']\r\n  })\r\n\r\n\r\n  constructor(private authService: AuthService,\r\n              private fb: FormBuilder,\r\n              private router: Router,\r\n              private toastr: ToastrService,\r\n              private loadingService: LoadingService) {\r\n  }\r\n\r\n  signup() {\r\n    if (!this.registerForm.get('email')?.valid) {\r\n      this.toastr.error('Hibás email cím!');\r\n      return;\r\n    } else if (this.registerForm.get('password')?.value !== this.registerForm.get('confirmPassword')?.value) {\r\n      this.toastr.error('A két jelszó nem egyezik meg!');\r\n      return;\r\n    } else if(this.registerForm.get('password')?.value.length < 6){\r\n      this.toastr.error('A jelszónak legalább 6 karakter hosszúnak kell lennie!');\r\n      return;\r\n    }\r\n\r\n\r\n    this.loadingService.addProcess('register');\r\n    this.authService.signup(this.registerForm.get('email')?.value, this.registerForm.get('password')?.value).then((result) => {\r\n      this.loadingService.removeProcess('register');\r\n      this.toastr.success('Sikeres regisztráció!');\r\n      this.router.navigateByUrl('items');\r\n    }, (error) => {\r\n      console.log(error);\r\n      this.loadingService.removeProcess('register');\r\n      this.toastr.error('Sajnáljuk, valami hiba történt :(');\r\n    })\r\n  }\r\n\r\n  goToLogin() {\r\n    this.router.navigateByUrl('login');\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n.signup-page-container {\r\n  color: $font-color !important;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  height: 100%;\r\n  padding-top: 35px;\r\n\r\n  @include background('/assets/Backgrounds/Special_BG.svg');\r\n\r\n  font-family: lato, Helvetica, sans-serif;\r\n\r\n  .signup-page {\r\n    width: $content-percentage-width;\r\n    max-width: $content-max-width;\r\n\r\n    display: flex;\r\n    gap: 25px;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    @media (max-width: $breakpoint-md) {\r\n      width: 100%;\r\n      max-width: auto;\r\n      padding: 0 10px;\r\n    }\r\n\r\n    .title {\r\n      @include title;\r\n    }\r\n\r\n    .form-container {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 25px;\r\n      align-items: center;\r\n      max-width: 500px;\r\n      width: 100%;\r\n\r\n      form {\r\n        width: 100%;\r\n\r\n        input {\r\n          @include input-field;\r\n          margin-bottom: 20px;\r\n        }\r\n\r\n        .signup-text {\r\n          text-align: center;\r\n          font-size: 16px;\r\n          font-weight: 700;\r\n          margin-top: 50px;\r\n        }\r\n\r\n        .button {\r\n          margin: 20px auto;\r\n\r\n          &.signup-button {\r\n            @include button;\r\n\r\n            padding-left: 20px;\r\n            padding-right: 20px;\r\n          }\r\n\r\n          &.login-button {\r\n            @include button($font-color);\r\n\r\n            padding-left: 20px;\r\n            padding-right: 20px;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./register.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "loadingService",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 18,
                "jsdoctags": [
                    {
                        "name": "authService",
                        "type": "AuthService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fb",
                        "type": "FormBuilder",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "toastr",
                        "type": "ToastrService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "loadingService",
                        "type": "LoadingService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"signup-page-container\">\r\n  <div class=\"signup-page\">\r\n    <div class=\"title\">Regisztráció</div>\r\n    <div class=\"form-container\">\r\n      <form [formGroup]=\"registerForm\">\r\n        <div>\r\n          <input type=\"email\" formControlName=\"email\" placeholder=\"Email cím\"/>\r\n        </div>\r\n        <div>\r\n          <input type=\"password\" name=\"password\" formControlName=\"password\" placeholder=\"Jelszó\"/>\r\n        </div>\r\n        <div>\r\n          <input type=\"password\" name=\"confirmPassword\" formControlName=\"confirmPassword\" placeholder=\"Jelszó mégegyszer\"/>\r\n        </div>\r\n        <button class=\"button signup-button\" type=\"submit\" (click)=\"signup()\">Regisztráció</button>\r\n        <div>\r\n          <div class=\"signup-text\">Van már fiókod?</div>\r\n          <button class=\"button login-button\" type=\"button\" (click)=\"goToLogin()\">Bejelentkezés</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n"
        },
        {
            "name": "ShippingOptionsComponent",
            "id": "component-ShippingOptionsComponent-ac599601e01f4999fefdd20167eb79a258fbcde620e6392dc8b0352efc0f28688c2eb5efeac7c3148d6536f2fa0c33ae88f36edf4b71524987beb5867ffd364e",
            "file": "projects/aprosag-webshop/src/app/pages/cart/shipping-options/shipping-options.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-shipping-options",
            "styleUrls": [
                "./shipping-options.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./shipping-options.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cartService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CartService",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\r\nimport {OrderService} from \"../../../services/order/order.service\";\r\nimport {CartService} from \"../../../services/cart/cart.service\";\r\n\r\n@Component({\r\n  selector: 'aprosag-shipping-options',\r\n  templateUrl: './shipping-options.component.html',\r\n  styleUrls: ['./shipping-options.component.scss']\r\n})\r\nexport class ShippingOptionsComponent  {\r\n\r\n  constructor(public cartService: CartService) {\r\n\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".option{\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  margin-bottom: 15px;\r\n\r\n  .input-field{\r\n    display: flex;\r\n\r\n    .radio-button{\r\n      margin-top: 5px;\r\n    }\r\n  }\r\n\r\n  .option-label{\r\n    margin: 0;\r\n    margin-left: 20px;\r\n    width: 100%;\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    .label-name{\r\n      max-width: 180px;\r\n    }\r\n\r\n    .label-value{\r\n      width: 80px;\r\n      text-align: right;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./shipping-options.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "cartService",
                        "type": "CartService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"shipping-options-container\">\r\n  <div class=\"shipping-options\">\r\n    <div class=\"option\" *ngFor=\"let option of cartService.shippingTypes\">\r\n      <div class=\"input-field\">\r\n        <input class=\"radio-button\" type=\"radio\" id=\"{{option.name}}\" name=\"option\" [value]=\"option\"\r\n               [(ngModel)]=\"cartService.selectedShippingType\"\r\n               checked>\r\n      </div>\r\n      <label class=\"option-label\" for=\"{{option.name}}\">\r\n        <span class=\"label-name\">{{option.name}}</span>\r\n        <span class=\"label-value\">{{option.value}} Ft</span>\r\n      </label>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "StepperComponent",
            "id": "component-StepperComponent-4dc536e20ec5654569d9e664feb82e391b368ab18821ce2b6f47e33c863c9dd4fd8915ac9e0d1d786735dad10cc91a14bdb34e2d25857b6ecd0575ad09412d48",
            "file": "projects/aprosag-webshop/src/app/shared/components/stepper/stepper.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-stepper",
            "styleUrls": [
                "./stepper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./stepper.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "allowZero",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "maxValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number | undefined",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "changeValue",
                    "args": [
                        {
                            "name": "amount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "amount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, EventEmitter, Input, Output} from '@angular/core';\r\nimport {faArrowLeft, faArrowRight} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {debug} from \"util\";\r\n\r\n@Component({\r\n  selector: 'aprosag-stepper',\r\n  templateUrl: './stepper.component.html',\r\n  styleUrls: ['./stepper.component.scss']\r\n})\r\nexport class StepperComponent  {\r\n  @Input()\r\n  value: number = 0;\r\n\r\n  @Input()\r\n  allowZero: boolean;\r\n\r\n  @Input()\r\n  maxValue: number | undefined;\r\n\r\n  @Output()\r\n  valueChange = new EventEmitter<number>();\r\n\r\n  constructor() {\r\n    this.allowZero = false;\r\n    this.value = this.allowZero ? 0 : 1;\r\n  }\r\n\r\n  changeValue(amount: number){\r\n    this.value += amount;\r\n    if(this.maxValue && this.value > this.maxValue){\r\n      this.value = this.maxValue;\r\n    }\r\n\r\n    if(this.allowZero && this.value < 0){\r\n      this.value = 0;\r\n    } else if(!this.allowZero && this.value < 1){\r\n      this.value = 1;\r\n    }\r\n\r\n    this.valueChange.emit(this.value);\r\n  }\r\n\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n\r\n:host{\r\n  display: block;\r\n}\r\n\r\n.stepper-container{\r\n  background-color: whitesmoke;\r\n  height: 50px;\r\n  color: $font-color;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between ;\r\n  user-select: none;\r\n\r\n  font-family: lato, Helvetica sans-serif;\r\n\r\n  border-radius: 100px;\r\n  border-bottom: 1px solid $font-color;\r\n  border-top: 1px solid $font-color;\r\n\r\n  .arrow{\r\n    background-color: white;\r\n    border: 1px solid $font-color;\r\n    border-radius: 100px;\r\n\r\n    cursor: pointer;\r\n\r\n    height: 50px;\r\n    width: 50px;\r\n\r\n    font-size: 20px;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &.disabled{\r\n      opacity: 0.5\r\n    }\r\n  }\r\n\r\n  .content-container{\r\n    height: 100%;\r\n\r\n    position: relative;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    font-size: 17px;\r\n    font-weight: 700;\r\n    padding: 0 10px;\r\n  }\r\n}\r\n",
                    "styleUrl": "./stepper.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 21
            },
            "templateData": "<div class=\"stepper-container\">\r\n  <span class=\"arrow left\" [ngClass]=\"{disabled: !allowZero && value === 1}\" (click)=\"changeValue(-1)\" >\r\n    <img class=\"left-arrow\" src=\"../../../../assets/Icons/Arrow_Grey.svg\" style=\"transform: rotate(180deg)\" height=\"50px\">\r\n  </span>\r\n\r\n  <span class=\"content-container\">\r\n    {{value}}\r\n  </span>\r\n\r\n  <span class=\"arrow right\" [ngClass]=\"{disabled: maxValue && value >= maxValue }\" (click)=\"changeValue(1)\">\r\n    <img class=\"right-arrow\" src=\"../../../../assets/Icons/Arrow_Grey.svg\" height=\"50px\">\r\n  </span>\r\n</div>\r\n"
        },
        {
            "name": "SuccessfulOrderComponent",
            "id": "component-SuccessfulOrderComponent-b886374ba2ac543819af104522d75c12a8afe516006c7b4ec82394aaaacf4798001e779ef3bed06a458144c0fba361ed1c2e2d13e7ba8059fbfb940c69a36814",
            "file": "projects/aprosag-webshop/src/app/shared/popups/successful-order/successful-order.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-successful-order",
            "styleUrls": [
                "./successful-order.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./successful-order.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "orderNumber",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "goToItems",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'aprosag-successful-order',\r\n  templateUrl: './successful-order.component.html',\r\n  styleUrls: ['./successful-order.component.scss']\r\n})\r\nexport class SuccessfulOrderComponent {\r\n  @Input() orderNumber: string = \"\";\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  goToItems() {\r\n    this.router.navigateByUrl(\"items\");\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/mixins\";\r\n@import \"projects/aprosag-webshop/src/variables\";\r\n\r\n.successful-order-container{\r\n  margin: 25px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 25px;\r\n  align-items: center;\r\n  font-size: 16px;\r\n  color: $font-color;\r\n\r\n  .title{\r\n    @include title;\r\n    text-align: center;\r\n  }\r\n\r\n  .order-number{\r\n    font-weight: 600;\r\n  }\r\n\r\n  .button-container{\r\n    .button{\r\n      @include button;\r\n      padding: 0 20px;\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./successful-order.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "templateData": "<div class=\"successful-order-container\">\r\n  <div class=\"title\">Rendelés megerősítve!</div>\r\n  <div class=\"order-number\">\r\n    Rendelésszámod: {{orderNumber}}\r\n  </div>\r\n  <div class=\"thank-you-text\">\r\n    Köszönjük, hogy megtiszteltél bizalmaddal! Hamarosan küldünk egy megerősitő emailt, melyben minden információt megtalálsz. A feladásról egy másik emailben értesitünk.\r\n    </div>\r\n  <div class=\"thank-you\">\r\n    Köszönjük rendelésed!\r\n  </div>\r\n\r\n  <div class=\"button-container\">\r\n    <button class=\"button\" (click)=\"goToItems()\">Vissza a kezdőoldalra!</button>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "WhyIsItSpecialComponent",
            "id": "component-WhyIsItSpecialComponent-23473051834ef0a6efbd3086296d84b6efb34044bb25f2eefebfbf2432293e731b85d4f3a7bd3a01494098201e8518225cc6699da6331805a19ba0fdb438a8fb",
            "file": "projects/aprosag-webshop/src/app/pages/why-is-it-special/why-is-it-special.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "aprosag-why-is-it-special",
            "styleUrls": [
                "./why-is-it-special.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./why-is-it-special.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'aprosag-why-is-it-special',\r\n  templateUrl: './why-is-it-special.component.html',\r\n  styleUrls: ['./why-is-it-special.component.scss']\r\n})\r\nexport class WhyIsItSpecialComponent {\r\n\r\n  constructor() { }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"projects/aprosag-webshop/src/variables\";\r\n@import \"projects/aprosag-webshop/src/mixins\";\r\n\r\n\r\n.special-page-container{\r\n  font-family: lato, Helvetica, sans-serif;\r\n  color: $font-color;\r\n\r\n\r\n  @include background('/assets/Backgrounds/Special_BG.svg');\r\n\r\n  .special-container{\r\n    width: $content-percentage-width;\r\n    max-width: $content-max-width;\r\n\r\n    margin: 0 auto;\r\n    margin-bottom: 35px;\r\n\r\n    @media (max-width: $breakpoint-md) {\r\n      text-align: center;\r\n    }\r\n\r\n      @media (max-width: $breakpoint-sm) {\r\n      width: 100%;\r\n      padding: 0 15px;\r\n\r\n      text-align: center;\r\n    }\r\n\r\n    padding-bottom: 100px;\r\n\r\n\r\n    .title{\r\n      @include title;\r\n    }\r\n\r\n    .paragraphs{\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 50px;\r\n\r\n      .paragraph{\r\n        width: 100%;\r\n        display: flex;\r\n        gap: 25px;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        @media (max-width: $breakpoint-md) {\r\n          flex-direction: column-reverse;\r\n        }\r\n\r\n        img{\r\n          width: 100%;\r\n        }\r\n\r\n        .subtitle{\r\n          @include subtitle;\r\n        }\r\n\r\n        .image-container {\r\n          width: 40%;\r\n          @media (max-width: $breakpoint-md) {\r\n            width: 80%;\r\n          }\r\n        }\r\n\r\n        .text-container {\r\n          width: 60%;\r\n          @media (max-width: $breakpoint-md) {\r\n            width: 100%;\r\n          }\r\n          .button{\r\n            margin-top: 35px;\r\n          }\r\n\r\n          &.standalone{\r\n            width: 100%;\r\n          }\r\n        }\r\n      }\r\n\r\n      .button-container{\r\n        display: flex;\r\n        justify-content:  center;\r\n        margin-bottom: 25px;\r\n\r\n        .button{\r\n          @include button;\r\n          width: 35%;\r\n          min-width: 325px;\r\n\r\n          @media (max-width: $breakpoint-md) {\r\n            width: 80%;\r\n          }\r\n        }\r\n      }\r\n\r\n      .standalone-image-container{\r\n        overflow: hidden;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        height: 300px;\r\n\r\n        .image{\r\n          width: 100%;\r\n\r\n          @media (max-width: $breakpoint-md) {\r\n            width: 80%;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n",
                    "styleUrl": "./why-is-it-special.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 8
            },
            "templateData": "<div class=\"special-page-container\">\r\n  <div class=\"special-container\">\r\n    <div class=\"title\">Mitől különlegesek az Apróság könyvek?</div>\r\n    <div class=\"paragraphs\">\r\n      <div class=\"paragraph\">\r\n        <div class=\"text-container\">\r\n          <div class=\"subtitle\">Apróság könyvek</div>\r\n          <div>\r\n            <p>Az Apróság Könyvek minden eddig megjelent kötete, színezője vagy bármelyik kiegészítője roppant\r\n              odafigyeléssel és szeretettel készült a gyermekeknek. Mindhárman próbáltuk legjobb tudásunk és a\r\n              gyereknevelésből származó (kisebb-nagyobb) tapasztalatunk szerint létrehozni a verseket vagy akár a\r\n              képeket.</p>\r\n            <p>Célunk mindvégig az volt, hogy a szórakoztatás mellett tanítsanak is vagy éppen fejlesszék a\r\n              legkisebbek különböző készségeit.</p>\r\n            <p>A nagyobb élmény elérése végett pedig a színezőinket, az ingyenesen letölthető készségfejlesztő\r\n              játékainkat, foglalkoztató füzetünket mind-mind úgy készítettük el, hogy ne csak külön-külön, de\r\n              együtt is használhatók legyenek.</p>\r\n            <p>Ha pedig már nagyobbak lesznek a gyerekek és szinte kívülről ismerik már a könyvet, barkóba\r\n              játszására is tökéletesen megfelelnek, hiszen egyik versünk sem foglalja magába az állat nevét, amiről\r\n              szól!</p>\r\n          </div>\r\n        </div>\r\n        <div class=\"image-container\">\r\n          <img class=\"image\" src=\"assets/Special/Special_1.jpg\"/>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"paragraph\">\r\n        <div class=\"image-container\">\r\n          <img class=\"image\" src=\"assets/Special/Special_2.jpg\"/>\r\n        </div>\r\n        <div class=\"text-container\">\r\n          <div class=\"subtitle\">Miért jó, ha verset olvasunk a gyerekeknek?</div>\r\n          <div>\r\n            <p>A versolvasás pici kortól fejleszti a beszédfejlődést. Bővíti a szókincset, ritmikussága miatt\r\n              megkönnyíti anyanyelvünk elsajátítását. A rímek bizonyítottan jó hatással vannak a megkésett\r\n              beszédfejlődésre.</p>\r\n            <p>Mindkét eddig megjelent könyvünkben 40 db állatokról szóló kis versecske található. Maga a könyv\r\n              ezáltal hosszúnak tűnhet esti meseolvasáshoz, mivel több mint 80 oldalas képekkel együtt. Viszont a\r\n              versek rövidsége miatt könnyen fogyasztható már kisbaba kortól is.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"button-container\">\r\n        <button class=\"button\" routerLink=\"/items\">Szeretnék egyet</button>\r\n      </div>\r\n\r\n\r\n      <div class=\"paragraph\">\r\n        <div class=\"text-container standalone\">\r\n          <div class=\"subtitle\">Miért jók a színezőink?</div>\r\n          <div>\r\n            <p>Mindkét kötetünkhöz készítettünk színezőket is amikben a könyvben található rajzokat festhetik ki a\r\n              gyerekek kedvükre. A képek mellett minden állatról egy-egy kérdés található, amikre a választ van,\r\n              hogy a könyvben szereplő versekből találhatják ki a gyerekek, de van, hogy saját képzelőerejükre lesz\r\n              szükségük. Akár a szülök segítségével is remek szórakozást nyújthat minden kisgyermek számára.</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"standalone-image-container\">\r\n        <img class=\"image\" src=\"assets/Special/Special_3.jpg\"/>\r\n      </div>\r\n\r\n      <div class=\"button-container\">\r\n        <button class=\"button\" routerLink=\"/items/Ynq7vrDI0qORP0VWcvX0\">Megnézem</button>\r\n      </div>\r\n\r\n      <div class=\"paragraph\">\r\n        <div class=\"text-container\">\r\n          <div class=\"subtitle\">Mitől egyedi a foglalkoztató füzetünk?</div>\r\n          <div>\r\n            <p>Karácsonyra szerettük volna meglepni követőinket egy limitált kiadású, kreatív füzettel, így született\r\n              meg a Decemberi Apróságok.</p>\r\n            <p>A három decemberi ünnepet foglalja magában, a Mikulást, a karácsonyt és a szilvesztert. Mindegyik\r\n              ünnephez különböző játékos feladatokat készítettünk, hogy minél változatosabb legyen. Emellett\r\n              szerettük volna, ha végre tudunk adni a gyerekek kezébe egy olyan foglalkoztatót, melyben a Mikulás\r\n              nem a karácsonyi ajándékokat hozza, hanem a saját kis piros zsákját, december 6-án! A füzet\r\n              közepében 2 oldalnyi matrica található, ugyanis jó pár feladathoz szükség van rájuk. Feri papa\r\n              gyönyörű versei olvashatók minden ünnep előtti részen, lezárásként pedig három kivágható\r\n              meglepetés várja a gyerekeket. Minden oldal fekete-fehérben van kinyomtatva (kivéve a matricákat),\r\n              ez lehetővé teszi, hogy a feladatok megoldása után ki is színezhessék a rajzokat a gyerekek.</p>\r\n          </div>\r\n          <div class=\"button-container\">\r\n            <button class=\"button\" routerLink=\"/items/sggb8hm2YzbKqtN4zPcV\">További info</button>\r\n          </div>\r\n        </div>\r\n        <div class=\"image-container\">\r\n          <img class=\"image\" src=\"assets/Special/Special_4.jpg\"/>\r\n        </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-a5ff5793706edef5ace4b13a1da80dd9c3aac1791a6bf500715115ca3c5a180df33a20b16a2f7a3a86ca0578be44531527dfdcc42e66bfd54196d3cc9375e04f",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/aprosag-webshop/src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import {APP_INITIALIZER, NgModule} from '@angular/core';\r\nimport {BrowserModule} from '@angular/platform-browser';\r\n\r\nimport {AppRoutingModule} from './app-routing.module';\r\nimport {AppComponent} from './app.component';\r\nimport {FooterComponent} from './shared/components/footer/footer.component';\r\nimport {HeaderComponent} from './shared/components/header/header.component';\r\nimport {ItemsComponent} from './pages/items/items.component';\r\nimport {ContactsComponent} from './pages/contacts/contacts.component';\r\nimport {WhyIsItSpecialComponent} from './pages/why-is-it-special/why-is-it-special.component';\r\nimport {environment} from \"../environments/environment\";\r\nimport {initializeApp, provideFirebaseApp} from '@angular/fire/app';\r\nimport {provideAuth, getAuth} from '@angular/fire/auth';\r\nimport {provideFirestore, getFirestore} from '@angular/fire/firestore';\r\nimport {ItemCardComponent} from './pages/items/item-card/item-card.component';\r\nimport {getStorage, provideStorage} from \"@angular/fire/storage\";\r\nimport {FontAwesomeModule} from '@fortawesome/angular-fontawesome';\r\nimport {NewsletterComponent} from './shared/components/newsletter/newsletter.component';\r\nimport {HttpClientModule} from \"@angular/common/http\";\r\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\r\nimport {ItemComponent} from \"./pages/item/item.component\";\r\nimport {LoginComponent} from './pages/login/login.component';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {RegisterComponent} from './pages/register/register.component';\r\nimport {ProfileComponent} from './pages/profile/profile.component';\r\nimport {ToastrModule} from \"ngx-toastr\";\r\nimport {BrowserAnimationsModule} from \"@angular/platform-browser/animations\";\r\nimport {CartModalComponent} from './shared/components/header/cart-modal/cart-modal.component';\r\nimport {NgbModal, NgbModalModule, NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatButtonModule} from \"@angular/material/button\";\r\nimport {CartComponent} from './pages/cart/cart.component';\r\nimport {ShippingOptionsComponent} from './pages/cart/shipping-options/shipping-options.component';\r\nimport {CashDeskComponent} from './pages/cash-desk/cash-desk.component';\r\nimport {PaymentOptionsComponent} from './pages/cash-desk/payment-options/payment-options.component';\r\nimport {AboutUsComponent} from \"./pages/about-us/about-us.component\";\r\nimport {StepperComponent} from './shared/components/stepper/stepper.component';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\r\nimport {MatInputModule} from \"@angular/material/input\";\r\nimport {MatIconModule} from \"@angular/material/icon\";\r\nimport {FlexLayoutModule} from \"@angular/flex-layout\";\r\nimport {MatSidenavModule} from \"@angular/material/sidenav\";\r\nimport {SidebarModule} from \"primeng/sidebar\";\r\nimport {AddedToCartComponent} from './shared/popups/added-to-cart/added-to-cart.component';\r\nimport {SuccessfulOrderComponent} from './shared/popups/successful-order/successful-order.component';\r\nimport { FavoriteComponent } from './shared/components/favorite/favorite.component';\r\nimport { FavoritesComponent } from './pages/profile/favorites/favorites.component';\r\nimport { OrdersComponent } from './pages/profile/orders/orders.component';\r\nimport {PersonalDataComponent} from \"./pages/profile/personal-data/personal-data.component\";\r\nimport { GalleryComponent } from './pages/items/gallery/gallery.component';\r\nimport {SwiperModule} from \"swiper/angular\";\r\nimport {EmailSentComponent} from \"./pages/contacts/email-sent/email-sent.component\";\r\nimport { ConfirmationComponent } from './shared/popups/confirmation/confirmation.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    FooterComponent,\r\n    HeaderComponent,\r\n    ItemComponent,\r\n    ItemsComponent,\r\n    AboutUsComponent,\r\n    ContactsComponent,\r\n    WhyIsItSpecialComponent,\r\n    ItemCardComponent,\r\n    NewsletterComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    ProfileComponent,\r\n    CartModalComponent,\r\n    CartComponent,\r\n    ShippingOptionsComponent,\r\n    CashDeskComponent,\r\n    PaymentOptionsComponent,\r\n    StepperComponent,\r\n    AddedToCartComponent,\r\n    SuccessfulOrderComponent,\r\n    FavoriteComponent,\r\n    FavoritesComponent,\r\n    OrdersComponent,\r\n    PersonalDataComponent,\r\n    EmailSentComponent,\r\n    GalleryComponent,\r\n    ConfirmationComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    SwiperModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatTooltipModule,\r\n    ToastrModule.forRoot({\r\n      positionClass: 'toast-top-right'\r\n    }),\r\n    provideFirebaseApp(() => initializeApp(environment.firebase)),\r\n    provideAuth(() => getAuth()),\r\n    provideStorage(() => getStorage()),\r\n    provideFirestore(() => getFirestore()),\r\n    FontAwesomeModule,\r\n    FormsModule,\r\n    MatBadgeModule,\r\n    ReactiveFormsModule,\r\n    FontAwesomeModule,\r\n    NgbModule,\r\n    NgbModalModule,\r\n    MatButtonModule,\r\n    MatFormFieldModule,\r\n    MatStepperModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    FlexLayoutModule,\r\n    MatSidenavModule,\r\n    SidebarModule\r\n  ],\r\n  providers: [  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AboutUsComponent"
                        },
                        {
                            "name": "AddedToCartComponent"
                        },
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "CartComponent"
                        },
                        {
                            "name": "CartModalComponent"
                        },
                        {
                            "name": "CashDeskComponent"
                        },
                        {
                            "name": "ConfirmationComponent"
                        },
                        {
                            "name": "ContactsComponent"
                        },
                        {
                            "name": "EmailSentComponent"
                        },
                        {
                            "name": "FavoriteComponent"
                        },
                        {
                            "name": "FavoritesComponent"
                        },
                        {
                            "name": "FooterComponent"
                        },
                        {
                            "name": "GalleryComponent"
                        },
                        {
                            "name": "HeaderComponent"
                        },
                        {
                            "name": "ItemCardComponent"
                        },
                        {
                            "name": "ItemComponent"
                        },
                        {
                            "name": "ItemsComponent"
                        },
                        {
                            "name": "LoginComponent"
                        },
                        {
                            "name": "NewsletterComponent"
                        },
                        {
                            "name": "OrdersComponent"
                        },
                        {
                            "name": "PaymentOptionsComponent"
                        },
                        {
                            "name": "PersonalDataComponent"
                        },
                        {
                            "name": "ProfileComponent"
                        },
                        {
                            "name": "RegisterComponent"
                        },
                        {
                            "name": "ShippingOptionsComponent"
                        },
                        {
                            "name": "StepperComponent"
                        },
                        {
                            "name": "SuccessfulOrderComponent"
                        },
                        {
                            "name": "WhyIsItSpecialComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        },
                        {
                            "name": "provideAuth(() => getAuth())"
                        },
                        {
                            "name": "provideFirebaseApp(() => initializeApp(environment"
                        },
                        {
                            "name": "provideFirestore(() => getFirestore())"
                        },
                        {
                            "name": "provideStorage(() => getStorage())"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-c0a2af4692072650561d911a6ea5ad56182f913994a340d1802520674b2a344d0f7c6e19cf540317375df5b1cd46695c646bd9249471065a5448e5135e590b7e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/aprosag-webshop/src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {ItemsComponent} from \"./pages/items/items.component\";\r\nimport {AboutUsComponent} from \"./pages/about-us/about-us.component\";\r\nimport {ContactsComponent} from \"./pages/contacts/contacts.component\";\r\nimport {WhyIsItSpecialComponent} from \"./pages/why-is-it-special/why-is-it-special.component\";\r\nimport {ItemComponent} from \"./pages/item/item.component\";\r\nimport {LoginComponent} from \"./pages/login/login.component\";\r\nimport {RegisterComponent} from \"./pages/register/register.component\";\r\nimport {canActivate, redirectLoggedInTo, redirectUnauthorizedTo} from \"@angular/fire/auth-guard\";\r\nimport {ProfileComponent} from \"./pages/profile/profile.component\";\r\nimport {CartComponent} from \"./pages/cart/cart.component\";\r\nimport {CashDeskComponent} from \"./pages/cash-desk/cash-desk.component\";\r\nimport {ItemsResolverResolver} from './shared/resolvers/items-resolver.resolver';\r\nimport {CashDeskGuardGuard} from \"./shared/guards/cash-desk-guard.guard\";\r\nimport {PersonalDataComponent} from \"./pages/profile/personal-data/personal-data.component\";\r\nimport {OrdersComponent} from \"./pages/profile/orders/orders.component\";\r\nimport {FavoritesComponent} from \"./pages/profile/favorites/favorites.component\";\r\n\r\nconst redirectLoggedInToProfile = () => redirectLoggedInTo(['profile']);\r\nconst redirectUnauthorizedToLogin = () => redirectUnauthorizedTo(['login']);\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'items', pathMatch: 'full'},\r\n  {path: 'items', component: ItemsComponent},\r\n  {path: 'items/:id', component: ItemComponent},\r\n  {path: 'cart', component: CartComponent},\r\n  {path: 'cash-desk', component: CashDeskComponent, canActivate: [CashDeskGuardGuard]},\r\n  {path: 'login', component: LoginComponent, ...\"canActivate(redirectLoggedInToProfile)\"},\r\n  {\r\n    path: 'profile',\r\n    component: ProfileComponent,\r\n    ...\"canActivate(redirectUnauthorizedToLogin)\",\r\n    children: [\r\n      {path: '', redirectTo: 'personal-data', pathMatch: 'full'},\r\n      {path: 'personal-data', component: PersonalDataComponent},\r\n      {path: 'orders', component: OrdersComponent},\r\n      {path: 'favorites', component: FavoritesComponent},\r\n    ]\r\n  },\r\n  {path: 'signup', component: RegisterComponent},\r\n  {path: 'about-us', component: AboutUsComponent},\r\n  {path: 'contacts', component: ContactsComponent},\r\n  {path: 'why-is-it-special', component: WhyIsItSpecialComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {scrollPositionRestoration: 'top'})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule {\r\n}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "AllowingZero",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/aprosag-webshop/src/app/shared/components/stepper/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "CART_KEY",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/aprosag-webshop/src/app/services/cart/cart.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'aprosag_cart'"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/aprosag-webshop/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/aprosag-webshop/src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  firebase: {\r\n    projectId: 'aprosag-konyvek',\r\n    appId: '1:277435286213:web:5d8aa2e92f660c8e65a6ac',\r\n    storageBucket: 'aprosag-konyvek.appspot.com',\r\n    locationId: 'europe-west',\r\n    apiKey: 'AIzaSyDCLhXo-ulqGzD8g4uAj_yZKD5Plc96UEE',\r\n    authDomain: 'aprosag-konyvek.firebaseapp.com',\r\n    messagingSenderId: '277435286213',\r\n    measurementId: 'G-J9JPDSZWKC',\r\n  },\r\n  production: false,\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/aprosag-webshop/src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  firebase: {\r\n    projectId: 'aprosag-konyvek',\r\n    appId: '1:277435286213:web:5d8aa2e92f660c8e65a6ac',\r\n    storageBucket: 'aprosag-konyvek.appspot.com',\r\n    locationId: 'europe-west',\r\n    apiKey: 'AIzaSyDCLhXo-ulqGzD8g4uAj_yZKD5Plc96UEE',\r\n    authDomain: 'aprosag-konyvek.firebaseapp.com',\r\n    messagingSenderId: '277435286213',\r\n    measurementId: 'G-J9JPDSZWKC',\r\n  },\r\n  production: true\r\n}"
            },
            {
                "name": "redirectLoggedInToProfile",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/aprosag-webshop/src/app/app-routing.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => redirectLoggedInTo(['profile'])"
            },
            {
                "name": "redirectUnauthorizedToLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/aprosag-webshop/src/app/app-routing.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => redirectUnauthorizedTo(['login'])"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/aprosag-webshop/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "shippingTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/aprosag-webshop/src/app/services/cart/cart.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ShippingType[]",
                "defaultValue": "[\r\n  {name: \"Házhozszállítás GLS-sel\", value: 1490},\r\n  {name: \"Foxspost csomagautomata\", value: 700},\r\n  {name: \"Személyes átvétel Mosonmagyaróváron\", value: 0}\r\n]"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/aprosag-webshop/src/app/shared/components/stepper/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<StepperComponent>",
                "defaultValue": "(args: StepperComponent) => ({\n  props: args,\n})"
            },
            {
                "name": "WithMaxValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/aprosag-webshop/src/app/shared/components/stepper/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "WithValue",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/aprosag-webshop/src/app/shared/components/stepper/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [],
        "typealiases": [],
        "enumerations": [
            {
                "name": "COVER_TYPE",
                "childs": [
                    {
                        "name": "HARD_COVER",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SOFT_COVER",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/aprosag-webshop/src/app/model/item.model.ts"
            },
            {
                "name": "COVER_TYPE",
                "childs": [
                    {
                        "name": "HARD_COVER",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "SOFT_COVER",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/aprosag-webshop/src/app/model/dto/item.dto.ts"
            },
            {
                "name": "OrderState",
                "childs": [
                    {
                        "name": "SENT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "SENT"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/aprosag-webshop/src/app/model/order.model.ts"
            }
        ],
        "groupedVariables": {
            "projects/aprosag-webshop/src/app/shared/components/stepper/stepper.stories.ts": [
                {
                    "name": "AllowingZero",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/aprosag-webshop/src/app/shared/components/stepper/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/aprosag-webshop/src/app/shared/components/stepper/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<StepperComponent>",
                    "defaultValue": "(args: StepperComponent) => ({\n  props: args,\n})"
                },
                {
                    "name": "WithMaxValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/aprosag-webshop/src/app/shared/components/stepper/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "WithValue",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/aprosag-webshop/src/app/shared/components/stepper/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ],
            "projects/aprosag-webshop/src/app/services/cart/cart.service.ts": [
                {
                    "name": "CART_KEY",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/aprosag-webshop/src/app/services/cart/cart.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'aprosag_cart'"
                },
                {
                    "name": "shippingTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/aprosag-webshop/src/app/services/cart/cart.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ShippingType[]",
                    "defaultValue": "[\r\n  {name: \"Házhozszállítás GLS-sel\", value: 1490},\r\n  {name: \"Foxspost csomagautomata\", value: 700},\r\n  {name: \"Személyes átvétel Mosonmagyaróváron\", value: 0}\r\n]"
                }
            ],
            "projects/aprosag-webshop/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/aprosag-webshop/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/aprosag-webshop/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "projects/aprosag-webshop/src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/aprosag-webshop/src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  firebase: {\r\n    projectId: 'aprosag-konyvek',\r\n    appId: '1:277435286213:web:5d8aa2e92f660c8e65a6ac',\r\n    storageBucket: 'aprosag-konyvek.appspot.com',\r\n    locationId: 'europe-west',\r\n    apiKey: 'AIzaSyDCLhXo-ulqGzD8g4uAj_yZKD5Plc96UEE',\r\n    authDomain: 'aprosag-konyvek.firebaseapp.com',\r\n    messagingSenderId: '277435286213',\r\n    measurementId: 'G-J9JPDSZWKC',\r\n  },\r\n  production: false,\r\n}"
                }
            ],
            "projects/aprosag-webshop/src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/aprosag-webshop/src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  firebase: {\r\n    projectId: 'aprosag-konyvek',\r\n    appId: '1:277435286213:web:5d8aa2e92f660c8e65a6ac',\r\n    storageBucket: 'aprosag-konyvek.appspot.com',\r\n    locationId: 'europe-west',\r\n    apiKey: 'AIzaSyDCLhXo-ulqGzD8g4uAj_yZKD5Plc96UEE',\r\n    authDomain: 'aprosag-konyvek.firebaseapp.com',\r\n    messagingSenderId: '277435286213',\r\n    measurementId: 'G-J9JPDSZWKC',\r\n  },\r\n  production: true\r\n}"
                }
            ],
            "projects/aprosag-webshop/src/app/app-routing.module.ts": [
                {
                    "name": "redirectLoggedInToProfile",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/aprosag-webshop/src/app/app-routing.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => redirectLoggedInTo(['profile'])"
                },
                {
                    "name": "redirectUnauthorizedToLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/aprosag-webshop/src/app/app-routing.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => redirectUnauthorizedTo(['login'])"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {
            "projects/aprosag-webshop/src/app/model/item.model.ts": [
                {
                    "name": "COVER_TYPE",
                    "childs": [
                        {
                            "name": "HARD_COVER",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SOFT_COVER",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/aprosag-webshop/src/app/model/item.model.ts"
                }
            ],
            "projects/aprosag-webshop/src/app/model/dto/item.dto.ts": [
                {
                    "name": "COVER_TYPE",
                    "childs": [
                        {
                            "name": "HARD_COVER",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "SOFT_COVER",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/aprosag-webshop/src/app/model/dto/item.dto.ts"
                }
            ],
            "projects/aprosag-webshop/src/app/model/order.model.ts": [
                {
                    "name": "OrderState",
                    "childs": [
                        {
                            "name": "SENT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "SENT"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/aprosag-webshop/src/app/model/order.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "projects/aprosag-webshop/src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/aprosag-webshop/src/app/app-routing.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "redirectLoggedInToProfile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/app-routing.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "redirectUnauthorizedToLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/model/cart-item.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CartItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/model/cart-item.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ShippingType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/model/dto/cart.dto.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CartItemDto",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/model/dto/item.dto.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ItemDto",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/model/dto/user.dto.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UserDto",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/model/item.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "Item",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/model/newsletter.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Newsletter",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/model/order.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Order",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/model/order.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PaymentType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/model/roles.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Roles",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/model/user.model.ts",
                "type": "class",
                "linktype": "classe",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/about-us/about-us.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AboutUsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/cart/cart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/cart/shipping-options/shipping-options.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShippingOptionsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/cash-desk/cash-desk.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CashDeskComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/cash-desk/payment-options/payment-options.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PaymentOptionsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/contacts/contacts.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ContactsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/contacts/email-sent/email-sent.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "EmailSentComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/item/item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/items/gallery/gallery.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GalleryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/items/item-card/item-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/items/items.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ItemsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/profile/favorites/favorites.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FavoritesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/profile/orders/orders.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OrdersComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/profile/personal-data/personal-data.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PersonalDataComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/profile/profile.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProfileComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/register/register.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegisterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/pages/why-is-it-special/why-is-it-special.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "WhyIsItSpecialComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/services/app/app.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/services/auth/auth.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/services/cart/cart.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CartService",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/services/cart/cart.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CART_KEY",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/services/cart/cart.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "shippingTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/services/image-cache/image-cache.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ImageCacheService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/services/item/items.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ItemsService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/services/loading/loading.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoadingService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/services/newsletter/newsletter.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "NewsletterService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/services/order/order.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OrderService",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/services/user/user.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/shared/components/favorite/favorite.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FavoriteComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/shared/components/footer/footer.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FooterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/shared/components/header/cart-modal/cart-modal.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CartModalComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/shared/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/shared/components/newsletter/newsletter.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NewsletterComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/shared/components/stepper/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "StepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/shared/components/stepper/stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AllowingZero",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/shared/components/stepper/stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/shared/components/stepper/stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithMaxValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/shared/components/stepper/stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithValue",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/shared/guards/cash-desk-guard.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "CashDeskGuardGuard",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/shared/popups/added-to-cart/added-to-cart.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AddedToCartComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/shared/popups/confirmation/confirmation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ConfirmationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/shared/popups/successful-order/successful-order.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SuccessfulOrderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/app/shared/resolvers/items-resolver.resolver.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "ItemsResolverResolver",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/aprosag-webshop/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}